// Generated by js_of_ocaml
//# buildInfo:effects=true, kind=cma, use-js-string=true, version=5.7.1+5.7.1

//# unitInfo: Provides: Ppx_derivers
//# unitInfo: Requires: Stdlib, Stdlib__Hashtbl, Stdlib__Printf
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_pop_trap = runtime.caml_pop_trap;
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 4
              ? f(a0, a1, a2, a3)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/ppx_derivers.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x01\xd7\0\0\0c\0\0\x01|\0\0\x01o\xa0,Ppx_derivers\xa0\xc1\xa0'deriver\x01\x01\x10\b\0\0;\0@@AA@@@@@\xb0\xc04src/ppx_derivers.mliI\x01\0\xda\x01\0\xda\xc0\x04\x02I\x01\0\xda\x01\0\xeb@@@@\xa1\x04\x0b@A@\xa0\xb0\xa0(register\x01\x01\x11\xd0\xc0\xc1@\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xc1@\xc0\xb3\x90\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xf2@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\xb0\xc0\x04\x1eM\x01\x01Q\x01\x01Q\xc0\x04\x1fM\x01\x01Q\x01\x01y@@\xa1\x04(A@\xa0\xb0\xa0&lookup\x01\x01\x12\xd0\xc0\xc1@\xc0\xb3\x90\x04\x1d@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x047P\x01\x01\xa9\x01\x01\xa9\xc0\x048P\x01\x01\xa9\x01\x01\xce@@\xa1\x04AB@\xa0\xb0\xa0(derivers\x01\x01\x13\xd0\xc0\xc1@\xc0\xb3\x90\x04*@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xb3\x90\xa3$listI\xa0\xc0\x92\xa0\xc0\xb3\x90\x04C@\x90@\x02\x05\xf5\xe1\0@\0\xfb\xa0\xc0\xb3\x04@@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfc@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04XS\x01\x02\x10\x01\x02\x10\xc0\x04YS\x01\x02\x10\x01\x02>@@\xa1\x04bC@@\x84\x95\xa6\xbe\0\0\0j\0\0\0\x0f\0\0\0:\0\0\0.\xa0\xa0,Ppx_derivers\x900\xff{\xaa\xd9*K\xafh\xa9q\xc8\x1b\x1dX6\xc1\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib = global_data.Stdlib,
    Stdlib_Printf = global_data.Stdlib__Printf,
    all = runtime.caml_callback(Stdlib_Hashtbl[1], [0, 42]),
    _a_ =
      [0,
       [11,
        "Ppx_deriviers.register: ",
        [3, 0, [11, " is already registered", 0]]],
       "Ppx_deriviers.register: %S is already registered"];
   function register(name, deriver, cont){
    return caml_cps_call3
            (Stdlib_Hashtbl[9],
             all,
             name,
             function(_c_){
              function _d_(_e_){
               return caml_cps_call4
                       (Stdlib_Hashtbl[5], all, name, deriver, cont);
              }
              return _c_
                      ? caml_cps_call4
                        (Stdlib_Printf[10], Stdlib[2], _a_, name, _d_)
                      : _d_(0);
             });
   }
   function lookup(name, cont){
    runtime.caml_push_trap
     (function(_b_){
       if(_b_ === Stdlib[8]) return cont(0);
       var raise = caml_pop_trap();
       return raise(caml_maybe_attach_backtrace(_b_, 0));
      });
    return caml_cps_call3
            (Stdlib_Hashtbl[6],
             all,
             name,
             function(drv){caml_pop_trap(); return cont([0, drv]);});
   }
   function derivers(param, cont){
    return caml_cps_call4
            (Stdlib_Hashtbl[14],
             function(name, drv, acc, cont){
              return cont([0, [0, name, drv], acc]);
             },
             all,
             0,
             cont);
   }
   var Ppx_derivers = [0, register, lookup, derivers];
   runtime.caml_register_global(4, Ppx_derivers, "Ppx_derivers");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJwcHhfZGVyaXZlcnMuY21hLmpzIiwic291cmNlUm9vdCI6IiIsIm5hbWVzIjpbImFsbCIsInJlZ2lzdGVyIiwibmFtZSIsImRlcml2ZXIiLCJsb29rdXAiLCJkcnYiLCJkZXJpdmVycyIsImFjYyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXVzdHViaC9EZXNrdG9wL3Byb2plY3RzL29jYW1sLXJldHJlYXQvb2NhbWwub3JnL3BsYXlncm91bmQvX29wYW0vbGliL3BweF9kZXJpdmVycy9wcHhfZGVyaXZlcnMubWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztHOzs7Ozs7Ozs7OztHOzs7Ozs7Ozs7Ozs7OztHQUVVOzs7OztJQUFOQSxNQUFNOzs7Ozs7O1lBRU5DLFNBQVNDLE1BQUtDO0lBQ2hCLE9BQUc7O2FBSERIO2FBRVNFOzs7ZUFFVCxPQUFBOzJDQUpBRixLQUVTRSxNQUFLQztjQUcyQztjQUZ4RDt3QkFDRDs0REFGU0Q7OztHQUlpQjtZQUUxQkUsT0FBT0Y7SUFDVDs7TyxzQkFFeUI7Ozs7SUFGbkIsT0FBQTs7YUFUSkY7YUFRT0U7c0JBRVBHLEssaUJBQU8sZ0JBQVBBO0dBQzJCO1lBRTNCQztJQUNGLE9BQUE7O3NCQUFrQkosTUFBS0csS0FBSUU7Y0FBTyxvQkFBaEJMLE1BQUtHLE1BQUlFO2FBQXlCO2FBZGxEUDs7O0dBYzBEOzBCQVoxREMsVUFNQUcsUUFLQUU7OztFIiwic291cmNlc0NvbnRlbnQiOlsidHlwZSBkZXJpdmVyID0gLi5cblxubGV0IGFsbCA9IEhhc2h0YmwuY3JlYXRlIDQyXG5cbmxldCByZWdpc3RlciBuYW1lIGRlcml2ZXIgPVxuICBpZiBIYXNodGJsLm1lbSBhbGwgbmFtZSB0aGVuXG4gICAgUHJpbnRmLmtzcHJpbnRmIGZhaWx3aXRoXG4gICAgICBcIlBweF9kZXJpdmllcnMucmVnaXN0ZXI6ICVTIGlzIGFscmVhZHkgcmVnaXN0ZXJlZFwiIG5hbWU7XG4gIEhhc2h0YmwuYWRkIGFsbCBuYW1lIGRlcml2ZXJcblxubGV0IGxvb2t1cCBuYW1lID1cbiAgbWF0Y2ggSGFzaHRibC5maW5kIGFsbCBuYW1lIHdpdGhcbiAgfCBkcnYgLT4gU29tZSBkcnZcbiAgfCBleGNlcHRpb24gTm90X2ZvdW5kIC0+IE5vbmVcblxubGV0IGRlcml2ZXJzICgpID1cbiAgSGFzaHRibC5mb2xkIChmdW4gbmFtZSBkcnYgYWNjIC0+IChuYW1lLCBkcnYpIDo6IGFjYykgYWxsIFtdXG4iXX0=

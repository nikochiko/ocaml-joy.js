// Generated by js_of_ocaml
//# buildInfo:effects=true, kind=cma, use-js-string=true, version=5.7.1+5.7.1

//# unitInfo: Provides: Graphics
//# unitInfo: Requires: Stdlib, Stdlib__Array, Stdlib__Callback, Stdlib__List, Stdlib__Sys
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Graphics_Graphic_failure = "Graphics.Graphic_failure",
    caml_callback = runtime.caml_callback,
    caml_check_bound = runtime.caml_check_bound,
    caml_gr_close_graph = runtime.caml_gr_close_graph,
    caml_gr_current_x = runtime.caml_gr_current_x,
    caml_gr_current_y = runtime.caml_gr_current_y,
    caml_gr_display_mode = runtime.caml_gr_display_mode,
    caml_gr_lineto = runtime.caml_gr_lineto,
    caml_gr_moveto = runtime.caml_gr_moveto,
    caml_gr_open_graph = runtime.caml_gr_open_graph,
    caml_gr_remember_mode = runtime.caml_gr_remember_mode,
    caml_gr_sigio_signal = runtime.caml_gr_sigio_signal,
    caml_gr_wait_event = runtime.caml_gr_wait_event,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_pop_trap = runtime.caml_pop_trap,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_exact_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1)
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var undef = undefined;
   runtime.jsoo_create_file
    ("/static/cmis/graphics.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0&\xc3\0\0\x07l\0\0\x1c\x9a\0\0\x1b\xfc\xa0(Graphics\xa0\xc2\xa0/Graphic_failure\x01\x01]\b\0\0#\0\x90\xa3#exnG@\x90\xa0\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xc5@@A\xb0\xc0&_none_@@\0\xff\x04\x02A@\xa1\x04\x15@B@\xa0\xb0\xa0*open_graph\x01\x01^\xd0\xc0\xc1@\xc0\xb3\x90\x04\x11@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xc6\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xc7@\x02\x05\xf5\xe1\0@\x01\xfe\xc8@\xb0\xc00src/graphics.mliW\x01\x04\xec\x01\x04\xec\xc0\x04\x02W\x01\x04\xec\x01\x05\x0b@@\xa1\x04+A@\xa0\xb0\xa0+close_graph\x01\x01_\xd0\xc0\xc1@\xc0\xb3\x90\x04\x12@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xc9\xc0\xb3\x90\x04\x16@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xca@\x02\x05\xf5\xe1\0@\x01\xfe\xcb@\xb0\xc0\x04\x14_\x01\x06\x93\x01\x06\x93\xc0\x04\x15_\x01\x06\x93\x01\x06\xb1@@\xa1\x04>B@\xa0\xb0\xa00set_window_title\x01\x01`\xd0\xc0\xc1@\xc0\xb3\x90\x04:@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xcc\xc0\xb3\x90\x04)@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xcd@\x02\x05\xf5\xe1\0@\x01\xfe\xce@\xb0\xc0\x04'b\x01\x06\xfd\x01\x06\xfd\xc0\x04(b\x01\x06\xfd\x01\x07\"@@\xa1\x04QC@\xa0\xb0\xa0-resize_window\x01\x01a\xd0\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xcf\xc0\xc1@\xc0\xb3\x90\x04\b@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd0\xc0\xb3\x90\x04D@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd1@\x02\x05\xf5\xe1\0@\x01\xfe\xd2@\x02\x05\xf5\xe1\0@\x01\xfe\xd3@\xb0\xc0\x04Be\x01\x07Q\x01\x07Q\xc0\x04Ce\x01\x07Q\x01\x07w@@\xa1\x04lD@\xa0\xb0\xa0+clear_graph\x01\x01b\xd0\xc0\xc1@\xc0\xb3\x90\x04S@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd4\xc0\xb3\x90\x04W@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd5@\x02\x05\xf5\xe1\0@\x01\xfe\xd6\x90\xe03caml_gr_clear_graphAA \xa0@@@\xb0\xc0\x04Zh\x01\x07\xa6\x01\x07\xa6\xc0\x04[h\x01\x07\xa6\x01\x07\xe1@@\xa1\x04\x84E@\xa0\xb0\xa0&size_x\x01\x01c\xd0\xc0\xc1@\xc0\xb3\x90\x04k@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd7\xc0\xb3\x90\x047@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xd8@\x02\x05\xf5\xe1\0@\x01\xfe\xd9\x90\xe0.caml_gr_size_xAA\x04\x18\xa0@@@\xb0\xc0\x04qk\x01\b\x05\x01\b\x05\xc0\x04rk\x01\b\x05\x01\b5@@\xa1\x04\x9bF@\xa0\xb0\xa0&size_y\x01\x01d\xd0\xc0\xc1@\xc0\xb3\x90\x04\x82@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xda\xc0\xb3\x90\x04N@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xdb@\x02\x05\xf5\xe1\0@\x01\xfe\xdc\x90\xe0.caml_gr_size_yAA\x04/\xa0@@@\xb0\xc0\x04\x88n\x01\bV\x01\bV\xc0\x04\x89n\x01\bV\x01\b\x86@@\xa1\x04\xb2G@\xa0\xc1\xa0%color\x01\x01e\b\0\0;\0@@@A\x90\xc0\xb3\x90\x04`@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xdd@@@@\xb0\xc0\x04\x96y\x01\nI\x01\nI\xc0\x04\x97y\x01\nI\x01\nY@@A@\xa1\x04\xc0HA@\xa0\xb0\xa0#rgb\x01\x01f\xd0\xc0\xc1@\xc0\xb3\x90\x04o@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xde\xc0\xc1@\xc0\xb3\x90\x04u@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xdf\xc0\xc1@\xc0\xb3\x90\x04{@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe0\xc0\xb3\x90\x04&@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe1@\x02\x05\xf5\xe1\0@\x01\xfe\xe2@\x02\x05\xf5\xe1\0@\x01\xfe\xe3@\x02\x05\xf5\xe1\0@\x01\xfe\xe4@\xb0\xc0\x04\xb5\0@\x01\x0b|\x01\x0b|\xc0\x04\xb6\0@\x01\x0b|\x01\x0b\xa0@@\xa1\x04\xdfI@\xa0\xb0\xa0)set_color\x01\x01g\xd0\xc0\xc1@\xc0\xb3\x04\x0f@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe5\xc0\xb3\x90\x04\xc9@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe6@\x02\x05\xf5\xe1\0@\x01\xfe\xe7\x90\xe01caml_gr_set_colorAA\x04r\xa0@@@\xb0\xc0\x04\xcb\0E\x01\fS\x01\fS\xc0\x04\xcc\0E\x01\fS\x01\f\x8b@@\xa1\x04\xf5J@\xa0\xb0\xa0*background\x01\x01h\xd0\xc0\xb3\x04#@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe8@\xb0\xc0\x04\xd7\0H\x01\f\xb3\x01\f\xb3\xc0\x04\xd8\0H\x01\f\xb3\x01\f\xc9@@\xa1\x05\x01\x01K@\xa0\xb0\xa0*foreground\x01\x01i\xd0\xc0\xb3\x04/@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xe9@\xb0\xc0\x04\xe3\0K\x01\f\xed\x01\f\xed\xc0\x04\xe4\0K\x01\f\xed\x01\r\x03@@\xa1\x05\x01\rL@\xa0\xb0\xa0%black\x01\x01j\xd0\xc0\xb3\x04;@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xea@\xb0\xc0\x04\xef\0T\x01\x0e9\x01\x0e9\xc0\x04\xf0\0T\x01\x0e9\x01\x0eJ@@\xa1\x05\x01\x19M@\xa0\xb0\xa0%white\x01\x01k\xd0\xc0\xb3\x04G@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xeb@\xb0\xc0\x04\xfb\0V\x01\x0eL\x01\x0eL\xc0\x04\xfc\0V\x01\x0eL\x01\x0e]@@\xa1\x05\x01%N@\xa0\xb0\xa0#red\x01\x01l\xd0\xc0\xb3\x04S@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xec@\xb0\xc0\x05\x01\x07\0X\x01\x0e_\x01\x0e_\xc0\x05\x01\b\0X\x01\x0e_\x01\x0en@@\xa1\x05\x011O@\xa0\xb0\xa0%green\x01\x01m\xd0\xc0\xb3\x04_@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xed@\xb0\xc0\x05\x01\x13\0Z\x01\x0ep\x01\x0ep\xc0\x05\x01\x14\0Z\x01\x0ep\x01\x0e\x81@@\xa1\x05\x01=P@\xa0\xb0\xa0$blue\x01\x01n\xd0\xc0\xb3\x04k@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xee@\xb0\xc0\x05\x01\x1f\0\\\x01\x0e\x83\x01\x0e\x83\xc0\x05\x01 \0\\\x01\x0e\x83\x01\x0e\x93@@\xa1\x05\x01IQ@\xa0\xb0\xa0&yellow\x01\x01o\xd0\xc0\xb3\x04w@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xef@\xb0\xc0\x05\x01+\0^\x01\x0e\x95\x01\x0e\x95\xc0\x05\x01,\0^\x01\x0e\x95\x01\x0e\xa7@@\xa1\x05\x01UR@\xa0\xb0\xa0$cyan\x01\x01p\xd0\xc0\xb3\x04\x83@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf0@\xb0\xc0\x05\x017\0`\x01\x0e\xa9\x01\x0e\xa9\xc0\x05\x018\0`\x01\x0e\xa9\x01\x0e\xb9@@\xa1\x05\x01aS@\xa0\xb0\xa0'magenta\x01\x01q\xd0\xc0\xb3\x04\x8f@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf1@\xb0\xc0\x05\x01C\0b\x01\x0e\xbb\x01\x0e\xbb\xc0\x05\x01D\0b\x01\x0e\xbb\x01\x0e\xce@@\xa1\x05\x01mT@\xa0\xb0\xa0$plot\x01\x01r\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x1c@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf2\xc0\xc1@\xc0\xb3\x90\x05\x01\"@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf3\xc0\xb3\x90\x05\x01^@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf4@\x02\x05\xf5\xe1\0@\x01\xfe\xf5@\x02\x05\xf5\xe1\0@\x01\xfe\xf6\x90\xe0,caml_gr_plotBA\x05\x01\x07\xa0@\xa0@@@\xb0\xc0\x05\x01a\0f\x01\x0e\xf3\x01\x0e\xf3\xc0\x05\x01b\0f\x01\x0e\xf3\x01\x0f&@@\xa1\x05\x01\x8bU@\xa0\xb0\xa0%plots\x01\x01s\xd0\xc0\xc1@\xc0\xb3\x90\xa3%arrayH\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x01C@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf8\xa0\xc0\xb3\x90\x05\x01H@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xf7@\x02\x05\xf5\xe1\0@\x01\xfe\xf9@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xfa\xc0\xb3\x90\x05\x01\x85@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xfb@\x02\x05\xf5\xe1\0@\x01\xfe\xfc@\xb0\xc0\x05\x01\x83\0i\x01\x0fd\x01\x0fd\xc0\x05\x01\x84\0i\x01\x0fd\x01\x0f\x89@@\xa1\x05\x01\xadV@\xa0\xb0\xa0+point_color\x01\x01t\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\\@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xfd\xc0\xc1@\xc0\xb3\x90\x05\x01b@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xfe\xc0\xb3\x04\xe7@\x90@\x02\x05\xf5\xe1\0@\x01\xfe\xff@\x02\x05\xf5\xe1\0@\x01\xff\0@\x02\x05\xf5\xe1\0@\x01\xff\x01\x90\xe03caml_gr_point_colorBA\x05\x01F\xa0@\xa0@@@\xb0\xc0\x05\x01\xa0\0l\x01\x0f\xc8\x01\x0f\xc8\xc0\x05\x01\xa1\0l\x01\x0f\xc8\x01\x10\n@@\xa1\x05\x01\xcaW@\xa0\xb0\xa0&moveto\x01\x01u\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01y@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x02\xc0\xc1@\xc0\xb3\x90\x05\x01\x7f@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x03\xc0\xb3\x90\x05\x01\xbb@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x04@\x02\x05\xf5\xe1\0@\x01\xff\x05@\x02\x05\xf5\xe1\0@\x01\xff\x06\x90\xe0.caml_gr_movetoBA\x05\x01d\xa0@\xa0@@@\xb0\xc0\x05\x01\xbe\0p\x01\x10o\x01\x10o\xc0\x05\x01\xbf\0p\x01\x10o\x01\x10\xa6@@\xa1\x05\x01\xe8X@\xa0\xb0\xa0'rmoveto\x01\x01v\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x97@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x07\xc0\xc1@\xc0\xb3\x90\x05\x01\x9d@\x90@\x02\x05\xf5\xe1\0@\x01\xff\b\xc0\xb3\x90\x05\x01\xd9@\x90@\x02\x05\xf5\xe1\0@\x01\xff\t@\x02\x05\xf5\xe1\0@\x01\xff\n@\x02\x05\xf5\xe1\0@\x01\xff\x0b@\xb0\xc0\x05\x01\xd7\0s\x01\x10\xcb\x01\x10\xcb\xc0\x05\x01\xd8\0s\x01\x10\xcb\x01\x10\xeb@@\xa1\x05\x02\x01Y@\xa0\xb0\xa0)current_x\x01\x01w\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\xe8@\x90@\x02\x05\xf5\xe1\0@\x01\xff\f\xc0\xb3\x90\x05\x01\xb4@\x90@\x02\x05\xf5\xe1\0@\x01\xff\r@\x02\x05\xf5\xe1\0@\x01\xff\x0e\x90\xe01caml_gr_current_xAA\x05\x01\x95\xa0@@@\xb0\xc0\x05\x01\xee\0v\x01\x116\x01\x116\xc0\x05\x01\xef\0v\x01\x116\x01\x11l@@\xa1\x05\x02\x18Z@\xa0\xb0\xa0)current_y\x01\x01x\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\xff@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x0f\xc0\xb3\x90\x05\x01\xcb@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x10@\x02\x05\xf5\xe1\0@\x01\xff\x11\x90\xe01caml_gr_current_yAA\x05\x01\xac\xa0@@@\xb0\xc0\x05\x02\x05\0y\x01\x11\x9f\x01\x11\x9f\xc0\x05\x02\x06\0y\x01\x11\x9f\x01\x11\xd5@@\xa1\x05\x02/[@\xa0\xb0\xa0-current_point\x01\x01y\xd0\xc0\xc1@\xc0\xb3\x90\x05\x02\x16@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x12\xc0\x92\xa0\xc0\xb3\x90\x05\x01\xe5@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x14\xa0\xc0\xb3\x90\x05\x01\xea@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x13@\x02\x05\xf5\xe1\0@\x01\xff\x15@\x02\x05\xf5\xe1\0@\x01\xff\x16@\xb0\xc0\x05\x02 \0|\x01\x12\b\x01\x12\b\xc0\x05\x02!\0|\x01\x12\b\x01\x12-@@\xa1\x05\x02J\\@\xa0\xb0\xa0&lineto\x01\x01z\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\xf9@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x17\xc0\xc1@\xc0\xb3\x90\x05\x01\xff@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x18\xc0\xb3\x90\x05\x02;@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x19@\x02\x05\xf5\xe1\0@\x01\xff\x1a@\x02\x05\xf5\xe1\0@\x01\xff\x1b\x90\xe0.caml_gr_linetoBA\x05\x01\xe4\xa0@\xa0@@@\xb0\xc0\x05\x02>\0\x7f\x01\x12`\x01\x12`\xc0\x05\x02?\0\x7f\x01\x12`\x01\x12\x97@@\xa1\x05\x02h]@\xa0\xb0\xa0'rlineto\x01\x01{\xd0\xc0\xc1@\xc0\xb3\x90\x05\x02\x17@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x1c\xc0\xc1@\xc0\xb3\x90\x05\x02\x1d@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x1d\xc0\xb3\x90\x05\x02Y@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x1e@\x02\x05\xf5\xe1\0@\x01\xff\x1f@\x02\x05\xf5\xe1\0@\x01\xff @\xb0\xc0\x05\x02W\x01\0\x83\x01\x13\x14\x01\x13\x14\xc0\x05\x02X\x01\0\x83\x01\x13\x14\x01\x134@@\xa1\x05\x02\x81^@\xa0\xb0\xa0'curveto\x01\x01|\xd0\xc0\xc1@\xc0\x92\xa0\xc0\xb3\x90\x05\x023@\x90@\x02\x05\xf5\xe1\0@\x01\xff\"\xa0\xc0\xb3\x90\x05\x028@\x90@\x02\x05\xf5\xe1\0@\x01\xff!@\x02\x05\xf5\xe1\0@\x01\xff#\xc0\xc1@\xc0\x92\xa0\xc0\xb3\x90\x05\x02A@\x90@\x02\x05\xf5\xe1\0@\x01\xff%\xa0\xc0\xb3\x90\x05\x02F@\x90@\x02\x05\xf5\xe1\0@\x01\xff$@\x02\x05\xf5\xe1\0@\x01\xff&\xc0\xc1@\xc0\x92\xa0\xc0\xb3\x90\x05\x02O@\x90@\x02\x05\xf5\xe1\0@\x01\xff(\xa0\xc0\xb3\x90\x05\x02T@\x90@\x02\x05\xf5\xe1\0@\x01\xff'@\x02\x05\xf5\xe1\0@\x01\xff)\xc0\xb3\x90\x05\x02\x90@\x90@\x02\x05\xf5\xe1\0@\x01\xff*@\x02\x05\xf5\xe1\0@\x01\xff+@\x02\x05\xf5\xe1\0@\x01\xff,@\x02\x05\xf5\xe1\0@\x01\xff-@\xb0\xc0\x05\x02\x8e\x01\0\x88\x01\x13\xd0\x01\x13\xd0\xc0\x05\x02\x8f\x01\0\x88\x01\x13\xd0\x01\x14\t@@\xa1\x05\x02\xb8_@\xa0\xb0\xa0)draw_rect\x01\x01}\xd0\xc0\xc1@\xc0\xb3\x90\x05\x02g@\x90@\x02\x05\xf5\xe1\0@\x01\xff.\xc0\xc1@\xc0\xb3\x90\x05\x02m@\x90@\x02\x05\xf5\xe1\0@\x01\xff/\xc0\xc1@\xc0\xb3\x90\x05\x02s@\x90@\x02\x05\xf5\xe1\0@\x01\xff0\xc0\xc1@\xc0\xb3\x90\x05\x02y@\x90@\x02\x05\xf5\xe1\0@\x01\xff1\xc0\xb3\x90\x05\x02\xb5@\x90@\x02\x05\xf5\xe1\0@\x01\xff2@\x02\x05\xf5\xe1\0@\x01\xff3@\x02\x05\xf5\xe1\0@\x01\xff4@\x02\x05\xf5\xe1\0@\x01\xff5@\x02\x05\xf5\xe1\0@\x01\xff6@\xb0\xc0\x05\x02\xb3\x01\0\x8d\x01\x14\xb6\x01\x14\xb6\xc0\x05\x02\xb4\x01\0\x8d\x01\x14\xb6\x01\x14\xe6@@\xa1\x05\x02\xdd`@\xa0\xb0\xa0.draw_poly_line\x01\x01~\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01R\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x02\x93@\x90@\x02\x05\xf5\xe1\0@\x01\xff8\xa0\xc0\xb3\x90\x05\x02\x98@\x90@\x02\x05\xf5\xe1\0@\x01\xff7@\x02\x05\xf5\xe1\0@\x01\xff9@\x90@\x02\x05\xf5\xe1\0@\x01\xff:\xc0\xb3\x90\x05\x02\xd5@\x90@\x02\x05\xf5\xe1\0@\x01\xff;@\x02\x05\xf5\xe1\0@\x01\xff<@\xb0\xc0\x05\x02\xd3\x01\0\x93\x01\x15\xaf\x01\x15\xaf\xc0\x05\x02\xd4\x01\0\x93\x01\x15\xaf\x01\x15\xdd@@\xa1\x05\x02\xfda@\xa0\xb0\xa0)draw_poly\x01\x01\x7f\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01r\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x02\xb3@\x90@\x02\x05\xf5\xe1\0@\x01\xff>\xa0\xc0\xb3\x90\x05\x02\xb8@\x90@\x02\x05\xf5\xe1\0@\x01\xff=@\x02\x05\xf5\xe1\0@\x01\xff?@\x90@\x02\x05\xf5\xe1\0@\x01\xff@\xc0\xb3\x90\x05\x02\xf5@\x90@\x02\x05\xf5\xe1\0@\x01\xffA@\x02\x05\xf5\xe1\0@\x01\xffB@\xb0\xc0\x05\x02\xf3\x01\0\x9a\x01\x16\xd0\x01\x16\xd0\xc0\x05\x02\xf4\x01\0\x9a\x01\x16\xd0\x01\x16\xf9@@\xa1\x05\x03\x1db@\xa0\xb0\xa0-draw_segments\x01\x01\x80\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x92\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x02\xd3@\x90@\x02\x05\xf5\xe1\0@\x01\xffF\xa0\xc0\xb3\x90\x05\x02\xd8@\x90@\x02\x05\xf5\xe1\0@\x01\xffE\xa0\xc0\xb3\x90\x05\x02\xdd@\x90@\x02\x05\xf5\xe1\0@\x01\xffD\xa0\xc0\xb3\x90\x05\x02\xe2@\x90@\x02\x05\xf5\xe1\0@\x01\xffC@\x02\x05\xf5\xe1\0@\x01\xffG@\x90@\x02\x05\xf5\xe1\0@\x01\xffH\xc0\xb3\x90\x05\x03\x1f@\x90@\x02\x05\xf5\xe1\0@\x01\xffI@\x02\x05\xf5\xe1\0@\x01\xffJ@\xb0\xc0\x05\x03\x1d\x01\0\xa0\x01\x17\x9b\x01\x17\x9b\xc0\x05\x03\x1e\x01\0\xa0\x01\x17\x9b\x01\x17\xd4@@\xa1\x05\x03Gc@\xa0\xb0\xa0(draw_arc\x01\x01\x81\xd0\xc0\xc1@\xc0\xb3\x90\x05\x02\xf6@\x90@\x02\x05\xf5\xe1\0@\x01\xffK\xc0\xc1@\xc0\xb3\x90\x05\x02\xfc@\x90@\x02\x05\xf5\xe1\0@\x01\xffL\xc0\xc1@\xc0\xb3\x90\x05\x03\x02@\x90@\x02\x05\xf5\xe1\0@\x01\xffM\xc0\xc1@\xc0\xb3\x90\x05\x03\b@\x90@\x02\x05\xf5\xe1\0@\x01\xffN\xc0\xc1@\xc0\xb3\x90\x05\x03\x0e@\x90@\x02\x05\xf5\xe1\0@\x01\xffO\xc0\xc1@\xc0\xb3\x90\x05\x03\x14@\x90@\x02\x05\xf5\xe1\0@\x01\xffP\xc0\xb3\x90\x05\x03P@\x90@\x02\x05\xf5\xe1\0@\x01\xffQ@\x02\x05\xf5\xe1\0@\x01\xffR@\x02\x05\xf5\xe1\0@\x01\xffS@\x02\x05\xf5\xe1\0@\x01\xffT@\x02\x05\xf5\xe1\0@\x01\xffU@\x02\x05\xf5\xe1\0@\x01\xffV@\x02\x05\xf5\xe1\0@\x01\xffW@\xb0\xc0\x05\x03N\x01\0\xa7\x01\x18\xe4\x01\x18\xe4\xc0\x05\x03O\x01\0\xa7\x01\x18\xe4\x01\x19!@@\xa1\x05\x03xd@\xa0\xb0\xa0,draw_ellipse\x01\x01\x82\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03'@\x90@\x02\x05\xf5\xe1\0@\x01\xffX\xc0\xc1@\xc0\xb3\x90\x05\x03-@\x90@\x02\x05\xf5\xe1\0@\x01\xffY\xc0\xc1@\xc0\xb3\x90\x05\x033@\x90@\x02\x05\xf5\xe1\0@\x01\xffZ\xc0\xc1@\xc0\xb3\x90\x05\x039@\x90@\x02\x05\xf5\xe1\0@\x01\xff[\xc0\xb3\x90\x05\x03u@\x90@\x02\x05\xf5\xe1\0@\x01\xff\\@\x02\x05\xf5\xe1\0@\x01\xff]@\x02\x05\xf5\xe1\0@\x01\xff^@\x02\x05\xf5\xe1\0@\x01\xff_@\x02\x05\xf5\xe1\0@\x01\xff`@\xb0\xc0\x05\x03s\x01\0\xad\x01\x1a)\x01\x1a)\xc0\x05\x03t\x01\0\xad\x01\x1a)\x01\x1a\\@@\xa1\x05\x03\x9de@\xa0\xb0\xa0+draw_circle\x01\x01\x83\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03L@\x90@\x02\x05\xf5\xe1\0@\x01\xffa\xc0\xc1@\xc0\xb3\x90\x05\x03R@\x90@\x02\x05\xf5\xe1\0@\x01\xffb\xc0\xc1@\xc0\xb3\x90\x05\x03X@\x90@\x02\x05\xf5\xe1\0@\x01\xffc\xc0\xb3\x90\x05\x03\x94@\x90@\x02\x05\xf5\xe1\0@\x01\xffd@\x02\x05\xf5\xe1\0@\x01\xffe@\x02\x05\xf5\xe1\0@\x01\xfff@\x02\x05\xf5\xe1\0@\x01\xffg@\xb0\xc0\x05\x03\x92\x01\0\xb3\x01\x1b2\x01\x1b2\xc0\x05\x03\x93\x01\0\xb3\x01\x1b2\x01\x1b]@@\xa1\x05\x03\xbcf@\xa0\xb0\xa0.set_line_width\x01\x01\x84\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03k@\x90@\x02\x05\xf5\xe1\0@\x01\xffh\xc0\xb3\x90\x05\x03\xa7@\x90@\x02\x05\xf5\xe1\0@\x01\xffi@\x02\x05\xf5\xe1\0@\x01\xffj@\xb0\xc0\x05\x03\xa5\x01\0\xb8\x01\x1b\xfe\x01\x1b\xfe\xc0\x05\x03\xa6\x01\0\xb8\x01\x1b\xfe\x01\x1c\x1e@@\xa1\x05\x03\xcfg@\xa0\xb0\xa0)draw_char\x01\x01\x85\xd0\xc0\xc1@\xc0\xb3\x90\xa3$charB@\x90@\x02\x05\xf5\xe1\0@\x01\xffk\xc0\xb3\x90\x05\x03\xbc@\x90@\x02\x05\xf5\xe1\0@\x01\xffl@\x02\x05\xf5\xe1\0@\x01\xffm\x90\xe01caml_gr_draw_charAA\x05\x03e\xa0@@@\xb0\xc0\x05\x03\xbe\x01\0\xc1\x01\x1dl\x01\x1dl\xc0\x05\x03\xbf\x01\0\xc1\x01\x1dl\x01\x1d\xa3@@\xa1\x05\x03\xe8h@\xa0\xb0\xa0+draw_string\x01\x01\x86\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03\xe4@\x90@\x02\x05\xf5\xe1\0@\x01\xffn\xc0\xb3\x90\x05\x03\xd3@\x90@\x02\x05\xf5\xe1\0@\x01\xffo@\x02\x05\xf5\xe1\0@\x01\xffp\x90\xe03caml_gr_draw_stringAA\x05\x03|\xa0@@@\xb0\xc0\x05\x03\xd5\x01\0\xc4\x01\x1d\xc8\x01\x1d\xc8\xc0\x05\x03\xd6\x01\0\xc4\x01\x1d\xc8\x01\x1e\x05@@\xa1\x05\x03\xffi@\xa0\xb0\xa0(set_font\x01\x01\x87\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03\xfb@\x90@\x02\x05\xf5\xe1\0@\x01\xffq\xc0\xb3\x90\x05\x03\xea@\x90@\x02\x05\xf5\xe1\0@\x01\xffr@\x02\x05\xf5\xe1\0@\x01\xffs\x90\xe00caml_gr_set_fontAA\x05\x03\x93\xa0@@@\xb0\xc0\x05\x03\xec\x01\0\xc9\x01\x1e\xbf\x01\x1e\xbf\xc0\x05\x03\xed\x01\0\xc9\x01\x1e\xbf\x01\x1e\xf6@@\xa1\x05\x04\x16j@\xa0\xb0\xa0-set_text_size\x01\x01\x88\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03\xc5@\x90@\x02\x05\xf5\xe1\0@\x01\xfft\xc0\xb3\x90\x05\x04\x01@\x90@\x02\x05\xf5\xe1\0@\x01\xffu@\x02\x05\xf5\xe1\0@\x01\xffv@\xb0\xc0\x05\x03\xff\x01\0\xce\x01\x1fw\x01\x1fw\xc0\x05\x04\0\x01\0\xce\x01\x1fw\x01\x1f\x96@@\xa1\x05\x04)k@\xa0\xb0\xa0)text_size\x01\x01\x89\xd0\xc0\xc1@\xc0\xb3\x90\x05\x04%@\x90@\x02\x05\xf5\xe1\0@\x01\xffw\xc0\x92\xa0\xc0\xb3\x90\x05\x03\xdf@\x90@\x02\x05\xf5\xe1\0@\x01\xffy\xa0\xc0\xb3\x90\x05\x03\xe4@\x90@\x02\x05\xf5\xe1\0@\x01\xffx@\x02\x05\xf5\xe1\0@\x01\xffz@\x02\x05\xf5\xe1\0@\x01\xff{\x90\xe01caml_gr_text_sizeAA\x05\x03\xc5\xa0@@@\xb0\xc0\x05\x04\x1e\x01\0\xd3\x01 &\x01 &\xc0\x05\x04\x1f\x01\0\xd3\x01 &\x01 d@@\xa1\x05\x04Hl@\xa0\xb0\xa0)fill_rect\x01\x01\x8a\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03\xf7@\x90@\x02\x05\xf5\xe1\0@\x01\xff|\xc0\xc1@\xc0\xb3\x90\x05\x03\xfd@\x90@\x02\x05\xf5\xe1\0@\x01\xff}\xc0\xc1@\xc0\xb3\x90\x05\x04\x03@\x90@\x02\x05\xf5\xe1\0@\x01\xff~\xc0\xc1@\xc0\xb3\x90\x05\x04\t@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x7f\xc0\xb3\x90\x05\x04E@\x90@\x02\x05\xf5\xe1\0@\0\x80@\x02\x05\xf5\xe1\0@\0\x81@\x02\x05\xf5\xe1\0@\0\x82@\x02\x05\xf5\xe1\0@\0\x83@\x02\x05\xf5\xe1\0@\0\x84@\xb0\xc0\x05\x04C\x01\0\xd9\x01 \xde\x01 \xde\xc0\x05\x04D\x01\0\xd9\x01 \xde\x01!\x0e@@\xa1\x05\x04mm@\xa0\xb0\xa0)fill_poly\x01\x01\x8b\xd0\xc0\xc1@\xc0\xb3\x90\x05\x02\xe2\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x04#@\x90@\x02\x05\xf5\xe1\0@\0\x86\xa0\xc0\xb3\x90\x05\x04(@\x90@\x02\x05\xf5\xe1\0@\0\x85@\x02\x05\xf5\xe1\0@\0\x87@\x90@\x02\x05\xf5\xe1\0@\0\x88\xc0\xb3\x90\x05\x04e@\x90@\x02\x05\xf5\xe1\0@\0\x89@\x02\x05\xf5\xe1\0@\0\x8a\x90\xe01caml_gr_fill_polyAA\x05\x04\x0e\xa0@@@\xb0\xc0\x05\x04g\x01\0\xde\x01!\xcc\x01!\xcc\xc0\x05\x04h\x01\0\xde\x01!\xcc\x01\"\x10@@\xa1\x05\x04\x91n@\xa0\xb0\xa0(fill_arc\x01\x01\x8c\xd0\xc0\xc1@\xc0\xb3\x90\x05\x04@@\x90@\x02\x05\xf5\xe1\0@\0\x8b\xc0\xc1@\xc0\xb3\x90\x05\x04F@\x90@\x02\x05\xf5\xe1\0@\0\x8c\xc0\xc1@\xc0\xb3\x90\x05\x04L@\x90@\x02\x05\xf5\xe1\0@\0\x8d\xc0\xc1@\xc0\xb3\x90\x05\x04R@\x90@\x02\x05\xf5\xe1\0@\0\x8e\xc0\xc1@\xc0\xb3\x90\x05\x04X@\x90@\x02\x05\xf5\xe1\0@\0\x8f\xc0\xc1@\xc0\xb3\x90\x05\x04^@\x90@\x02\x05\xf5\xe1\0@\0\x90\xc0\xb3\x90\x05\x04\x9a@\x90@\x02\x05\xf5\xe1\0@\0\x91@\x02\x05\xf5\xe1\0@\0\x92@\x02\x05\xf5\xe1\0@\0\x93@\x02\x05\xf5\xe1\0@\0\x94@\x02\x05\xf5\xe1\0@\0\x95@\x02\x05\xf5\xe1\0@\0\x96@\x02\x05\xf5\xe1\0@\0\x97@\xb0\xc0\x05\x04\x98\x01\0\xe2\x01\"\x8e\x01\"\x8e\xc0\x05\x04\x99\x01\0\xe2\x01\"\x8e\x01\"\xcb@@\xa1\x05\x04\xc2o@\xa0\xb0\xa0,fill_ellipse\x01\x01\x8d\xd0\xc0\xc1@\xc0\xb3\x90\x05\x04q@\x90@\x02\x05\xf5\xe1\0@\0\x98\xc0\xc1@\xc0\xb3\x90\x05\x04w@\x90@\x02\x05\xf5\xe1\0@\0\x99\xc0\xc1@\xc0\xb3\x90\x05\x04}@\x90@\x02\x05\xf5\xe1\0@\0\x9a\xc0\xc1@\xc0\xb3\x90\x05\x04\x83@\x90@\x02\x05\xf5\xe1\0@\0\x9b\xc0\xb3\x90\x05\x04\xbf@\x90@\x02\x05\xf5\xe1\0@\0\x9c@\x02\x05\xf5\xe1\0@\0\x9d@\x02\x05\xf5\xe1\0@\0\x9e@\x02\x05\xf5\xe1\0@\0\x9f@\x02\x05\xf5\xe1\0@\0\xa0@\xb0\xc0\x05\x04\xbd\x01\0\xe6\x01#E\x01#E\xc0\x05\x04\xbe\x01\0\xe6\x01#E\x01#x@@\xa1\x05\x04\xe7p@\xa0\xb0\xa0+fill_circle\x01\x01\x8e\xd0\xc0\xc1@\xc0\xb3\x90\x05\x04\x96@\x90@\x02\x05\xf5\xe1\0@\0\xa1\xc0\xc1@\xc0\xb3\x90\x05\x04\x9c@\x90@\x02\x05\xf5\xe1\0@\0\xa2\xc0\xc1@\xc0\xb3\x90\x05\x04\xa2@\x90@\x02\x05\xf5\xe1\0@\0\xa3\xc0\xb3\x90\x05\x04\xde@\x90@\x02\x05\xf5\xe1\0@\0\xa4@\x02\x05\xf5\xe1\0@\0\xa5@\x02\x05\xf5\xe1\0@\0\xa6@\x02\x05\xf5\xe1\0@\0\xa7@\xb0\xc0\x05\x04\xdc\x01\0\xea\x01#\xe9\x01#\xe9\xc0\x05\x04\xdd\x01\0\xea\x01#\xe9\x01$\x14@@\xa1\x05\x05\x06q@\xa0\xc1\xa0%image\x01\x01\x8f\b\0\0;\0@@@A@@@@@\xb0\xc0\x05\x04\xe5\x01\0\xf0\x01$\x95\x01$\x95\xc0\x05\x04\xe6\x01\0\xf0\x01$\x95\x01$\x9f@@@@\xa1\x05\x05\x0frA@\xa0\xb0\xa0&transp\x01\x01\x90\xd0\xc0\xb3\x05\x04=@\x90@\x02\x05\xf5\xe1\0@\0\xa8@\xb0\xc0\x05\x04\xf1\x01\0\xf7\x01%\xa6\x01%\xa6\xc0\x05\x04\xf2\x01\0\xf7\x01%\xa6\x01%\xb8@@\xa1\x05\x05\x1bs@\xa0\xb0\xa0*make_image\x01\x01\x91\xd0\xc0\xc1@\xc0\xb3\x90\x05\x03\x90\xa0\xc0\xb3\x90\x05\x03\x94\xa0\xc0\xb3\x05\x04S@\x90@\x02\x05\xf5\xe1\0@\0\xa9@\x90@\x02\x05\xf5\xe1\0@\0\xaa@\x90@\x02\x05\xf5\xe1\0@\0\xab\xc0\xb3\x90\x04*@\x90@\x02\x05\xf5\xe1\0@\0\xac@\x02\x05\xf5\xe1\0@\0\xad\x90\xe02caml_gr_make_imageAA\x05\x04\xb8\xa0@@@\xb0\xc0\x05\x05\x11\x01\0\xff\x01'/\x01'/\xc0\x05\x05\x12\x01\0\xff\x01'/\x01'v@@\xa1\x05\x05;t@\xa0\xb0\xa0*dump_image\x01\x01\x92\xd0\xc0\xc1@\xc0\xb3\x04\x13@\x90@\x02\x05\xf5\xe1\0@\0\xae\xc0\xb3\x90\x05\x03\xb3\xa0\xc0\xb3\x90\x05\x03\xb7\xa0\xc0\xb3\x05\x04v@\x90@\x02\x05\xf5\xe1\0@\0\xaf@\x90@\x02\x05\xf5\xe1\0@\0\xb0@\x90@\x02\x05\xf5\xe1\0@\0\xb1@\x02\x05\xf5\xe1\0@\0\xb2\x90\xe02caml_gr_dump_imageAA\x05\x04\xd7\xa0@@@\xb0\xc0\x05\x050\x01\x01\x05\x01(?\x01(?\xc0\x05\x051\x01\x01\x05\x01(?\x01(\x86@@\xa1\x05\x05Zu@\xa0\xb0\xa0*draw_image\x01\x01\x93\xd0\xc0\xc1@\xc0\xb3\x042@\x90@\x02\x05\xf5\xe1\0@\0\xb3\xc0\xc1@\xc0\xb3\x90\x05\x05\x0e@\x90@\x02\x05\xf5\xe1\0@\0\xb4\xc0\xc1@\xc0\xb3\x90\x05\x05\x14@\x90@\x02\x05\xf5\xe1\0@\0\xb5\xc0\xb3\x90\x05\x05P@\x90@\x02\x05\xf5\xe1\0@\0\xb6@\x02\x05\xf5\xe1\0@\0\xb7@\x02\x05\xf5\xe1\0@\0\xb8@\x02\x05\xf5\xe1\0@\0\xb9\x90\xe02caml_gr_draw_imageCA\x05\x04\xf9\xa0@\xa0@\xa0@@@\xb0\xc0\x05\x05T\x01\x01\b\x01(\xb3\x01(\xb3\xc0\x05\x05U\x01\x01\b\x01(\xb3\x01(\xfb@@\xa1\x05\x05~v@\xa0\xb0\xa0)get_image\x01\x01\x94\xd0\xc0\xc1@\xc0\xb3\x90\x05\x05-@\x90@\x02\x05\xf5\xe1\0@\0\xba\xc0\xc1@\xc0\xb3\x90\x05\x053@\x90@\x02\x05\xf5\xe1\0@\0\xbb\xc0\xc1@\xc0\xb3\x90\x05\x059@\x90@\x02\x05\xf5\xe1\0@\0\xbc\xc0\xc1@\xc0\xb3\x90\x05\x05?@\x90@\x02\x05\xf5\xe1\0@\0\xbd\xc0\xb3\x04l@\x90@\x02\x05\xf5\xe1\0@\0\xbe@\x02\x05\xf5\xe1\0@\0\xbf@\x02\x05\xf5\xe1\0@\0\xc0@\x02\x05\xf5\xe1\0@\0\xc1@\x02\x05\xf5\xe1\0@\0\xc2@\xb0\xc0\x05\x05x\x01\x01\x0b\x01)D\x01)D\xc0\x05\x05y\x01\x01\x0b\x01)D\x01)u@@\xa1\x05\x05\xa2w@\xa0\xb0\xa0,create_image\x01\x01\x95\xd0\xc0\xc1@\xc0\xb3\x90\x05\x05Q@\x90@\x02\x05\xf5\xe1\0@\0\xc3\xc0\xc1@\xc0\xb3\x90\x05\x05W@\x90@\x02\x05\xf5\xe1\0@\0\xc4\xc0\xb3\x04\x84@\x90@\x02\x05\xf5\xe1\0@\0\xc5@\x02\x05\xf5\xe1\0@\0\xc6@\x02\x05\xf5\xe1\0@\0\xc7\x90\xe04caml_gr_create_imageBA\x05\x05;\xa0@\xa0@@@\xb0\xc0\x05\x05\x95\x01\x01\x0f\x01)\xfa\x01)\xfa\xc0\x05\x05\x96\x01\x01\x0f\x01)\xfa\x01*>@@\xa1\x05\x05\xbfx@\xa0\xb0\xa0*blit_image\x01\x01\x96\xd0\xc0\xc1@\xc0\xb3\x04\x97@\x90@\x02\x05\xf5\xe1\0@\0\xc8\xc0\xc1@\xc0\xb3\x90\x05\x05s@\x90@\x02\x05\xf5\xe1\0@\0\xc9\xc0\xc1@\xc0\xb3\x90\x05\x05y@\x90@\x02\x05\xf5\xe1\0@\0\xca\xc0\xb3\x90\x05\x05\xb5@\x90@\x02\x05\xf5\xe1\0@\0\xcb@\x02\x05\xf5\xe1\0@\0\xcc@\x02\x05\xf5\xe1\0@\0\xcd@\x02\x05\xf5\xe1\0@\0\xce\x90\xe02caml_gr_blit_imageCA\x05\x05^\xa0@\xa0@\xa0@@@\xb0\xc0\x05\x05\xb9\x01\x01\x15\x01+\x15\x01+\x15\xc0\x05\x05\xba\x01\x01\x15\x01+\x15\x01+]@@\xa1\x05\x05\xe3y@\xa0\xc1\xa0&status\x01\x01\x97\b\0\0;\0@@\xa0\xa0\xe0\xa0'mouse_x\x01\x01G@\xc0\xb3\x90\x05\x05\x95@\x90@\x02\x05\xf5\xe1\0@\0\xd3\xb0\xc0\x05\x05\xcb\x01\x01\x1f\x01,\xc0\x01,\xc2\xc0\x05\x05\xcc\x01\x01\x1f\x01,\xc0\x01,\xd0@@\xa1\x05\x05\xf5{\xa0\xe0\xa0'mouse_y\x01\x01H@\xc0\xb3\x90\x05\x05\xa1@\x90@\x02\x05\xf5\xe1\0@\0\xd2\xb0\xc0\x05\x05\xd7\x01\x01 \x01,\xf3\x01,\xf5\xc0\x05\x05\xd8\x01\x01 \x01,\xf3\x01-\x03@@\xa1\x05\x06\x01|\xa0\xe0\xa0&button\x01\x01I@\xc0\xb3\x90\xa3$boolE@\x90@\x02\x05\xf5\xe1\0@\0\xd1\xb0\xc0\x05\x05\xe5\x01\x01!\x01-&\x01-(\xc0\x05\x05\xe6\x01\x01!\x01-&\x01-6@@\xa1\x05\x06\x0f}\xa0\xe0\xa0*keypressed\x01\x01J@\xc0\xb3\x90\x04\x0e@\x90@\x02\x05\xf5\xe1\0@\0\xd0\xb0\xc0\x05\x05\xf1\x01\x01\"\x01-a\x01-c\xc0\x05\x05\xf2\x01\x01\"\x01-a\x01-u@@\xa1\x05\x06\x1b~\xa0\xe0\xa0#key\x01\x01K@\xc0\xb3\x90\x05\x02I@\x90@\x02\x05\xf5\xe1\0@\0\xcf\xb0\xc0\x05\x05\xfd\x01\x01#\x01-\x9d\x01-\x9f\xc0\x05\x05\xfe\x01\x01#\x01-\x9d\x01-\xaa@@\xa1\x05\x06'\x7f@@A@@@@@\xb0\xc0\x05\x06\x01\x01\x01\x1e\x01,\xb0\x01,\xb0\xc0\x05\x06\x02\x01\x01$\x01-\xd5\x01-\xd6@@@@\xa1\x05\x06+zA@\xa0\xc1\xa0%event\x01\x01\x98\b\0\0;\0@@\xa1\xa0\xe0\xa0+Button_down\x01\x01M\x90@@\xb0\xc0\x05\x06\x10\x01\x01)\x01.$\x01.&\xc0\x05\x06\x11\x01\x01)\x01.$\x01.3@@\xa1\x05\x06:\0A\xa0\xe0\xa0)Button_up\x01\x01N\x90@@\xb0\xc0\x05\x06\x19\x01\x01*\x01.V\x01.X\xc0\x05\x06\x1a\x01\x01*\x01.V\x01.c@@\xa1\x05\x06C\0B\xa0\xe0\xa0+Key_pressed\x01\x01O\x90@@\xb0\xc0\x05\x06\"\x01\x01+\x01.\x87\x01.\x89\xc0\x05\x06#\x01\x01+\x01.\x87\x01.\x96@@\xa1\x05\x06L\0C\xa0\xe0\xa0,Mouse_motion\x01\x01P\x90@@\xb0\xc0\x05\x06+\x01\x01,\x01.\xb0\x01.\xb2\xc0\x05\x06,\x01\x01,\x01.\xb0\x01.\xc0@@\xa1\x05\x06U\0D\xa0\xe0\xa0$Poll\x01\x01Q\x90@@\xb0\xc0\x05\x064\x01\x01-\x01.\xdc\x01.\xde\xc0\x05\x065\x01\x01-\x01.\xdc\x01.\xe4@@\xa1\x05\x06^\0E@@A@@@@@\xb0\xc0\x05\x068\x01\x01(\x01.\x17\x01.\x17\x04\x04@@A@\xa1\x05\x06a\0@A@\xa0\xb0\xa0/wait_next_event\x01\x01\x99\xd0\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\x90\x04D@\x90@\x02\x05\xf5\xe1\0@\0\xd4@\x90@\x02\x05\xf5\xe1\0@\0\xd5\xc0\xb3\x90\x04\x91@\x90@\x02\x05\xf5\xe1\0@\0\xd6@\x02\x05\xf5\xe1\0@\0\xd7\x90\xe02caml_gr_wait_eventAA\x05\x05\xfc\xa0@@@\xb0\xc0\x05\x06U\x01\x01/\x01/\r\x01/\r\xc0\x05\x06V\x01\x01/\x01/\r\x01/S@@\xa1\x05\x06\x7f\0F@\xa0\xb0\xa0,loop_at_exit\x01\x01\x9a\xd0\xc0\xc1@\xc0\xb3\x90\x04\x1e\xa0\xc0\xb3\x04\x1c@\x90@\x02\x05\xf5\xe1\0@\0\xd8@\x90@\x02\x05\xf5\xe1\0@\0\xd9\xc0\xc1@\xc0\xc1@\xc0\xb3\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xda\xc0\xb3\x90\x05\x06u@\x90@\x02\x05\xf5\xe1\0@\0\xdb@\x02\x05\xf5\xe1\0@\0\xdc\xc0\xb3\x90\x05\x06y@\x90@\x02\x05\xf5\xe1\0@\0\xdd@\x02\x05\xf5\xe1\0@\0\xde@\x02\x05\xf5\xe1\0@\0\xdf@\xb0\xc0\x05\x06w\x01\x019\x011e\x011e\xc0\x05\x06x\x01\x019\x011e\x011\x9e@@\xa1\x05\x06\xa1\0G@\xa0\xb0\xa0)mouse_pos\x01\x01\x9b\xd0\xc0\xc1@\xc0\xb3\x90\x05\x06\x88@\x90@\x02\x05\xf5\xe1\0@\0\xe0\xc0\x92\xa0\xc0\xb3\x90\x05\x06W@\x90@\x02\x05\xf5\xe1\0@\0\xe2\xa0\xc0\xb3\x90\x05\x06\\@\x90@\x02\x05\xf5\xe1\0@\0\xe1@\x02\x05\xf5\xe1\0@\0\xe3@\x02\x05\xf5\xe1\0@\0\xe4@\xb0\xc0\x05\x06\x92\x01\x01C\x012\xe6\x012\xe6\xc0\x05\x06\x93\x01\x01C\x012\xe6\x013\x07@@\xa1\x05\x06\xbc\0H@\xa0\xb0\xa0+button_down\x01\x01\x9c\xd0\xc0\xc1@\xc0\xb3\x90\x05\x06\xa3@\x90@\x02\x05\xf5\xe1\0@\0\xe5\xc0\xb3\x90\x04\xc2@\x90@\x02\x05\xf5\xe1\0@\0\xe6@\x02\x05\xf5\xe1\0@\0\xe7@\xb0\xc0\x05\x06\xa5\x01\x01I\x013\xed\x013\xed\xc0\x05\x06\xa6\x01\x01I\x013\xed\x014\x0b@@\xa1\x05\x06\xcf\0I@\xa0\xb0\xa0(read_key\x01\x01\x9d\xd0\xc0\xc1@\xc0\xb3\x90\x05\x06\xb6@\x90@\x02\x05\xf5\xe1\0@\0\xe8\xc0\xb3\x90\x05\x03\x04@\x90@\x02\x05\xf5\xe1\0@\0\xe9@\x02\x05\xf5\xe1\0@\0\xea@\xb0\xc0\x05\x06\xb8\x01\x01L\x014U\x014U\xc0\x05\x06\xb9\x01\x01L\x014U\x014p@@\xa1\x05\x06\xe2\0J@\xa0\xb0\xa0+key_pressed\x01\x01\x9e\xd0\xc0\xc1@\xc0\xb3\x90\x05\x06\xc9@\x90@\x02\x05\xf5\xe1\0@\0\xeb\xc0\xb3\x90\x04\xe8@\x90@\x02\x05\xf5\xe1\0@\0\xec@\x02\x05\xf5\xe1\0@\0\xed@\xb0\xc0\x05\x06\xcb\x01\x01P\x014\xd9\x014\xd9\xc0\x05\x06\xcc\x01\x01P\x014\xd9\x014\xf7@@\xa1\x05\x06\xf5\0K@\xa0\xb0\xa0%sound\x01\x01\x9f\xd0\xc0\xc1@\xc0\xb3\x90\x05\x06\xa4@\x90@\x02\x05\xf5\xe1\0@\0\xee\xc0\xc1@\xc0\xb3\x90\x05\x06\xaa@\x90@\x02\x05\xf5\xe1\0@\0\xef\xc0\xb3\x90\x05\x06\xe6@\x90@\x02\x05\xf5\xe1\0@\0\xf0@\x02\x05\xf5\xe1\0@\0\xf1@\x02\x05\xf5\xe1\0@\0\xf2\x90\xe0-caml_gr_soundBA\x05\x06\x8f\xa0@\xa0@@@\xb0\xc0\x05\x06\xe9\x01\x01V\x015g\x015g\xc0\x05\x06\xea\x01\x01V\x015g\x015\x9c@@\xa1\x05\x07\x13\0L@\xa0\xb0\xa00auto_synchronize\x01\x01\xa0\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x15@\x90@\x02\x05\xf5\xe1\0@\0\xf3\xc0\xb3\x90\x05\x06\xfe@\x90@\x02\x05\xf5\xe1\0@\0\xf4@\x02\x05\xf5\xe1\0@\0\xf5@\xb0\xc0\x05\x06\xfc\x01\x01\\\x016+\x016+\xc0\x05\x06\xfd\x01\x01\\\x016+\x016N@@\xa1\x05\x07&\0M@\xa0\xb0\xa0+synchronize\x01\x01\xa1\xd0\xc0\xc1@\xc0\xb3\x90\x05\x07\r@\x90@\x02\x05\xf5\xe1\0@\0\xf6\xc0\xb3\x90\x05\x07\x11@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8\x90\xe03caml_gr_synchronizeAA\x05\x06\xba\xa0@@@\xb0\xc0\x05\x07\x13\x01\x01r\x019\xb4\x019\xb4\xc0\x05\x07\x14\x01\x01r\x019\xb4\x019\xef@@\xa1\x05\x07=\0N@\xa0\xb0\xa0,display_mode\x01\x01\xa2\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01?@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xb3\x90\x05\x07(@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb\x90\xe04caml_gr_display_modeAA\x05\x06\xd1\xa0@@@\xb0\xc0\x05\x07*\x01\x01w\x01:}\x01:}\xc0\x05\x07+\x01\x01w\x01:}\x01:\xba@@\xa1\x05\x07T\0O@\xa0\xb0\xa0-remember_mode\x01\x01\xa3\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01V@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x05\x07?@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe\x90\xe05caml_gr_remember_modeAA\x05\x06\xe8\xa0@@@\xb0\xc0\x05\x07A\x01\x01~\x01;\xef\x01;\xef\xc0\x05\x07B\x01\x01~\x01;\xef\x01<.@@\xa1\x05\x07k\0P@@\x84\x95\xa6\xbe\0\0\0f\0\0\0\x0f\0\0\x009\0\0\0.\xa0\xa0(Graphics\x9005\xa2\xa4\x85}\x8d\x124\xee^j\xae;^\x01\xa0\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    cst = "",
    Stdlib_List = global_data.Stdlib__List,
    Stdlib_Array = global_data.Stdlib__Array,
    Stdlib = global_data.Stdlib,
    Stdlib_Sys = global_data.Stdlib__Sys,
    Stdlib_Callback = global_data.Stdlib__Callback,
    Graphic_failure =
      [248, cst_Graphics_Graphic_failure, runtime.caml_fresh_oo_id(0)];
   caml_callback
    (Stdlib_Callback[2],
     [cst_Graphics_Graphic_failure, [0, Graphic_failure, cst]]);
   function unix_open_graph(arg, cont){
    var _ac_ = caml_gr_sigio_signal(0);
    return caml_cps_call3
            (Stdlib_Sys[15],
             _ac_,
             [0,
              function(_ae_, cont){
               return cont(runtime.caml_gr_sigio_handler(_ae_));
              }],
             function(_ad_){return cont(caml_gr_open_graph(arg));});
   }
   function unix_close_graph(param, cont){
    var _aa_ = caml_gr_sigio_signal(0);
    return caml_cps_call3
            (Stdlib_Sys[15],
             _aa_,
             1,
             function(_ab_){return cont(caml_gr_close_graph(0));});
   }
   var
    _a_ = Stdlib_Sys[4],
    _i_ = [0, 4, 0],
    _h_ = [0, 2, 0],
    _g_ = [0, 4, 0],
    _f_ = [0, 4, 0],
    cst_fill_arc_ellipse_circle = "fill_arc/ellipse/circle",
    cst_fill_rect = "fill_rect",
    cst_set_line_width = "set_line_width",
    cst_draw_arc_ellipse_circle = "draw_arc/ellipse/circle",
    cst_draw_rect = "draw_rect",
    cst_Graphics_unknown_OS_type = "Graphics: unknown OS type: ";
   if(caml_string_notequal(_a_, "Cygwin"))
    if(caml_string_notequal(_a_, "MacOS"))
     if(caml_string_notequal(_a_, "Unix"))
      if(caml_string_notequal(_a_, "Win32"))
       var
        _b_ =
          caml_callback
           (Stdlib[28], [cst_Graphics_unknown_OS_type, Stdlib_Sys[4]]),
        _c_ = caml_callback(Stdlib[1], [_b_]),
        close_graph = _c_[2],
        open_graph = _c_[1];
      else
       var
        close_graph =
          function(_Z_, cont){return cont(caml_gr_close_graph(_Z_));},
        open_graph =
          function(_Y_, cont){return cont(caml_gr_open_graph(_Y_));};
     else
      var close_graph = unix_close_graph, open_graph = unix_open_graph;
    else
     var
      close_graph =
        function(_$_, cont){return cont(caml_gr_close_graph(_$_));},
      open_graph = function(___, cont){return cont(caml_gr_open_graph(___));};
   else
    var close_graph = unix_close_graph, open_graph = unix_open_graph;
   function auto_synchronize(param, cont){
    return param
            ? (caml_gr_display_mode
               (1),
              caml_gr_remember_mode(1),
              cont(runtime.caml_gr_synchronize(0)))
            : (caml_gr_display_mode(0), cont(caml_gr_remember_mode(1)));
   }
   function rgb(r, g, b, cont){
    return cont(((r << 16) + (g << 8) | 0) + b | 0);
   }
   var black = 0, white = 16777215;
   function plots(points, cont){
    var _W_ = points.length - 1 - 1 | 0, _V_ = 0;
    if(_W_ >= 0){
     var i = _V_;
     for(;;){
      var
       match = caml_check_bound(points, i)[1 + i],
       y = match[2],
       x = match[1];
      runtime.caml_gr_plot(x, y);
      var _X_ = i + 1 | 0;
      if(_W_ === i) break;
      var i = _X_;
     }
    }
    return cont(0);
   }
   function current_point(param, cont){
    var _U_ = caml_gr_current_y(0);
    return cont([0, caml_gr_current_x(0), _U_]);
   }
   function rlineto(x, y, cont){
    var _T_ = caml_gr_current_y(0) + y | 0;
    return cont(caml_gr_lineto(caml_gr_current_x(0) + x | 0, _T_));
   }
   function rmoveto(x, y, cont){
    var _S_ = caml_gr_current_y(0) + y | 0;
    return cont(caml_gr_moveto(caml_gr_current_x(0) + x | 0, _S_));
   }
   function draw_rect(x, y, w, h, cont){
    if(0 <= w && 0 <= h) return cont(runtime.caml_gr_draw_rect(x, y, w, h));
    var _R_ = [0, Stdlib[6], cst_draw_rect], raise = caml_pop_trap();
    return raise(caml_maybe_attach_backtrace(_R_, 1));
   }
   function dodraw(close_flag, points, cont){
    var _J_ = 0 < points.length - 1 ? 1 : 0;
    function _K_(_Q_){return cont(_Q_);}
    return _J_
            ? caml_cps_exact_call2
              (current_point,
               undef,
               function(match){
                var
                 savey = match[2],
                 savex = match[1],
                 _L_ = caml_check_bound(points, 0)[1][2];
                caml_gr_moveto(points[1][1], _L_);
                var _N_ = points.length - 1 - 1 | 0, _M_ = 1;
                if(_N_ >= 1){
                 var i = _M_;
                 for(;;){
                  var
                   match$0 = caml_check_bound(points, i)[1 + i],
                   y = match$0[2],
                   x = match$0[1];
                  caml_gr_lineto(x, y);
                  var _P_ = i + 1 | 0;
                  if(_N_ === i) break;
                  var i = _P_;
                 }
                }
                if(close_flag){
                 var _O_ = caml_check_bound(points, 0)[1][2];
                 caml_gr_lineto(points[1][1], _O_);
                }
                return _K_(caml_gr_moveto(savex, savey));
               })
            : _K_(_J_);
   }
   var _d_ = 0;
   function draw_poly_line(_I_, cont){
    return caml_cps_exact_call3(dodraw, _d_, _I_, cont);
   }
   var _e_ = 1;
   function draw_poly(_H_, cont){
    return caml_cps_exact_call3(dodraw, _e_, _H_, cont);
   }
   function draw_segments(segs, cont){
    return caml_cps_exact_call2
            (current_point,
             undef,
             function(match){
              var
               savey = match[2],
               savex = match[1],
               _F_ = segs.length - 1 - 1 | 0,
               _E_ = 0;
              if(_F_ >= 0){
               var i = _E_;
               for(;;){
                var
                 match$0 = caml_check_bound(segs, i)[1 + i],
                 y2 = match$0[4],
                 x2 = match$0[3],
                 y1 = match$0[2],
                 x1 = match$0[1];
                caml_gr_moveto(x1, y1);
                caml_gr_lineto(x2, y2);
                var _G_ = i + 1 | 0;
                if(_F_ === i) break;
                var i = _G_;
               }
              }
              return cont(caml_gr_moveto(savex, savey));
             });
   }
   function draw_arc(x, y, rx, ry, a1, a2, cont){
    if(0 <= rx && 0 <= ry)
     return cont(runtime.caml_gr_draw_arc(x, y, rx, ry, a1, a2));
    var
     _D_ = [0, Stdlib[6], cst_draw_arc_ellipse_circle],
     raise = caml_pop_trap();
    return raise(caml_maybe_attach_backtrace(_D_, 1));
   }
   function draw_ellipse(x, y, rx, ry, cont){
    return caml_cps_exact_call7(draw_arc, x, y, rx, ry, 0, 360, cont);
   }
   function draw_circle(x, y, r, cont){
    return caml_cps_exact_call7(draw_arc, x, y, r, r, 0, 360, cont);
   }
   function set_line_width(w, cont){
    if(0 <= w) return cont(runtime.caml_gr_set_line_width(w));
    var _C_ = [0, Stdlib[6], cst_set_line_width], raise = caml_pop_trap();
    return raise(caml_maybe_attach_backtrace(_C_, 1));
   }
   function fill_rect(x, y, w, h, cont){
    if(0 <= w && 0 <= h) return cont(runtime.caml_gr_fill_rect(x, y, w, h));
    var _B_ = [0, Stdlib[6], cst_fill_rect], raise = caml_pop_trap();
    return raise(caml_maybe_attach_backtrace(_B_, 1));
   }
   function fill_arc(x, y, rx, ry, a1, a2, cont){
    if(0 <= rx && 0 <= ry)
     return cont(runtime.caml_gr_fill_arc(x, y, rx, ry, a1, a2));
    var
     _A_ = [0, Stdlib[6], cst_fill_arc_ellipse_circle],
     raise = caml_pop_trap();
    return raise(caml_maybe_attach_backtrace(_A_, 1));
   }
   function fill_ellipse(x, y, rx, ry, cont){
    return caml_cps_exact_call7(fill_arc, x, y, rx, ry, 0, 360, cont);
   }
   function fill_circle(x, y, r, cont){
    return caml_cps_exact_call7(fill_arc, x, y, r, r, 0, 360, cont);
   }
   function get_image(x, y, w, h, cont){
    var image = runtime.caml_gr_create_image(w, h);
    runtime.caml_gr_blit_image(image, x, y);
    return cont(image);
   }
   function mouse_pos(param, cont){
    var e = caml_gr_wait_event(_f_);
    return cont([0, e[1], e[2]]);
   }
   function button_down(param, cont){
    var e = caml_gr_wait_event(_g_);
    return cont(e[3]);
   }
   function read_key(param, cont){
    var e = caml_gr_wait_event(_h_);
    return cont(e[5]);
   }
   function key_pressed(param, cont){
    var e = caml_gr_wait_event(_i_);
    return cont(e[4]);
   }
   function loop_at_exit(events, handler, cont){
    return caml_cps_call3
            (Stdlib_List[41],
             function(e, cont){return cont(4 !== e ? 1 : 0);},
             events,
             function(events){
              return caml_cps_call2
                      (Stdlib[100],
                       function(param, cont){
                        function _x_(_z_){
                         var e = caml_gr_wait_event(events);
                         return caml_cps_call2(handler, e, _x_);
                        }
                        runtime.caml_push_trap
                         (function(e){
                           return e === Stdlib[3]
                                   ? caml_cps_call2(close_graph, 0, cont)
                                   : caml_cps_call2
                                     (close_graph,
                                      0,
                                      function(_y_){
                                       var
raise = caml_pop_trap(),
e$0 = caml_maybe_attach_backtrace(e, 0);
                                       return raise(e$0);
                                      });
                          });
                        return _x_(0);
                       },
                       cont);
             });
   }
   function sub(param, _w_){
    var y2 = _w_[2], x2 = _w_[1], y1 = param[2], x1 = param[1];
    return [0, x1 - x2, y1 - y2];
   }
   function middle(param, _v_){
    var y2 = _v_[2], x2 = _v_[1], y1 = param[2], x1 = param[1];
    return [0, (x1 + x2) / 2., (y1 + y2) / 2.];
   }
   function area(param, _u_){
    var y2 = _u_[2], x2 = _u_[1], y1 = param[2], x1 = param[1];
    return Math.abs(x1 * y2 - x2 * y1);
   }
   function curveto(b, c, d, cont){
    var y = d[2], x = d[1];
    function float_point(param){
     var y = param[2], x = param[1];
     return [0, x, y];
    }
    function round(f){return f + 0.5 | 0;}
    function int_point(param, cont){
     var y = param[2], x = param[1], _t_ = round(y);
     return cont([0, round(x), _t_]);
    }
    var d$0 = float_point(d), c$0 = float_point(c), b$0 = float_point(b);
    return caml_cps_exact_call2
            (current_point,
             undef,
             function(_n_){
              var a = float_point(_n_);
              function spl(accu, a, b, c, d){
               var accu$0 = accu, a$0 = a, b$0 = b, c$0 = c;
               for(;;){
                var
                 v = sub(d, a$0),
                 y1 = v[2],
                 x1 = v[1],
                 s = Math.sqrt(x1 * x1 + y1 * y1),
                 _r_ = area(v, sub(a$0, b$0)) <= s ? 1 : 0,
                 _s_ = _r_ ? area(v, sub(a$0, c$0)) <= s ? 1 : 0 : _r_;
                if(_s_) return [0, d, accu$0];
                var
                 a$1 = middle(a$0, b$0),
                 o = middle(b$0, c$0),
                 b$1 = middle(a$1, o),
                 d$0 = middle(c$0, d),
                 c$1 = middle(o, d$0),
                 i = middle(b$1, c$1),
                 accu$1 = spl(accu$0, a$0, a$1, b$1, i),
                 accu$0 = accu$1,
                 a$0 = i,
                 b$0 = c$1,
                 c$0 = d$0;
               }
              }
              var points = spl([0, a, 0], a, b$0, c$0, d$0);
              return caml_cps_call3
                      (Stdlib_List[19],
                       int_point,
                       points,
                       function(_o_){
                        return caml_cps_call2
                                (Stdlib_Array[10],
                                 _o_,
                                 function(_p_){
                                  return caml_cps_exact_call2
  (draw_poly_line,
   _p_,
   function(_q_){return cont(caml_gr_moveto(x, y));});
                                 });
                       });
             });
   }
   var
    Graphics =
      [0,
       Graphic_failure,
       open_graph,
       close_graph,
       function(_m_, cont){
        return cont(runtime.caml_gr_set_window_title(_m_));
       },
       function(_l_, _k_, cont){
        return cont(runtime.caml_gr_resize_window(_l_, _k_));
       },
       rgb,
       white,
       black,
       black,
       white,
       16711680,
       65280,
       255,
       16776960,
       65535,
       16711935,
       plots,
       rmoveto,
       current_point,
       rlineto,
       curveto,
       draw_rect,
       draw_poly_line,
       draw_poly,
       draw_segments,
       draw_arc,
       draw_ellipse,
       draw_circle,
       set_line_width,
       function(_j_, cont){return cont(runtime.caml_gr_set_text_size(_j_));},
       fill_rect,
       fill_arc,
       fill_ellipse,
       fill_circle,
       -1,
       get_image,
       loop_at_exit,
       mouse_pos,
       button_down,
       read_key,
       key_pressed,
       auto_synchronize];
   runtime.caml_register_global(25, Graphics, "Graphics");
   return;
  }
  (globalThis));

//# unitInfo: Provides: GraphicsX11
//# unitInfo: Requires: Graphics, Stdlib, Stdlib__Hashtbl
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 4
              ? f(a0, a1, a2, a3)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/graphicsX11.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x01\xfe\0\0\0h\0\0\x01\x8e\0\0\x01\x80\xa0+GraphicsX11\xa0\xc1\xa0)window_id\x01\x01\x10\b\0\0;\0@@@A\x90\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xef@@@@\xb0\xc08src/unix/graphicsX11.mliR\x01\x04\x97\x01\x04\x97\xc0\x04\x02R\x01\x04\x97\x01\x04\xae@@@@\xa1\x04\x12@A@\xa0\xb0\xa0)window_id\x01\x01\x11\xd0\xc0\xc1@\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xb3\x90\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xf1@\x02\x05\xf5\xe1\0@\0\xf2@\xb0\xc0\x04\x16T\x01\x04\xb0\x01\x04\xb0\xc0\x04\x17T\x01\x04\xb0\x01\x04\xd1@@\xa1\x04'A@\xa0\xb0\xa0.open_subwindow\x01\x01\x12\xd0\xc0\xc1\x90!x\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xf3\xc0\xc1\x90!y\xc0\xb3\x90\x04\n@\x90@\x02\x05\xf5\xe1\0@\0\xf4\xc0\xc1\x90%width\xc0\xb3\x90\x04\x12@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xc1\x90&height\xc0\xb3\x90\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xf6\xc0\xb3\x04/@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\x02\x05\xf5\xe1\0@\0\xf9@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x04DY\x01\x05_\x01\x05_\xc0\x04EY\x01\x05_\x01\x05\xaa@@\xa1\x04UB@\xa0\xb0\xa0/close_subwindow\x01\x01\x13\xd0\xc0\xc1@\xc0\xb3\x04=@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x04F@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04V]\x01\x06\n\x01\x06\n\xc0\x04W]\x01\x06\n\x01\x061@@\xa1\x04gC@@\x84\x95\xa6\xbe\0\0\0i\0\0\0\x0f\0\0\x009\0\0\0.\xa0\xa0+GraphicsX11\x900M\xb4\xfd\xa3\xa3\xd2\xdf\b\x9a\xc01\x19*\xd1\xa59\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib = global_data.Stdlib,
    Graphics = global_data.Graphics,
    subwindows = runtime.caml_callback(Stdlib_Hashtbl[1], [0, 13]),
    cst_close_subwindow_no_such_su = "close_subwindow: no such subwindow: ";
   function open_subwindow(x, y, width, height, cont){
    var wid = runtime.caml_gr_open_subwindow(x, y, width, height);
    return caml_cps_call4
            (Stdlib_Hashtbl[5],
             subwindows,
             wid,
             0,
             function(_e_){return cont(wid);});
   }
   function close_subwindow(wid, cont){
    return caml_cps_call3
            (Stdlib_Hashtbl[9],
             subwindows,
             wid,
             function(_b_){
              return _b_
                      ? (runtime.caml_gr_close_subwindow
                         (wid),
                        caml_cps_call3(Stdlib_Hashtbl[10], subwindows, wid, cont))
                      : caml_cps_call3
                        (Stdlib[28],
                         cst_close_subwindow_no_such_su,
                         wid,
                         function(_c_){
                          var
                           _d_ = [0, Graphics[1], _c_],
                           raise = runtime.caml_pop_trap();
                          return raise(caml_maybe_attach_backtrace(_d_, 1));
                         });
             });
   }
   var
    GraphicsX11 =
      [0,
       function(_a_, cont){return cont(runtime.caml_gr_window_id(_a_));},
       open_subwindow,
       close_subwindow];
   runtime.caml_register_global(4, GraphicsX11, "GraphicsX11");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,

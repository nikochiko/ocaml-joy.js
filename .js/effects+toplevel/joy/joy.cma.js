// Generated by js_of_ocaml
//# buildInfo:effects=true, kind=cma, use-js-string=true, version=5.7.1+5.7.1

//# unitInfo: Provides: Joy__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   runtime.jsoo_create_file
    ("/static/cmis/joy__.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x02\xe4\0\0\0\x99\0\0\x02F\0\0\x02%\xa0%Joy__\xa0\xd3\xa0-Backend_cairoNA\xc0\x93\x90\x922Joy__Backend_cairo@\xb0\xc00lib/joy__.ml-genD}}\xc0\x04\x02D}\0f@\xa1\x04\x0f@@@\xa0\xd3\xa0,Backend_lazyOA\xc0\x93\x90\x921Joy__Backend_lazy@\xb0\xc0\x04\x0eG\x01\0\x8b\x01\0\x8b\xc0\x04\x0fG\x01\0\x8b\x01\0\xb2@\xa1\x04\x1cA@@\xa0\xd3\xa0+Backend_svgPA\xc0\x93\x90\x920Joy__Backend_svg@\xb0\xc0\x04\x1bJ\x01\0\xd6\x01\0\xd6\xc0\x04\x1cJ\x01\0\xd6\x01\0\xfb@\xa1\x04)B@@\xa0\xd3\xa0%ColorQA\xc0\x93\x90\x92*Joy__Color@\xb0\xc0\x04(M\x01\x01\x19\x01\x01\x19\xc0\x04)M\x01\x01\x19\x01\x012@\xa1\x046C@@\xa0\xd3\xa0'ContextRA\xc0\x93\x90\x92,Joy__Context@\xb0\xc0\x045P\x01\x01R\x01\x01R\xc0\x046P\x01\x01R\x01\x01o@\xa1\x04CD@@\xa0\xd3\xa0&RandomSA\xc0\x93\x90\x92+Joy__Random@\xb0\xc0\x04BS\x01\x01\x8e\x01\x01\x8e\xc0\x04CS\x01\x01\x8e\x01\x01\xa9@\xa1\x04PE@@\xa0\xd3\xa0%ShapeTA\xc0\x93\x90\x92*Joy__Shape@\xb0\xc0\x04OV\x01\x01\xc7\x01\x01\xc7\xc0\x04PV\x01\x01\xc7\x01\x01\xe0@\xa1\x04]F@@\xa0\xd3\xa0)TransformUA\xc0\x93\x90\x92.Joy__Transform@\xb0\xc0\x04\\Y\x01\x02\x02\x01\x02\x02\xc0\x04]Y\x01\x02\x02\x01\x02#@\xa1\x04jG@@\xa0\xd3\xa0$UtilVA\xc0\x93\x90\x92)Joy__Util@\xb0\xc0\x04i\\\x01\x02@\x01\x02@\xc0\x04j\\\x01\x02@\x01\x02W@\xa1\x04wH@@\xa0\xd3\xa0%Joy__W@\xc0\x91@\xa0\xb0\xa0*deprecated\xb0\xc0\x04w_\x01\x02s\x01\x02v\xc0\x04x_\x01\x02s\x01\x02\x80@\x90\xa0\xa0\xa0\xc0\x91\xb27this module is shadowed\xb0\xc0\x04\x82_\x01\x02s\x01\x02\x82\xc0\x04\x83_\x01\x02s\x01\x02\x99@@\xb0\xc0\x04\x85_\x01\x02s\x01\x02\x81\xc0\x04\x86_\x01\x02s\x01\x02\x9a@@@@\x04\x03@\xb0\xc0\x04\x88_\x01\x02s\x01\x02s\xc0\x04\x89_\x01\x02s\x01\x02\x9b@@\xb0\xc0\x04\x8b^\x01\x02Y\x01\x02Y\x04\x03@\xa1\x04\x98I@@@\x84\x95\xa6\xbe\0\0\0\xb4\0\0\0 \0\0\0s\0\0\0b\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa0)Joy__Util@\xa0\xa0.Joy__Transform@\xa0\xa0*Joy__Shape@\xa0\xa0+Joy__Random@\xa0\xa0,Joy__Context@\xa0\xa0*Joy__Color@\xa0\xa00Joy__Backend_svg@\xa0\xa01Joy__Backend_lazy@\xa0\xa02Joy__Backend_cairo@@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var Joy = [0], Joy$0 = [0, Joy];
   runtime.caml_register_global(0, Joy$0, "Joy__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Color
(function(globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_callback = runtime.caml_callback;
   runtime.jsoo_create_file
    ("/static/cmis/joy__Color.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x03w\0\0\0\xc7\0\0\x02\xf1\0\0\x02\xe4\xa0*Joy__Color\xa0\xc1\xa0%color\x01\x01 \b\0\0;\0@@@A\x90\xc0\x92\xa0\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xe5\xa0\xc0\xb3\x90\x04\x07@\x90@\x02\x05\xf5\xe1\0@\0\xe4\xa0\xc0\xb3\x90\x04\f@\x90@\x02\x05\xf5\xe1\0@\0\xe3\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe6@@@@\xb0\xc0-lib/color.mliA@@\xc0\x04\x02A@d@@@@\xa1\x04&@A@\xa0\xb0\xa0#rgb\x01\x01!\xd0\xc0\xc1@\xc0\xb3\x90\x04#@\x90@\x02\x05\xf5\xe1\0@\0\xe7\xc0\xc1@\xc0\xb3\x90\x04)@\x90@\x02\x05\xf5\xe1\0@\0\xe8\xc0\xc1@\xc0\xb3\x90\x04/@\x90@\x02\x05\xf5\xe1\0@\0\xe9\xc0\xb3\x90\x04=@\x90@\x02\x05\xf5\xe1\0@\0\xea@\x02\x05\xf5\xe1\0@\0\xeb@\x02\x05\xf5\xe1\0@\0\xec@\x02\x05\xf5\xe1\0@\0\xed@\xb0\xc0\x04 Cff\xc0\x04!Cf\0J@@\xa1\x04EA@\xa0\xb0\xa0%color\x01\x01\"\xd0\xc0\xc1\x91!a\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x90\x049@\x90@\x02\x05\xf5\xe1\0@\0\xee@\x90@\x02\x05\xf5\xe1\0@\0\xef\xc0\xc1@\xc0\xb3\x90\x04Q@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xc1@\xc0\xb3\x90\x04W@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xc1@\xc0\xb3\x90\x04]@\x90@\x02\x05\xf5\xe1\0@\0\xf2\xc0\xb3\x04.@\x90@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\x02\x05\xf5\xe1\0@\0\xf5@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7@\xb0\xc0\x04MD\0K\0K\xc0\x04ND\0K\0}@@\xa1\x04rB@\xa0\xb0\xa0%black\x01\x01#\xd0\xc0\xb3\x04:@\x90@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x04YE\0~\0~\xc0\x04ZE\0~\x01\0\x8f@@\xa1\x04~C@\xa0\xb0\xa0%white\x01\x01$\xd0\xc0\xb3\x04F@\x90@\x02\x05\xf5\xe1\0@\0\xf9@\xb0\xc0\x04eF\x01\0\x90\x01\0\x90\xc0\x04fF\x01\0\x90\x01\0\xa1@@\xa1\x04\x8aD@\xa0\xb0\xa0#red\x01\x01%\xd0\xc0\xb3\x04R@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\xb0\xc0\x04qG\x01\0\xa2\x01\0\xa2\xc0\x04rG\x01\0\xa2\x01\0\xb1@@\xa1\x04\x96E@\xa0\xb0\xa0%green\x01\x01&\xd0\xc0\xb3\x04^@\x90@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x04}H\x01\0\xb2\x01\0\xb2\xc0\x04~H\x01\0\xb2\x01\0\xc3@@\xa1\x04\xa2F@\xa0\xb0\xa0$blue\x01\x01'\xd0\xc0\xb3\x04j@\x90@\x02\x05\xf5\xe1\0@\0\xfc@\xb0\xc0\x04\x89I\x01\0\xc4\x01\0\xc4\xc0\x04\x8aI\x01\0\xc4\x01\0\xd4@@\xa1\x04\xaeG@\xa0\xb0\xa0&yellow\x01\x01(\xd0\xc0\xb3\x04v@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\xb0\xc0\x04\x95J\x01\0\xd5\x01\0\xd5\xc0\x04\x96J\x01\0\xd5\x01\0\xe7@@\xa1\x04\xbaH@\xa0\xb0\xa0+transparent\x01\x01)\xd0\xc0\xb3\x04\x82@\x90@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04\xa1K\x01\0\xe8\x01\0\xe8\xc0\x04\xa2K\x01\0\xe8\x01\0\xff@@\xa1\x04\xc6I@@\x84\x95\xa6\xbe\0\0\0\x82\0\0\0\x14\0\0\0J\0\0\0<\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var transparent = [0, 0, 0, 0, 0.];
   function rgb(r, g, b, cont){return cont([0, r, g, b, 1.]);}
   function color(opt, r, g, b, cont){
    if(opt) var sth = opt[1], a = sth; else var a = 1.;
    return cont([0, r, g, b, a]);
   }
   var
    black = caml_callback(rgb, [0, 0, 0]),
    white = caml_callback(rgb, [255, 255, 255]),
    red = caml_callback(rgb, [255, 1, 1]),
    green = caml_callback(rgb, [1, 255, 1]),
    blue = caml_callback(rgb, [1, 1, 255]),
    yellow = caml_callback(rgb, [255, 255, 255]),
    Joy_Color =
      [0, rgb, color, black, white, red, green, blue, yellow, transparent];
   runtime.caml_register_global(3, Joy_Color, "Joy__Color");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Shape
//# unitInfo: Requires: Joy__Color, Stdlib, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_exact_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1)
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy__Shape.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\f\xaf\0\0\x02\xb5\0\0\nt\0\0\nK\xa0*Joy__Shape\xa0\xc1\xa0%color\x01\x01H\b\0\0;\0@@@A\x90\xc0\xb3\xa1\xa1\x90\x92%Joy__%Color%color@\x90@\x02\x05\xf5\xe1\0@\0\xa5@@@@\xb0\xc0-lib/shape.mliA@@\xc0\x04\x02A@X@@@@\xa1\x04\x16@A@\xa0\xc1\xa0%point\x01\x01I\b\0\0;\0\xa0\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xa6@A\xa0\xa0\xe0\xa0!x\x01\x01\"@\x04\t\xb0\xc0\x04\x14BYk\xc0\x04\x15BYr@@\xa1\x04)B\xa0\xe0\xa0!y\x01\x01#@\x04\x11\xb0\xc0\x04\x1cBYs\xc0\x04\x1dBYy@@\xa1\x041C@@A@\xa0Y@\xa0@@@@\xb0\xc0\x04\"BYY\xc0\x04#BY{@@@@\xa1\x047AA@\xa0\xc1\xa0&circle\x01\x01J\b\0\0;\0@@\xa0\xa0\xe0\xa0!c\x01\x01%@\xc0\xb3\x90\x04,\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xaa@\x90@\x02\x05\xf5\xe1\0@\0\xab\xb0\xc0\x04;C|\0L\xc0\x04<C|\0\\@@\xa1\x04PE\xa0\xe0\xa0&radius\x01\x01&@\xc0\xb3\x90\x04\x0f@\x90@\x02\x05\xf5\xe1\0@\0\xa9\xb0\xc0\x04GC|\0]\xc0\x04HC|\0l@@\xa1\x04\\F\xa0\xe0\xa0&stroke\x01\x01'@\xc0\xb3\x90\x04`@\x90@\x02\x05\xf5\xe1\0@\0\xa8\xb0\xc0\x04SC|\0m\xc0\x04TC|\0|@@\xa1\x04hG\xa0\xe0\xa0$fill\x01\x01(@\xc0\xb3\x04\f@\x90@\x02\x05\xf5\xe1\0@\0\xa7\xb0\xc0\x04^C|\0}\xc0\x04_C|\x01\0\x89@@\xa1\x04sH@@A@@@@@\xb0\xc0\x04bC||\xc0\x04cC|\x01\0\x8b@@@@\xa1\x04wDA@\xa0\xc1\xa0'ellipse\x01\x01K\b\0\0;\0@@\xa0\xa0\xe0\xa0!c\x01\x01*@\xc0\xb3\x04@\xa0\xc0\xb3\x90\x04?@\x90@\x02\x05\xf5\xe1\0@\0\xb1@\x90@\x02\x05\xf5\xe1\0@\0\xb2\xb0\xc0\x04xF\x01\0\x9e\x01\0\xa0\xc0\x04yF\x01\0\x9e\x01\0\xb0@@\xa1\x04\x8dJ\xa0\xe0\xa0\"rx\x01\x01+@\xc0\xb3\x90\x04L@\x90@\x02\x05\xf5\xe1\0@\0\xb0\xb0\xc0\x04\x84G\x01\0\xb1\x01\0\xb3\xc0\x04\x85G\x01\0\xb1\x01\0\xbe@@\xa1\x04\x99K\xa0\xe0\xa0\"ry\x01\x01,@\xc0\xb3\x90\x04X@\x90@\x02\x05\xf5\xe1\0@\0\xaf\xb0\xc0\x04\x90H\x01\0\xbf\x01\0\xc1\xc0\x04\x91H\x01\0\xbf\x01\0\xcc@@\xa1\x04\xa5L\xa0\xe0\xa0(rotation\x01\x01-@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xae\xb0\xc0\x04\x9eI\x01\0\xcd\x01\0\xcf\xc0\x04\x9fI\x01\0\xcd\x01\0\xde@@\xa1\x04\xb3M\xa0\xe0\xa0&stroke\x01\x01.@\xc0\xb3\x04W@\x90@\x02\x05\xf5\xe1\0@\0\xad\xb0\xc0\x04\xa9J\x01\0\xdf\x01\0\xe1\xc0\x04\xaaJ\x01\0\xdf\x01\0\xf0@@\xa1\x04\xbeN\xa0\xe0\xa0$fill\x01\x01/@\xc0\xb3\x04b@\x90@\x02\x05\xf5\xe1\0@\0\xac\xb0\xc0\x04\xb4K\x01\0\xf1\x01\0\xf3\xc0\x04\xb5K\x01\0\xf1\x01\x01\0@@\xa1\x04\xc9O@@A@@@@@\xb0\xc0\x04\xb8E\x01\0\x8d\x01\0\x8d\xc0\x04\xb9L\x01\x01\x01\x01\x01\x02@@@@\xa1\x04\xcdIA@\xa0\xc1\xa0'polygon\x01\x01L\b\0\0;\0@@\xa0\xa0\xe0\xa0(vertices\x01\x011@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\x04\x9c\xa0\xc0\xb3\x90\x04\x9b@\x90@\x02\x05\xf5\xe1\0@\0\xb5@\x90@\x02\x05\xf5\xe1\0@\0\xb6@\x90@\x02\x05\xf5\xe1\0@\0\xb7\xb0\xc0\x04\xd5N\x01\x01\x04\x01\x01\x15\xc0\x04\xd6N\x01\x01\x04\x01\x011@@\xa1\x04\xeaQ\xa0\xe0\xa0&stroke\x01\x012@\xc0\xb3\x04\x8e@\x90@\x02\x05\xf5\xe1\0@\0\xb4\xb0\xc0\x04\xe0N\x01\x01\x04\x01\x012\xc0\x04\xe1N\x01\x01\x04\x01\x01A@@\xa1\x04\xf5R\xa0\xe0\xa0$fill\x01\x013@\xc0\xb3\x04\x99@\x90@\x02\x05\xf5\xe1\0@\0\xb3\xb0\xc0\x04\xebN\x01\x01\x04\x01\x01B\xc0\x04\xecN\x01\x01\x04\x01\x01N@@\xa1\x05\x01\0S@@A@@@@@\xb0\xc0\x04\xefN\x01\x01\x04\x01\x01\x04\xc0\x04\xf0N\x01\x01\x04\x01\x01P@@@@\xa1\x05\x01\x04PA@\xa0\xc1\xa0$line\x01\x01M\b\0\0;\0@@\xa0\xa0\xe0\xa0!a\x01\x015@\xc0\xb3\x04\xcd\xa0\xc0\xb3\x90\x04\xcc@\x90@\x02\x05\xf5\xe1\0@\0\xbb@\x90@\x02\x05\xf5\xe1\0@\0\xbc\xb0\xc0\x05\x01\x05O\x01\x01Q\x01\x01_\xc0\x05\x01\x06O\x01\x01Q\x01\x01o@@\xa1\x05\x01\x1aU\xa0\xe0\xa0!b\x01\x016@\xc0\xb3\x04\xdd\xa0\xc0\xb3\x90\x04\xdc@\x90@\x02\x05\xf5\xe1\0@\0\xb9@\x90@\x02\x05\xf5\xe1\0@\0\xba\xb0\xc0\x05\x01\x15O\x01\x01Q\x01\x01p\xc0\x05\x01\x16O\x01\x01Q\x01\x01\x80@@\xa1\x05\x01*V\xa0\xe0\xa0&stroke\x01\x017@\xc0\xb3\x04\xce@\x90@\x02\x05\xf5\xe1\0@\0\xb8\xb0\xc0\x05\x01 O\x01\x01Q\x01\x01\x81\xc0\x05\x01!O\x01\x01Q\x01\x01\x8f@@\xa1\x05\x015W@@A@@@@@\xb0\xc0\x05\x01$O\x01\x01Q\x01\x01Q\xc0\x05\x01%O\x01\x01Q\x01\x01\x91@@@@\xa1\x05\x019TA@\xa0\xc1\xa0%shape\x01\x01N\b\0\0;\0@@\xa1\xa0\xe0\xa0&Circle\x01\x019\x90\xa0\xc0\xb3\x90\x05\x01\x0f@\x90@\x02\x05\xf5\xe1\0@\0\xc2@@\xb0\xc0\x05\x018R\x01\x01\xa0\x01\x01\xa2\xc0\x05\x019R\x01\x01\xa0\x01\x01\xb4@@\xa1\x05\x01MY\xa0\xe0\xa0'Ellipse\x01\x01:\x90\xa0\xc0\xb3\x90\x04\xdd@\x90@\x02\x05\xf5\xe1\0@\0\xc1@@\xb0\xc0\x05\x01FS\x01\x01\xb5\x01\x01\xb7\xc0\x05\x01GS\x01\x01\xb5\x01\x01\xcb@@\xa1\x05\x01[Z\xa0\xe0\xa0$Line\x01\x01;\x90\xa0\xc0\xb3\x90\x04^@\x90@\x02\x05\xf5\xe1\0@\0\xc0@@\xb0\xc0\x05\x01TT\x01\x01\xcc\x01\x01\xce\xc0\x05\x01UT\x01\x01\xcc\x01\x01\xdc@@\xa1\x05\x01i[\xa0\xe0\xa0'Polygon\x01\x01<\x90\xa0\xc0\xb3\x90\x04\xa3@\x90@\x02\x05\xf5\xe1\0@\0\xbf@@\xb0\xc0\x05\x01bU\x01\x01\xdd\x01\x01\xdf\xc0\x05\x01cU\x01\x01\xdd\x01\x01\xf3@@\xa1\x05\x01w\\\xa0\xe0\xa0'Complex\x01\x01=\x90\xa0\xc0\xb3\x90\x04\xa6\xa0\xc0\xb3\x90\x04I@\x90@\x02\x05\xf5\xe1\0@\0\xbd@\x90@\x02\x05\xf5\xe1\0@\0\xbe@@\xb0\xc0\x05\x01uV\x01\x01\xf4\x01\x01\xf6\xc0\x05\x01vV\x01\x01\xf4\x01\x02\r@@\xa1\x05\x01\x8a]@@A@@@@@\xb0\xc0\x05\x01yQ\x01\x01\x93\x01\x01\x93\x04\x04@@@@\xa1\x05\x01\x8dXA@\xa0\xc1\xa0&shapes\x01\x01O\b\0\0;\0@@@A\x90\xc0\xb3\x90\x04\xbc\xa0\xc0\xb3\x04\x16@\x90@\x02\x05\xf5\xe1\0@\0\xc3@\x90@\x02\x05\xf5\xe1\0@\0\xc4@@@@\xb0\xc0\x05\x01\x8aX\x01\x02\x0f\x01\x02\x0f\xc0\x05\x01\x8bX\x01\x02\x0f\x01\x02'@@@@\xa1\x05\x01\x9f^A@\xa0\xb0\xa0%point\x01\x01P\xd0\xc0\xc1@\xc0\xb3\x90\x04\xfd@\x90@\x02\x05\xf5\xe1\0@\0\xc5\xc0\xc1@\xc0\xb3\x90\x05\x01\x03@\x90@\x02\x05\xf5\xe1\0@\0\xc6\xc0\xb3\x05\x01o\xa0\xc0\xb3\x90\x05\x01n@\x90@\x02\x05\xf5\xe1\0@\0\xc7@\x90@\x02\x05\xf5\xe1\0@\0\xc8@\x02\x05\xf5\xe1\0@\0\xc9@\x02\x05\xf5\xe1\0@\0\xca@\xb0\xc0\x05\x01\xa7Z\x01\x02)\x01\x02)\xc0\x05\x01\xa8Z\x01\x02)\x01\x02N@@\xa1\x05\x01\xbc_@\xa0\xb0\xa0&circle\x01\x01Q\xd0\xc0\xc1\x91!c\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x05\x01\x8a\xa0\xc0\xb3\x90\x05\x01\x89@\x90@\x02\x05\xf5\xe1\0@\0\xcb@\x90@\x02\x05\xf5\xe1\0@\0\xcc@\x90@\x02\x05\xf5\xe1\0@\0\xcd\xc0\xc1@\xc0\xb3\x90\x05\x01-@\x90@\x02\x05\xf5\xe1\0@\0\xce\xc0\xb3\x04Y@\x90@\x02\x05\xf5\xe1\0@\0\xcf@\x02\x05\xf5\xe1\0@\0\xd0@\x02\x05\xf5\xe1\0@\0\xd1@\xb0\xc0\x05\x01\xcc[\x01\x02O\x01\x02O\xc0\x05\x01\xcd[\x01\x02O\x01\x02z@@\xa1\x05\x01\xe1`@\xa0\xb0\xa0)rectangle\x01\x01R\xd0\xc0\xc1\x91!c\xc0\xb3\x04%\xa0\xc0\xb3\x05\x01\xac\xa0\xc0\xb3\x90\x05\x01\xab@\x90@\x02\x05\xf5\xe1\0@\0\xd2@\x90@\x02\x05\xf5\xe1\0@\0\xd3@\x90@\x02\x05\xf5\xe1\0@\0\xd4\xc0\xc1@\xc0\xb3\x90\x05\x01O@\x90@\x02\x05\xf5\xe1\0@\0\xd5\xc0\xc1@\xc0\xb3\x90\x05\x01U@\x90@\x02\x05\xf5\xe1\0@\0\xd6\xc0\xb3\x04\x81@\x90@\x02\x05\xf5\xe1\0@\0\xd7@\x02\x05\xf5\xe1\0@\0\xd8@\x02\x05\xf5\xe1\0@\0\xd9@\x02\x05\xf5\xe1\0@\0\xda@\xb0\xc0\x05\x01\xf4\\\x01\x02{\x01\x02{\xc0\x05\x01\xf5\\\x01\x02{\x01\x02\xb0@@\xa1\x05\x02\ta@\xa0\xb0\xa0'ellipse\x01\x01S\xd0\xc0\xc1\x91!c\xc0\xb3\x04M\xa0\xc0\xb3\x05\x01\xd4\xa0\xc0\xb3\x90\x05\x01\xd3@\x90@\x02\x05\xf5\xe1\0@\0\xdb@\x90@\x02\x05\xf5\xe1\0@\0\xdc@\x90@\x02\x05\xf5\xe1\0@\0\xdd\xc0\xc1@\xc0\xb3\x90\x05\x01w@\x90@\x02\x05\xf5\xe1\0@\0\xde\xc0\xc1@\xc0\xb3\x90\x05\x01}@\x90@\x02\x05\xf5\xe1\0@\0\xdf\xc0\xb3\x04\xa9@\x90@\x02\x05\xf5\xe1\0@\0\xe0@\x02\x05\xf5\xe1\0@\0\xe1@\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe3@\xb0\xc0\x05\x02\x1c]\x01\x02\xb1\x01\x02\xb1\xc0\x05\x02\x1d]\x01\x02\xb1\x01\x02\xe4@@\xa1\x05\x021b@\xa0\xb0\xa0'complex\x01\x01T\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01a\xa0\xc0\xb3\x04\xbb@\x90@\x02\x05\xf5\xe1\0@\0\xe4@\x90@\x02\x05\xf5\xe1\0@\0\xe5\xc0\xb3\x04\xbf@\x90@\x02\x05\xf5\xe1\0@\0\xe6@\x02\x05\xf5\xe1\0@\0\xe7@\xb0\xc0\x05\x022^\x01\x02\xe5\x01\x02\xe5\xc0\x05\x023^\x01\x02\xe5\x01\x03\x06@@\xa1\x05\x02Gc@\xa0\xb0\xa0$line\x01\x01U\xd0\xc0\xc1\x91!a\xc0\xb3\x04\x8b\xa0\xc0\xb3\x05\x02\x12\xa0\xc0\xb3\x90\x05\x02\x11@\x90@\x02\x05\xf5\xe1\0@\0\xe8@\x90@\x02\x05\xf5\xe1\0@\0\xe9@\x90@\x02\x05\xf5\xe1\0@\0\xea\xc0\xc1@\xc0\xb3\x05\x02\x1d\xa0\xc0\xb3\x90\x05\x02\x1c@\x90@\x02\x05\xf5\xe1\0@\0\xeb@\x90@\x02\x05\xf5\xe1\0@\0\xec\xc0\xb3\x04\xe5@\x90@\x02\x05\xf5\xe1\0@\0\xed@\x02\x05\xf5\xe1\0@\0\xee@\x02\x05\xf5\xe1\0@\0\xef@\xb0\xc0\x05\x02X_\x01\x03\x07\x01\x03\x07\xc0\x05\x02Y_\x01\x03\x07\x01\x038@@\xa1\x05\x02md@\xa0\xb0\xa0'polygon\x01\x01V\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x9d\xa0\xc0\xb3\x05\x027\xa0\xc0\xb3\x90\x05\x026@\x90@\x02\x05\xf5\xe1\0@\0\xf0@\x90@\x02\x05\xf5\xe1\0@\0\xf1@\x90@\x02\x05\xf5\xe1\0@\0\xf2\xc0\xb3\x05\x01\0@\x90@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\xb0\xc0\x05\x02s`\x01\x039\x01\x039\xc0\x05\x02t`\x01\x039\x01\x03`@@\xa1\x05\x02\x88e@\xa0\xb0\xa0+with_stroke\x01\x01W\xd0\xc0\xc1@\xc0\xb3\x05\x02/@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xc1@\xc0\xb3\x05\x01\x13@\x90@\x02\x05\xf5\xe1\0@\0\xf6\xc0\xb3\x05\x01\x16@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\x02\x05\xf5\xe1\0@\0\xf9@\xb0\xc0\x05\x02\x89a\x01\x03a\x01\x03a\xc0\x05\x02\x8aa\x01\x03a\x01\x03\x8a@@\xa1\x05\x02\x9ef@\xa0\xb0\xa0)with_fill\x01\x01X\xd0\xc0\xc1@\xc0\xb3\x05\x02E@\x90@\x02\x05\xf5\xe1\0@\0\xfa\xc0\xc1@\xc0\xb3\x05\x01)@\x90@\x02\x05\xf5\xe1\0@\0\xfb\xc0\xb3\x05\x01,@\x90@\x02\x05\xf5\xe1\0@\0\xfc@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x05\x02\x9fb\x01\x03\x8b\x01\x03\x8b\xc0\x05\x02\xa0b\x01\x03\x8b\x01\x03\xb2@@\xa1\x05\x02\xb4g@@\x84\x95\xa6\xbe\0\0\0\xa1\0\0\0\x19\0\0\0\\\0\0\0K\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_List = global_data.Stdlib__List,
    Stdlib = global_data.Stdlib,
    Joy_Color = global_data.Joy__Color;
   function point(x, y, cont){return cont([0, x, y]);}
   var
    origin = [0, 0, 0],
    _a_ = [4, 0],
    cst_lines_do_not_have_a_fill_f = "lines do not have a fill field!";
   function circle(opt, r, cont){
    if(opt) var sth = opt[1], c = sth; else var c = origin;
    return cont([0, [0, c, r, Joy_Color[3], Joy_Color[9]]]);
   }
   function polygon(vertices, cont){
    return cont([3, [0, vertices, Joy_Color[3], Joy_Color[9]]]);
   }
   function rectangle(opt, width, height, cont){
    if(opt) var sth = opt[1], c = sth; else var c = origin;
    var x = c[1] - width / 2., y = c[2] - height / 2.;
    return caml_cps_exact_call2
            (polygon,
             [0,
              [0, x, y],
              [0,
               [0, x, y + height],
               [0, [0, x + width, y + height], [0, [0, x + width, y], 0]]]],
             cont);
   }
   function ellipse(opt, rx, ry, cont){
    if(opt) var sth = opt[1], c = sth; else var c = origin;
    return cont([1, [0, c, rx, ry, 0, Joy_Color[3], Joy_Color[9]]]);
   }
   function line(opt, b, cont){
    if(opt) var sth = opt[1], a = sth; else var a = origin;
    return cont([2, [0, a, b, Joy_Color[3]]]);
   }
   function complex(shapes, cont){
    return shapes ? cont([4, shapes]) : cont(_a_);
   }
   function with_stroke(stroke, param, cont){
    switch(param[0]){
      case 0:
       var circle = param[1];
       return cont([0, [0, circle[1], circle[2], stroke, circle[4]]]);
      case 1:
       var ellipse = param[1];
       return cont
               ([1,
                 [0,
                  ellipse[1],
                  ellipse[2],
                  ellipse[3],
                  ellipse[4],
                  stroke,
                  ellipse[6]]]);
      case 2:
       var line = param[1]; return cont([2, [0, line[1], line[2], stroke]]);
      case 3:
       var polygon = param[1];
       return cont([3, [0, polygon[1], stroke, polygon[3]]]);
      default:
       var complex = param[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_f_, cont){
                 return caml_cps_exact_call3(with_stroke, stroke, _f_, cont);
                },
                complex,
                function(_e_){return cont([4, _e_]);});
    }
   }
   function with_fill(fill, line, cont){
    switch(line[0]){
      case 0:
       var circle = line[1];
       return cont([0, [0, circle[1], circle[2], circle[3], fill]]);
      case 1:
       var ellipse = line[1];
       return cont
               ([1,
                 [0,
                  ellipse[1],
                  ellipse[2],
                  ellipse[3],
                  ellipse[4],
                  ellipse[5],
                  fill]]);
      case 2:
       return caml_cps_call2
               (Stdlib[46],
                cst_lines_do_not_have_a_fill_f,
                function(_d_){return cont(line);});
      case 3:
       var polygon = line[1];
       return cont([3, [0, polygon[1], polygon[2], fill]]);
      default:
       var complex = line[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_c_, cont){
                 return caml_cps_exact_call3(with_fill, fill, _c_, cont);
                },
                complex,
                function(_b_){return cont([4, _b_]);});
    }
   }
   var
    Joy_Shape =
      [0,
       point,
       circle,
       rectangle,
       ellipse,
       complex,
       line,
       polygon,
       with_stroke,
       with_fill];
   runtime.caml_register_global(7, Joy_Shape, "Joy__Shape");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Util
//# unitInfo: Requires: Stdlib__Float, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2, a3)
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy__Util.cmi",
     'Caml1999I032\x84\x95\xa6\xbe\0\0\b\x1b\0\0\x01\xe7\0\0\x06\xd1\0\0\x06\xab\xa0)Joy__Util\xa0\xb0\xa0"/~\x01\x01E\xd0\xc0\xc1@\xc0\xb3\xa1\xa1\x90\x92%Joy__%Shape%point\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xa5@\x90@\x02\x05\xf5\xe1\0@\0\xa6\xc0\xc1@\xc0\xb3\xa1\xa1\x04\x13%Shape%point\xa0\xc0\xb3\x90\x04\x10@\x90@\x02\x05\xf5\xe1\0@\0\xa7@\x90@\x02\x05\xf5\xe1\0@\0\xa8\xc0\xb3\xa1\xa1\x04\x1f%Shape%point\xa0\xc0\xb3\x90\x04\x1c@\x90@\x02\x05\xf5\xe1\0@\0\xa9@\x90@\x02\x05\xf5\xe1\0@\0\xaa@\x02\x05\xf5\xe1\0@\0\xab@\x02\x05\xf5\xe1\0@\0\xac@\xb0\xc0,lib/util.mliA@@\xc0\x04\x02A@\0H@@\xa1\x048@@\xa0\xb0\xa0"-!\x01\x01F\xd0\xc0\xc1@\xc0\xb3\xa1\xa1\x047%Shape%point\xa0\xc0\xb3\x90\x044@\x90@\x02\x05\xf5\xe1\0@\0\xad@\x90@\x02\x05\xf5\xe1\0@\0\xae\xc0\xc1@\xc0\xb3\x90\x04;@\x90@\x02\x05\xf5\xe1\0@\0\xaf\xc0\xb3\xa1\xa1\x04I%Shape%point\xa0\xc0\xb3\x90\x04F@\x90@\x02\x05\xf5\xe1\0@\0\xb0@\x90@\x02\x05\xf5\xe1\0@\0\xb1@\x02\x05\xf5\xe1\0@\0\xb2@\x02\x05\xf5\xe1\0@\0\xb3@\xb0\xc0\x04*B\0I\0I\xc0\x04+B\0I\x01\0\x85@@\xa1\x04aA@\xa0\xb0\xa0"/!\x01\x01G\xd0\xc0\xc1@\xc0\xb3\xa1\xa1\x04`%Shape%point\xa0\xc0\xb3\x90\x04]@\x90@\x02\x05\xf5\xe1\0@\0\xb4@\x90@\x02\x05\xf5\xe1\0@\0\xb5\xc0\xc1@\xc0\xb3\x90\x04d@\x90@\x02\x05\xf5\xe1\0@\0\xb6\xc0\xb3\xa1\xa1\x04r%Shape%point\xa0\xc0\xb3\x90\x04o@\x90@\x02\x05\xf5\xe1\0@\0\xb7@\x90@\x02\x05\xf5\xe1\0@\0\xb8@\x02\x05\xf5\xe1\0@\0\xb9@\x02\x05\xf5\xe1\0@\0\xba@\xb0\xc0\x04SC\x01\0\x86\x01\0\x86\xc0\x04TC\x01\0\x86\x01\0\xc2@@\xa1\x04\x8aB@\xa0\xb0\xa0"*!\x01\x01H\xd0\xc0\xc1@\xc0\xb3\xa1\xa1\x04\x89%Shape%point\xa0\xc0\xb3\x90\x04\x86@\x90@\x02\x05\xf5\xe1\0@\0\xbb@\x90@\x02\x05\xf5\xe1\0@\0\xbc\xc0\xc1@\xc0\xb3\x90\x04\x8d@\x90@\x02\x05\xf5\xe1\0@\0\xbd\xc0\xb3\xa1\xa1\x04\x9b%Shape%point\xa0\xc0\xb3\x90\x04\x98@\x90@\x02\x05\xf5\xe1\0@\0\xbe@\x90@\x02\x05\xf5\xe1\0@\0\xbf@\x02\x05\xf5\xe1\0@\0\xc0@\x02\x05\xf5\xe1\0@\0\xc1@\xb0\xc0\x04|D\x01\0\xc3\x01\0\xc3\xc0\x04}D\x01\0\xc3\x01\0\xff@@\xa1\x04\xb3C@\xa0\xb0\xa0$pmap\x01\x01I\xd0\xc0\xc1@\xc0\xc1@\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xc3\xc0\x90\x90!b\x02\x05\xf5\xe1\0@\0\xc5@\x02\x05\xf5\xe1\0@\0\xc2\xc0\xc1@\xc0\xb3\xa1\xa1\x04\xbe%Shape%point\xa0\x04\x11@\x90@\x02\x05\xf5\xe1\0@\0\xc4\xc0\xb3\xa1\xa1\x04\xc6%Shape%point\xa0\x04\x15@\x90@\x02\x05\xf5\xe1\0@\0\xc6@\x02\x05\xf5\xe1\0@\0\xc7@\x02\x05\xf5\xe1\0@\0\xc8@\xb0\xc0\x04\xa3E\x01\x01\0\x01\x01\0\xc0\x04\xa4E\x01\x01\0\x01\x019@@\xa1\x04\xdaD@\xa0\xb0\xa0$tmap\x01\x01J\xd0\xc0\xc1@\xc0\xc1@\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xca\xc0\x90\x90!b\x02\x05\xf5\xe1\0@\0\xcc@\x02\x05\xf5\xe1\0@\0\xc9\xc0\xc1@\xc0\x92\xa0\x04\r\xa0\x04\x0e@\x02\x05\xf5\xe1\0@\0\xcb\xc0\x92\xa0\x04\r\xa0\x04\x0e@\x02\x05\xf5\xe1\0@\0\xcd@\x02\x05\xf5\xe1\0@\0\xce@\x02\x05\xf5\xe1\0@\0\xcf@\xb0\xc0\x04\xc2F\x01\x01:\x01\x01:\xc0\x04\xc3F\x01\x01:\x01\x01e@@\xa1\x04\xf9E@\xa0\xb0\xa0%tmap3\x01\x01K\xd0\xc0\xc1@\xc0\xc1@\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xd1\xc0\x90\x90!b\x02\x05\xf5\xe1\0@\0\xd3@\x02\x05\xf5\xe1\0@\0\xd0\xc0\xc1@\xc0\x92\xa0\x04\r\xa0\x04\x0e\xa0\x04\x0f@\x02\x05\xf5\xe1\0@\0\xd2\xc0\x92\xa0\x04\x0e\xa0\x04\x0f\xa0\x04\x10@\x02\x05\xf5\xe1\0@\0\xd4@\x02\x05\xf5\xe1\0@\0\xd5@\x02\x05\xf5\xe1\0@\0\xd6@\xb0\xc0\x04\xe3G\x01\x01f\x01\x01f\xc0\x04\xe4G\x01\x01f\x01\x01\x9c@@\xa1\x05\x01\x1aF@\xa0\xb0\xa0%tmap4\x01\x01L\xd0\xc0\xc1@\xc0\xc1@\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xd8\xc0\x90\x90!b\x02\x05\xf5\xe1\0@\0\xda@\x02\x05\xf5\xe1\0@\0\xd7\xc0\xc1@\xc0\x92\xa0\x04\r\xa0\x04\x0e\xa0\x04\x0f\xa0\x04\x10@\x02\x05\xf5\xe1\0@\0\xd9\xc0\x92\xa0\x04\x0f\xa0\x04\x10\xa0\x04\x11\xa0\x04\x12@\x02\x05\xf5\xe1\0@\0\xdb@\x02\x05\xf5\xe1\0@\0\xdc@\x02\x05\xf5\xe1\0@\0\xdd@\xb0\xc0\x05\x01\x06H\x01\x01\x9d\x01\x01\x9d\xc0\x05\x01\x07H\x01\x01\x9d\x01\x01\xdd@@\xa1\x05\x01=G@\xa0\xb0\xa0">>\x01\x01M\xd0\xc0\xc1@\xc0\xc1@\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xe1\xc0\x90\x90!b\x02\x05\xf5\xe1\0@\0\xdf@\x02\x05\xf5\xe1\0@\0\xde\xc0\xc1@\xc0\xc1@\x04\b\xc0\x90\x90!c\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe0\xc0\xc1@\x04\x12\x04\x06@\x02\x05\xf5\xe1\0@\0\xe3@\x02\x05\xf5\xe1\0@\0\xe4@\x02\x05\xf5\xe1\0@\0\xe5@\xb0\xc0\x05\x01%I\x01\x01\xde\x01\x01\xde\xc0\x05\x01&I\x01\x01\xde\x01\x02\x0f@@\xa1\x05\x01\\H@\xa0\xb0\xa0$take\x01\x01N\xd0\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xe6\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xe9@\x90@\x02\x05\xf5\xe1\0@\0\xe7\xc0\x92\xa0\xc0\xb3\x90\x04\x0e\xa0\x04\f@\x90@\x02\x05\xf5\xe1\0@\0\xea\xa0\xc0\xb3\x90\x04\x14\xa0\x04\x12@\x90@\x02\x05\xf5\xe1\0@\0\xe8@\x02\x05\xf5\xe1\0@\0\xeb@\x02\x05\xf5\xe1\0@\0\xec@\x02\x05\xf5\xe1\0@\0\xed@\xb0\xc0\x05\x01QJ\x01\x02\x10\x01\x02\x10\xc0\x05\x01RJ\x01\x02\x10\x01\x02>@@\xa1\x05\x01\x88I@\xa0\xb0\xa0)partition\x01\x01O\xd0\xc0\xc1@\xc0\xb3\x90\x04,@\x90@\x02\x05\xf5\xe1\0@\0\xee\xc0\xc1\x91$step\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x90\x04:@\x90@\x02\x05\xf5\xe1\0@\0\xef@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xc1@\xc0\xb3\x90\x049\xa0\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\0\xf2@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xb3\x90\x04B\xa0\xc0\xb3\x90\x04F\xa0\x04\r@\x90@\x02\x05\xf5\xe1\0@\0\xf3@\x90@\x02\x05\xf5\xe1\0@\0\xf4@\x02\x05\xf5\xe1\0@\0\xf5@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7@\xb0\xc0\x05\x01\x84K\x01\x02?\x01\x02?\xc0\x05\x01\x85K\x01\x02?\x01\x02z@@\xa1\x05\x01\xbbJ@\xa0\xb0\xa0%range\x01\x01P\xd0\xc0\xc1@\xc0\xb3\x90\x04_@\x90@\x02\x05\xf5\xe1\0@\0\xf8\xc0\xb3\x90\x04[\xa0\xc0\xb3\x90\x04g@\x90@\x02\x05\xf5\xe1\0@\0\xf9@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x05\x01\x9cL\x01\x02{\x01\x02{\xc0\x05\x01\x9dL\x01\x02{\x01\x02\x96@@\xa1\x05\x01\xd3K@\xa0\xb0\xa0*to_radians\x01\x01Q\xd0\xc0\xc1@\xc0\xb3\x90\x04w@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x05\x01\xcc@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x05\x01\xafM\x01\x02\x97\x01\x02\x97\xc0\x05\x01\xb0M\x01\x02\x97\x01\x02\xb4@@\xa1\x05\x01\xe6L@@\x84\x95\xa6\xbe\0\0\0\xbf\0\0\0\x1e\0\0\0n\0\0\0Z\xa0\xa0)Joy__Util\x900u\x03\xb6NFA\xe4b\\\xd96\x963r\xdbx\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9\'d\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@');
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_List = global_data.Stdlib__List,
    Stdlib_Float = global_data.Stdlib__Float,
    _a_ = [0, 0, 0];
   function symbol(p1, p2, cont){
    return cont([0, p1[1] / p2[1], p1[1] / p2[1]]);
   }
   function symbol$0(param, scalar, cont){
    var y = param[2], x = param[1];
    return cont([0, x - scalar, y - scalar]);
   }
   function symbol$1(param, scalar, cont){
    var y = param[2], x = param[1];
    return cont([0, x / scalar, y / scalar]);
   }
   function symbol$2(param, scalar, cont){
    var y = param[2], x = param[1];
    return cont([0, x * scalar, y * scalar]);
   }
   function pmap(f, param, cont){
    var y = param[2], x = param[1];
    return caml_cps_call2
            (f,
             y,
             function(_p_){
              return caml_cps_call2
                      (f, x, function(_q_){return cont([0, _q_, _p_]);});
             });
   }
   function tmap(f, param, cont){
    var y = param[2], x = param[1];
    return caml_cps_call2
            (f,
             y,
             function(_n_){
              return caml_cps_call2
                      (f, x, function(_o_){return cont([0, _o_, _n_]);});
             });
   }
   function tmap3(f, param, cont){
    var c = param[3], b = param[2], a = param[1];
    return caml_cps_call2
            (f,
             c,
             function(_k_){
              return caml_cps_call2
                      (f,
                       b,
                       function(_l_){
                        return caml_cps_call2
                                (f, a, function(_m_){return cont([0, _m_, _l_, _k_]);});
                       });
             });
   }
   function tmap4(f, param, cont){
    var d = param[4], c = param[3], b = param[2], a = param[1];
    return caml_cps_call2
            (f,
             d,
             function(_g_){
              return caml_cps_call2
                      (f,
                       c,
                       function(_h_){
                        return caml_cps_call2
                                (f,
                                 b,
                                 function(_i_){
                                  return caml_cps_call2
  (f, a, function(_j_){return cont([0, _j_, _i_, _h_, _g_]);});
                                 });
                       });
             });
   }
   function symbol$3(f, g, x, cont){
    return caml_cps_call2
            (f, x, function(_f_){return caml_cps_call2(g, _f_, cont);});
   }
   function take(n, lst, cont){
    if(0 === n) return cont([0, 0, lst]);
    if(! lst) return cont(_a_);
    var xs = lst[2], x = lst[1];
    return caml_cps_exact_call3
            (take,
             n - 1 | 0,
             xs,
             function(match){
              var rest = match[2], taken = match[1];
              return cont([0, [0, x, taken], rest]);
             });
   }
   function partition(n, opt, lst, cont){
    if(opt) var sth = opt[1], step = sth; else var step = 0;
    return lst
            ? caml_cps_exact_call3
              (take,
               n,
               lst,
               function(match){
                var taken = match[1];
                return caml_cps_call2
                        (Stdlib_List[1],
                         taken,
                         function(_c_){
                          return _c_ === n
                                  ? caml_cps_call2
                                    (Stdlib_List[6],
                                     lst,
                                     function(_d_){
                                      return caml_cps_exact_call4
      (partition,
       n,
       [0, step],
       _d_,
       function(_e_){return cont([0, taken, _e_]);});
                                     })
                                  : cont(0);
                         });
               })
            : cont(0);
   }
   function range(n, cont){
    return caml_cps_call3
            (Stdlib_List[10], n, function(_b_, cont){return cont(_b_);}, cont);
   }
   function to_radians(degrees, cont){
    return cont(degrees * Stdlib_Float[9] / 180.);
   }
   var
    Joy_Util =
      [0,
       symbol,
       symbol$0,
       symbol$1,
       symbol$2,
       pmap,
       tmap,
       tmap3,
       tmap4,
       symbol$3,
       take,
       partition,
       range,
       to_radians];
   runtime.caml_register_global(4, Joy_Util, "Joy__Util");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Transform
//# unitInfo: Requires: Joy__Util, Stdlib, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_cps_exact_call1(f, a0){
    return runtime.caml_stack_check_depth()
            ? f(a0)
            : runtime.caml_trampoline_return(f, [a0]);
   }
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2, a3)
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy__Transform.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x03\xc8\0\0\0\xca\0\0\x03\x0e\0\0\x02\xf3\xa0.Joy__Transform\xa0\xc1\xa0.transformation\x01\x019\b\0\0;\0@@@A\x90\xc0\xc1@\xc0\xb3\xa1\xa1\x90\x92%Joy__%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xdd\xc0\xb3\xa1\xa1\x04\n%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xde@\x02\x05\xf5\xe1\0@\0\xdf@@@@\xb0\xc01lib/transform.mliA@@\xc0\x04\x02A@p@@@@\xa1\x04\x1f@A@\xa0\xb0\xa0)translate\x01\x01:\xd0\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xe0\xc0\xc1@\xc0\xb3\x90\x04\b@\x90@\x02\x05\xf5\xe1\0@\0\xe1\xc0\xb3\x90\x042@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe3@\x02\x05\xf5\xe1\0@\0\xe4@\xb0\xc0\x04\x1cCrr\xc0\x04\x1dCr\0^@@\xa1\x04:A@\xa0\xb0\xa0%scale\x01\x01;\xd0\xc0\xc1@\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xe5\xc0\xb3\x04\x15@\x90@\x02\x05\xf5\xe1\0@\0\xe6@\x02\x05\xf5\xe1\0@\0\xe7@\xb0\xc0\x040D\0_\0_\xc0\x041D\0_\x01\0\x82@@\xa1\x04NB@\xa0\xb0\xa0&rotate\x01\x01<\xd0\xc0\xc1@\xc0\xb3\x90\x04/@\x90@\x02\x05\xf5\xe1\0@\0\xe8\xc0\xb3\x04'@\x90@\x02\x05\xf5\xe1\0@\0\xe9@\x02\x05\xf5\xe1\0@\0\xea@\xb0\xc0\x04BE\x01\0\x83\x01\0\x83\xc0\x04CE\x01\0\x83\x01\0\xa5@@\xa1\x04`C@\xa0\xb0\xa0'compose\x01\x01=\xd0\xc0\xc1@\xc0\xb3\x045@\x90@\x02\x05\xf5\xe1\0@\0\xeb\xc0\xc1@\xc0\xb3\x04:@\x90@\x02\x05\xf5\xe1\0@\0\xec\xc0\xb3\x04=@\x90@\x02\x05\xf5\xe1\0@\0\xed@\x02\x05\xf5\xe1\0@\0\xee@\x02\x05\xf5\xe1\0@\0\xef@\xb0\xc0\x04XF\x01\0\xa6\x01\0\xa6\xc0\x04YF\x01\0\xa6\x01\0\xe6@@\xa1\x04vD@\xa0\xb0\xa0&repeat\x01\x01>\xd0\xc0\xc1@\xc0\xb3\x90\x04W@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xc1@\xc0\xb3\x04Q@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xb3\x04T@\x90@\x02\x05\xf5\xe1\0@\0\xf2@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\xb0\xc0\x04oG\x01\0\xe7\x01\0\xe7\xc0\x04pG\x01\0\xe7\x01\x01\x1b@@\xa1\x04\x8dE@\xa0\xb0\xa0(map_fill\x01\x01?\xd0\xc0\xc1@\xc0\xc1@\xc0\xb3\xa1\xa1\x04\x8d%Color%color@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xb3\xa1\xa1\x04\x94%Color%color@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7\xc0\xb3\x04r@\x90@\x02\x05\xf5\xe1\0@\0\xf8@\x02\x05\xf5\xe1\0@\0\xf9@\xb0\xc0\x04\x8dH\x01\x01\x1c\x01\x01\x1c\xc0\x04\x8eH\x01\x01\x1c\x01\x01Y@@\xa1\x04\xabF@\xa0\xb0\xa0*map_stroke\x01\x01@\xd0\xc0\xc1@\xc0\xc1@\xc0\xb3\xa1\xa1\x04\xab%Color%color@\x90@\x02\x05\xf5\xe1\0@\0\xfa\xc0\xb3\xa1\xa1\x04\xb2%Color%color@\x90@\x02\x05\xf5\xe1\0@\0\xfb@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x04\x90@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04\xabI\x01\x01Z\x01\x01Z\xc0\x04\xacI\x01\x01Z\x01\x01\x99@@\xa1\x04\xc9G@@\x84\x95\xa6\xbe\0\0\0\xc4\0\0\0\x1e\0\0\0o\0\0\0Z\xa0\xa0.Joy__Transform\x900\xf0I1\x97}\xc6'~-\xf4\x9c*B\xd1\xd4\xec\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_List = global_data.Stdlib__List,
    Joy_Util = global_data.Joy__Util,
    Stdlib = global_data.Stdlib,
    cst_Lines_do_not_have_a_fill_f = "Lines do not have a fill field!";
   function translate(dx, dy, param, cont){
    switch(param[0]){
      case 0:
       var circle = param[1];
       return cont
               ([0,
                 [0,
                  [0, circle[1][1] + dx, circle[1][2] + dy],
                  circle[2],
                  circle[3],
                  circle[4]]]);
      case 1:
       var ellipse = param[1];
       return cont
               ([1,
                 [0,
                  [0, ellipse[1][1] + dx, ellipse[1][2] + dy],
                  ellipse[2],
                  ellipse[3],
                  ellipse[4],
                  ellipse[5],
                  ellipse[6]]]);
      case 2:
       var line = param[1];
       return cont
               ([2,
                 [0,
                  [0, line[1][1] + dx, line[1][2] + dy],
                  [0, line[2][1] + dx, line[2][2] + dy],
                  line[3]]]);
      case 3:
       var polygon = param[1], _ai_ = polygon[3], _aj_ = polygon[2];
       return caml_cps_call3
               (Stdlib_List[19],
                function(param, cont){
                 var y = param[2], x = param[1];
                 return cont([0, x + dx, y + dy]);
                },
                polygon[1],
                function(_am_){return cont([3, [0, _am_, _aj_, _ai_]]);});
      default:
       var shapes = param[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_al_, cont){
                 return caml_cps_exact_call4(translate, dx, dy, _al_, cont);
                },
                shapes,
                function(_ak_){return cont([4, _ak_]);});
    }
   }
   function scale(factor, param, cont){
    switch(param[0]){
      case 0:
       var
        circle = param[1],
        _L_ = circle[4],
        _M_ = circle[3],
        _N_ = circle[2] * factor;
       return caml_cps_call3
               (Joy_Util[5],
                function(_ah_, cont){return cont(_ah_ * factor);},
                circle[1],
                function(_ag_){return cont([0, [0, _ag_, _N_, _M_, _L_]]);});
      case 1:
       var
        ellipse = param[1],
        _O_ = ellipse[6],
        _P_ = ellipse[5],
        _Q_ = ellipse[4],
        _R_ = ellipse[3] * factor,
        _S_ = ellipse[2] * factor;
       return caml_cps_call3
               (Joy_Util[5],
                function(_af_, cont){return cont(_af_ * factor);},
                ellipse[1],
                function(_ae_){
                 return cont([1, [0, _ae_, _S_, _R_, _Q_, _P_, _O_]]);
                });
      case 2:
       var line = param[1], _T_ = line[3];
       return caml_cps_call3
               (Joy_Util[5],
                function(_ad_, cont){return cont(_ad_ * factor);},
                line[2],
                function(_aa_){
                 return caml_cps_call3
                         (Joy_Util[5],
                          function(_ac_, cont){return cont(_ac_ * factor);},
                          line[1],
                          function(_ab_){return cont([2, [0, _ab_, _aa_, _T_]]);});
                });
      case 3:
       var
        polygon = param[1],
        _U_ = polygon[3],
        _V_ = polygon[2],
        _W_ = polygon[1];
       return caml_cps_call2
               (Joy_Util[5],
                function(_$_, cont){return cont(_$_ * factor);},
                function(_Z_){
                 return caml_cps_call3
                         (Stdlib_List[19],
                          _Z_,
                          _W_,
                          function(___){return cont([3, [0, ___, _V_, _U_]]);});
                });
      default:
       var shapes = param[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_Y_, cont){
                 return caml_cps_exact_call3(scale, factor, _Y_, cont);
                },
                shapes,
                function(_X_){return cont([4, _X_]);});
    }
   }
   function rotate_point(degrees, point, cont){
    return caml_cps_call2
            (Joy_Util[13],
             degrees,
             function(radians){
              var
               y = point[2],
               x = point[1],
               theta = Math.atan2(y, x),
               r = Math.sqrt(x * x + y * y),
               theta$0 = theta + radians;
              return cont([0, r * Math.cos(theta$0), r * Math.sin(theta$0)]);
             });
   }
   function rotate(degrees, param, cont){
    switch(param[0]){
      case 0:
       var
        circle = param[1],
        _s_ = circle[4],
        _t_ = circle[3],
        _u_ = circle[2];
       return caml_cps_exact_call3
               (rotate_point,
                degrees,
                circle[1],
                function(_K_){return cont([0, [0, _K_, _u_, _t_, _s_]]);});
      case 1:
       var
        ellipse = param[1],
        _v_ = ellipse[6],
        _w_ = ellipse[5],
        _x_ = ellipse[4] + degrees | 0,
        _y_ = ellipse[3],
        _z_ = ellipse[2];
       return caml_cps_exact_call3
               (rotate_point,
                degrees,
                ellipse[1],
                function(_J_){
                 return cont([1, [0, _J_, _z_, _y_, _x_, _w_, _v_]]);
                });
      case 2:
       var line = param[1], _A_ = line[3];
       return caml_cps_exact_call3
               (rotate_point,
                degrees,
                line[2],
                function(_H_){
                 return caml_cps_exact_call3
                         (rotate_point,
                          degrees,
                          line[1],
                          function(_I_){return cont([2, [0, _I_, _H_, _A_]]);});
                });
      case 3:
       var polygon = param[1], _B_ = polygon[3], _C_ = polygon[2];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_G_, cont){
                 return caml_cps_exact_call3(rotate_point, degrees, _G_, cont);
                },
                polygon[1],
                function(_F_){return cont([3, [0, _F_, _C_, _B_]]);});
      default:
       var shapes = param[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_E_, cont){
                 return caml_cps_exact_call3(rotate, degrees, _E_, cont);
                },
                shapes,
                function(_D_){return cont([4, _D_]);});
    }
   }
   function compose(f, g, x, cont){
    return caml_cps_call2
            (f, x, function(_r_){return caml_cps_call2(g, _r_, cont);});
   }
   function repeat(n, op, shape, cont){
    function _p_(param){
     var n = param[1];
     if(0 === n){var shapes = param[2]; return cont([4, shapes]);}
     var shapes$0 = param[2];
     if(! shapes$0)
      return caml_cps_exact_call1(_p_, [0, n - 1 | 0, [0, shape, 0]]);
     var transformed = shapes$0[1];
     return caml_cps_call2
             (op,
              transformed,
              function(_q_){
               return caml_cps_exact_call1
                       (_p_, [0, n - 1 | 0, [0, _q_, shapes$0]]);
              });
    }
    return _p_([0, n, 0]);
   }
   function map_stroke(f, param, cont){
    switch(param[0]){
      case 0:
       var circle = param[1], _g_ = circle[4];
       return caml_cps_call2
               (f,
                circle[3],
                function(_o_){
                 return cont([0, [0, circle[1], circle[2], _o_, _g_]]);
                });
      case 1:
       var ellipse = param[1], _h_ = ellipse[6];
       return caml_cps_call2
               (f,
                ellipse[5],
                function(_n_){
                 return cont
                         ([1,
                           [0,
                            ellipse[1],
                            ellipse[2],
                            ellipse[3],
                            ellipse[4],
                            _n_,
                            _h_]]);
                });
      case 2:
       var line = param[1];
       return caml_cps_call2
               (f,
                line[3],
                function(_m_){return cont([2, [0, line[1], line[2], _m_]]);});
      case 3:
       var polygon = param[1], _i_ = polygon[3];
       return caml_cps_call2
               (f,
                polygon[2],
                function(_l_){return cont([3, [0, polygon[1], _l_, _i_]]);});
      default:
       var complex = param[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_k_, cont){
                 return caml_cps_exact_call3(map_stroke, f, _k_, cont);
                },
                complex,
                function(_j_){return cont([4, _j_]);});
    }
   }
   function map_fill(f, line, cont){
    switch(line[0]){
      case 0:
       var circle = line[1];
       return caml_cps_call2
               (f,
                circle[4],
                function(_f_){
                 return cont([0, [0, circle[1], circle[2], circle[3], _f_]]);
                });
      case 1:
       var ellipse = line[1];
       return caml_cps_call2
               (f,
                ellipse[6],
                function(_e_){
                 return cont
                         ([1,
                           [0,
                            ellipse[1],
                            ellipse[2],
                            ellipse[3],
                            ellipse[4],
                            ellipse[5],
                            _e_]]);
                });
      case 2:
       return caml_cps_call2
               (Stdlib[46],
                cst_Lines_do_not_have_a_fill_f,
                function(_d_){return cont(line);});
      case 3:
       var polygon = line[1];
       return caml_cps_call2
               (f,
                polygon[3],
                function(_c_){
                 return cont([3, [0, polygon[1], polygon[2], _c_]]);
                });
      default:
       var complex = line[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_b_, cont){
                 return caml_cps_exact_call3(map_fill, f, _b_, cont);
                },
                complex,
                function(_a_){return cont([4, _a_]);});
    }
   }
   var
    Joy_Transform =
      [0, translate, scale, rotate, compose, repeat, map_fill, map_stroke];
   runtime.caml_register_global(4, Joy_Transform, "Joy__Transform");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Random
//# unitInfo: Requires: Stdlib, Stdlib__Float, Stdlib__Option, Stdlib__Random
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_exact_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1)
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 4
              ? f(a0, a1, a2, a3)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   function caml_cps_exact_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2, a3)
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   var undef = undefined;
   runtime.jsoo_create_file
    ("/static/cmis/joy__Random.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\t}\0\0\x01\xf5\0\0\x07i\0\0\x07@\xa0+Joy__Random\xa0\xd3\xa0%Noise\x01\x02X@\xc0\x91\xa0\xb0\xa0+permutation\x01\x02`\xd0\xc0\xb3\x90\xa3%arrayH\xa0\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xa8@\x90@\x02\x05\xf5\xe1\0@\0\xa9@\xb0\xc0-lib/random.mlE\x01\0\xd5\x01\0\xdb\xc0\x04\x02E\x01\0\xd5\x01\0\xe6@@\xa1\x04\x1e@@\xa0\xb0\xa0$hash\x01\x02a\xd0\xc0\xc1@\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xaa\xc0\xb3\x04\x19@\x90@\x02\x05\xf5\xe1\0@\0\xab@\x02\x05\xf5\xe1\0@\0\xac@\xb0\xc0\x04\x15Z\x01\x06 \x01\x06&\xc0\x04\x16Z\x01\x06 \x01\x06*@@\xa1\x042A@\xa0\xb0\xa0%grad1\x01\x02b\xd0\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xad\xc0\xc1@\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xae\xc0\xb3\x90\x04\x06@\x90@\x02\x05\xf5\xe1\0@\0\xaf@\x02\x05\xf5\xe1\0@\0\xb0@\x02\x05\xf5\xe1\0@\0\xb1@\xb0\xc0\x042\\\x01\x06V\x01\x06\\\xc0\x043\\\x01\x06V\x01\x06a@@\xa1\x04OC@\xa0\xb0\xa0%grad2\x01\x02c\xd0\xc0\xc1@\xc0\xb3\x04\x1d@\x90@\x02\x05\xf5\xe1\0@\0\xb2\xc0\xc1@\xc0\xb3\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xb3\xc0\xc1@\x04\x05\xc0\xb3\x90\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xb4@\x02\x05\xf5\xe1\0@\0\xb5@\x02\x05\xf5\xe1\0@\0\xb6@\x02\x05\xf5\xe1\0@\0\xb7@\xb0\xc0\x04Kc\x01\x07+\x01\x071\xc0\x04Lc\x01\x07+\x01\x076@@\xa1\x04hI@\xa0\xb0\xa0'snoise1\x01\x02d\xd0\xc0\xc1@\xc0\xb3\x90\x04.@\x90@\x02\x05\xf5\xe1\0@\0\xb8\xc0\xb3\x04,@\x90@\x02\x05\xf5\xe1\0@\0\xb9@\x02\x05\xf5\xe1\0@\0\xba@\xb0\xc0\x04]i\x01\x07\xf0\x01\x07\xf6\xc0\x04^i\x01\x07\xf0\x01\x07\xfd@@\xa1\x04zP@\xa0\xb0\xa0'snoise2\x01\x02e\xd0\xc0\xc1@\xc0\xb3\x04\x12@\x90@\x02\x05\xf5\xe1\0@\0\xbb\xc0\xc1@\xc0\xb3\x04\x17@\x90@\x02\x05\xf5\xe1\0@\0\xbc\xc0\xb3\x04B@\x90@\x02\x05\xf5\xe1\0@\0\xbd@\x02\x05\xf5\xe1\0@\0\xbe@\x02\x05\xf5\xe1\0@\0\xbf@\xb0\xc0\x04sx\x01\t\xda\x01\t\xe0\xc0\x04tx\x01\t\xda\x01\t\xe7@@\xa1\x04\x90\\@\xa0\xb0\xa0)frequency\x01\x02f\xd0\xc0\xb3\xa1\x90\x92&Stdlib#ref\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xc0@\x90@\x02\x05\xf5\xe1\0@\0\xc1@\xb0\xc0\x04\x8b\0a\x01\x10\x80\x01\x10\x86\xc0\x04\x8c\0a\x01\x10\x80\x01\x10\x8f@@\xa1\x04\xa8}@\xa0\xb0\xa0)amplitude\x01\x02g\xd0\xc0\xb3\xa1\x04\x18\x04\x15\xa0\xc0\xb3\x04\x14@\x90@\x02\x05\xf5\xe1\0@\0\xc2@\x90@\x02\x05\xf5\xe1\0@\0\xc3@\xb0\xc0\x04\x9c\0b\x01\x10\x9a\x01\x10\xa0\xc0\x04\x9d\0b\x01\x10\x9a\x01\x10\xa9@@\xa1\x04\xb9~@\xa0\xb0\xa0*lacunarity\x01\x02h\xd0\xc0\xb3\xa1\x04)\x04&\xa0\xc0\xb3\x04%@\x90@\x02\x05\xf5\xe1\0@\0\xc4@\x90@\x02\x05\xf5\xe1\0@\0\xc5@\xb0\xc0\x04\xad\0c\x01\x10\xb4\x01\x10\xba\xc0\x04\xae\0c\x01\x10\xb4\x01\x10\xc4@@\xa1\x04\xca\x7f@\xa0\xb0\xa0+persistence\x01\x02i\xd0\xc0\xb3\xa1\x04:\x047\xa0\xc0\xb3\x046@\x90@\x02\x05\xf5\xe1\0@\0\xc6@\x90@\x02\x05\xf5\xe1\0@\0\xc7@\xb0\xc0\x04\xbe\0d\x01\x10\xcf\x01\x10\xd5\xc0\x04\xbf\0d\x01\x10\xcf\x01\x10\xe0@@\xa1\x04\xdb\0@@\xa0\xb0\xa0(fractal1\x01\x02j\xd0\xc0\xc1@\xc0\xb3\x90\x04\xa9@\x90@\x02\x05\xf5\xe1\0@\0\xc8\xc0\xc1@\xc0\xb3\x90\x04\xa7@\x90@\x02\x05\xf5\xe1\0@\0\xc9\xc0\xb3\x90\x04\xab@\x90@\x02\x05\xf5\xe1\0@\0\xca@\x02\x05\xf5\xe1\0@\0\xcb@\x02\x05\xf5\xe1\0@\0\xcc@\xb0\xc0\x04\xd7\0f\x01\x10\xec\x01\x10\xf2\xc0\x04\xd8\0f\x01\x10\xec\x01\x10\xfa@@\xa1\x04\xf4\0A@\xa0\xb0\xa0(fractal2\x01\x02k\xd0\xc0\xc1@\xc0\xb3\x04\x19@\x90@\x02\x05\xf5\xe1\0@\0\xcd\xc0\xc1@\xc0\xb3\x04\x18@\x90@\x02\x05\xf5\xe1\0@\0\xce\xc0\xc1@\xc0\xb3\x04\x1d@\x90@\x02\x05\xf5\xe1\0@\0\xcf\xc0\xb3\x04\x1c@\x90@\x02\x05\xf5\xe1\0@\0\xd0@\x02\x05\xf5\xe1\0@\0\xd1@\x02\x05\xf5\xe1\0@\0\xd2@\x02\x05\xf5\xe1\0@\0\xd3@\xb0\xc0\x04\xf2\0r\x01\x12\x8f\x01\x12\x95\xc0\x04\xf3\0r\x01\x12\x8f\x01\x12\x9d@@\xa1\x05\x01\x0f\0J@@@\xb0\xc0\x04\xf6B``\xc0\x04\xf7\0}\x01\x14D\x01\x14G@\xa1\x05\x01\x13\0T@@\xa0\xb0\xa0+initialized\x01\x02Y\xd0\xc0\xb3\xa1\x04\x83\x04\x80\xa0\xc0\xb3\x90\xa3$boolE@\x90@\x02\x05\xf5\xe1\0@\0\xd4@\x90@\x02\x05\xf5\xe1\0@\0\xd5@\xb0\xc0\x05\x01\n\x01\0\x81\x01\x14i\x01\x14m\xc0\x05\x01\x0b\x01\0\x81\x01\x14i\x01\x14x@@\xa1\x05\x01'\0U@\xa0\xb0\xa0*initialize\x01\x02Z\xd0\xc0\xc1@\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xd6\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xd7@\x02\x05\xf5\xe1\0@\0\xd8@\xb0\xc0\x05\x01!\x01\0\x83\x01\x14\x86\x01\x14\x8a\xc0\x05\x01\"\x01\0\x83\x01\x14\x86\x01\x14\x94@@\xa1\x05\x01>\0V@\xa0\xb0\xa0&random\x01\x02[\xd0\xc0\xc1\x91#min\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x90\x05\x01\x14@\x90@\x02\x05\xf5\xe1\0@\0\xd9@\x90@\x02\x05\xf5\xe1\0@\0\xda\xc0\xc1@\xc0\xb3\x04r@\x90@\x02\x05\xf5\xe1\0@\0\xdb\xc0\xb3\x90\x05\x01\x1e@\x90@\x02\x05\xf5\xe1\0@\0\xdc@\x02\x05\xf5\xe1\0@\0\xdd@\x02\x05\xf5\xe1\0@\0\xde@\xb0\xc0\x05\x01B\x01\0\x88\x01\x15\x19\x01\x15\x1d\xc0\x05\x01C\x01\0\x88\x01\x15\x19\x01\x15#@@\xa1\x05\x01_\0W@\xa0\xb0\xa0'frandom\x01\x02\\\xd0\xc0\xc1\x91#min\xc0\xb3\x04!\xa0\xc0\xb3\x90\x05\x01*@\x90@\x02\x05\xf5\xe1\0@\0\xdf@\x90@\x02\x05\xf5\xe1\0@\0\xe0\xc0\xc1@\xc0\xb3\x05\x01\x03@\x90@\x02\x05\xf5\xe1\0@\0\xe1\xc0\xb3\x05\x01\x15@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe3@\x02\x05\xf5\xe1\0@\0\xe4@\xb0\xc0\x05\x01_\x01\0\x8d\x01\x15\xd1\x01\x15\xd5\xc0\x05\x01`\x01\0\x8d\x01\x15\xd1\x01\x15\xdc@@\xa1\x05\x01|\0\\@\xa0\xb0\xa0%noise\x01\x02]\xd0\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\x05\x01\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xe5@\x90@\x02\x05\xf5\xe1\0@\0\xe6\xc0\xb3\x04\xf0@\x90@\x02\x05\xf5\xe1\0@\0\xe7@\x02\x05\xf5\xe1\0@\0\xe8@\xb0\xc0\x05\x01w\x01\0\x92\x01\x16p\x01\x16t\xc0\x05\x01x\x01\0\x92\x01\x16p\x01\x16y@@\xa1\x05\x01\x94\0a@\xa0\xb0\xa0-fractal_noise\x01\x02^\xd0\xc0\xc1\x91'octaves\xc0\xb3\x04V\xa0\xc0\xb3\x04\xbe@\x90@\x02\x05\xf5\xe1\0@\0\xe9@\x90@\x02\x05\xf5\xe1\0@\0\xea\xc0\xc1@\xc0\xb3\x04#\xa0\xc0\xb3\x04\xc1@\x90@\x02\x05\xf5\xe1\0@\0\xeb@\x90@\x02\x05\xf5\xe1\0@\0\xec\xc0\xb3\x05\x01\x10@\x90@\x02\x05\xf5\xe1\0@\0\xed@\x02\x05\xf5\xe1\0@\0\xee@\x02\x05\xf5\xe1\0@\0\xef@\xb0\xc0\x05\x01\x97\x01\0\x9a\x01\x17V\x01\x17Z\xc0\x05\x01\x98\x01\0\x9a\x01\x17V\x01\x17g@@\xa1\x05\x01\xb4\0e@\xa0\xb0\xa02set_fractal_params\x01\x02_\xd0\xc0\xc1\x91)frequency\xc0\xb3\x04v\xa0\xc0\xb3\x05\x01#@\x90@\x02\x05\xf5\xe1\0@\0\xf0@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xc1\x91)amplitude\xc0\xb3\x04\x81\xa0\xc0\xb3\x05\x01.@\x90@\x02\x05\xf5\xe1\0@\0\xf2@\x90@\x02\x05\xf5\xe1\0@\0\xf3\xc0\xc1\x91*lacunarity\xc0\xb3\x04\x8c\xa0\xc0\xb3\x05\x019@\x90@\x02\x05\xf5\xe1\0@\0\xf4@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xc1\x91+persistence\xc0\xb3\x04\x97\xa0\xc0\xb3\x05\x01D@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x90@\x02\x05\xf5\xe1\0@\0\xf7\xc0\xc1@\xc0\xb3\x04\xb9@\x90@\x02\x05\xf5\xe1\0@\0\xf8\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xf9@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\x02\x05\xf5\xe1\0@\0\xfc@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x05\x01\xd7\x01\0\xa2\x01\x18\x89\x01\x18\x8d\xc0\x05\x01\xd8\x01\0\xa2\x01\x18\x89\x01\x18\x9f@@\xa1\x05\x01\xf4\0l@@\x84\x95\xa6\xbe\0\0\x01\xda\0\0\0F\0\0\x01\x07\0\0\0\xd3\xa0\xa0+Joy__Random\x900\xa2\x91\xca\xf0\x8a\xa5\xf3L\x9b\x9d\x8bV\xd3\xd1\x9b\x89\xa0\xa0+Stdlib__Seq\x900\xcc?\x89\x98\x85\xb7F\xf7w\x81]\xc9;\xe7\xed\xe2\xa0\xa0.Stdlib__Random\x900?-\xdc\x04\xbb(\xff\x10P\xc0\xc8\xd7\xcfZ\x8dW\xa0\xa0.Stdlib__Option\x900&\xfeq5\x1d\x86\xeb\xe5\xd6\x9a\x94`\x02\x94\xde3\xa0\xa01Stdlib__Nativeint\x900b~n\x17h\x17]\r\xea\x89]\xfb\xcb\xc1\x14W\xa0\xa0-Stdlib__Int64\x900z\xb3\xf2\xac\xe0\x9c\xfc\xc6{\xe8\xa7\x13=\x18\xf0\xe2\xa0\xa0-Stdlib__Int32\x900\x1d\xb6\x04\xc2\x10o\x99n\xa4zW's\xa5\xff\x7f\xa0\xa0+Stdlib__Int\x900W*\x15\b\x1e\xef\xf8\xe6\xda\xb3G\xe2`N@\xc2\xa0\xa0-Stdlib__Float\x900`\x9c\x17\xe2\xe3/\xc5\x89\x95 \x1eSB\xac,\xe4\xa0\xa0.Stdlib__Either\x900\xb3\xad\x0f\x8ce\xf2\x82R\x05\x9e\xde\xbc\x03\xf6\x88\b\xa0\xa0-Stdlib__Array\x900\x9b\xcf\x1a\x06\xbd\xcf\xbb\x97o\x89\x8e\x81\x8e\x15a\x1a\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Option = global_data.Stdlib__Option,
    Stdlib = global_data.Stdlib,
    Stdlib_Random = global_data.Stdlib__Random,
    permutation =
      [0,
        151,
        160,
        137,
        91,
        90,
        15,
        131,
        13,
        201,
        95,
        96,
        53,
        194,
        233,
        7,
        225,
        140,
        36,
        103,
        30,
        69,
        142,
        8,
        99,
        37,
        240,
        21,
        10,
        23,
        190,
        6,
        148,
        247,
        120,
        234,
        75,
        0,
        26,
        197,
        62,
        94,
        252,
        219,
        203,
        117,
        35,
        11,
        32,
        57,
        177,
        33,
        88,
        237,
        149,
        56,
        87,
        174,
        20,
        125,
        136,
        171,
        168,
        68,
        175,
        74,
        165,
        71,
        134,
        139,
        48,
        27,
        166,
        77,
        146,
        158,
        231,
        83,
        111,
        229,
        122,
        60,
        211,
        133,
        230,
        220,
        105,
        92,
        41,
        55,
        46,
        245,
        40,
        244,
        102,
        143,
        54,
        65,
        25,
        63,
        161,
        1,
        216,
        80,
        73,
        209,
        76,
        132,
        187,
        208,
        89,
        18,
        169,
        200,
        196,
        135,
        130,
        116,
        188,
        159,
        86,
        164,
        100,
        109,
        198,
        173,
        186,
        3,
        64,
        52,
        217,
        226,
        250,
        124,
        123,
        5,
        202,
        38,
        147,
        118,
        126,
        255,
        82,
        85,
        212,
        207,
        206,
        59,
        227,
        47,
        16,
        58,
        17,
        182,
        189,
        28,
        42,
        223,
        183,
        170,
        213,
        119,
        248,
        152,
        2,
        44,
        154,
        163,
        70,
        221,
        153,
        101,
        155,
        167,
        43,
        172,
        9,
        129,
        22,
        39,
        253,
        19,
        98,
        108,
        110,
        79,
        113,
        224,
        232,
        178,
        185,
        112,
        104,
        218,
        246,
        97,
        228,
        251,
        34,
        242,
        193,
        238,
        210,
        144,
        12,
        191,
        179,
        162,
        241,
        81,
        51,
        145,
        235,
        249,
        14,
        239,
        107,
        49,
        192,
        214,
        31,
        181,
        199,
        106,
        157,
        184,
        84,
        204,
        176,
        115,
        121,
        50,
        45,
        127,
        4,
        150,
        254,
        138,
        236,
        205,
        93,
        222,
        114,
        67,
        29,
        24,
        72,
        243,
        141,
        128,
        195,
        78,
        66,
        215,
        61,
        156,
        180].slice
       ();
   function hash(n, cont){
    var _z_ = (n | 0) & 255;
    return cont(runtime.caml_check_bound(permutation, _z_)[1 + _z_]);
   }
   function grad1(hash, x, cont){
    var
     h = hash & 15,
     grad = 1. + (h & 7),
     grad$0 = 0 === (h & 8) ? grad : - grad;
    return cont(grad$0 * x);
   }
   function grad2(hash, x, y, cont){
    var h = hash & 63;
    if(4 <= h) var v = x, u = y; else var v = y, u = x;
    var _y_ = 0 === (h & 2) ? 2. * v : -2. * v, u$0 = 0 === (h & 1) ? u : - u;
    return cont(u$0 + _y_);
   }
   function snoise1(x, cont){
    var
     i0 = Math.floor(x),
     i1 = i0 + 1.,
     x0 = x - i0,
     x1 = x0 - 1.,
     t0 = 1. - x0 * x0,
     t0$0 = t0 * t0;
    return caml_cps_exact_call2
            (hash,
             i0,
             function(_u_){
              return caml_cps_exact_call3
                      (grad1,
                       _u_,
                       x0,
                       function(_v_){
                        var
                         n0 = t0$0 * t0$0 * _v_,
                         t1 = 1. - x1 * x1,
                         t1$0 = t1 * t1;
                        return caml_cps_exact_call2
                                (hash,
                                 i1,
                                 function(_w_){
                                  return caml_cps_exact_call3
  (grad1,
   _w_,
   x1,
   function(_x_){
    var n1 = t1$0 * t1$0 * _x_;
    return cont(0.395 * (n0 + n1));
   });
                                 });
                       });
             });
   }
   function snoise2(x, y, cont){
    var
     s = (x + y) * 0.366025403,
     ys = y + s,
     xs = x + s,
     j = Math.floor(ys),
     i = Math.floor(xs),
     t = (i + j) * 0.211324865,
     X0 = i - t,
     Y0 = j - t,
     y0 = y - Y0,
     x0 = x - X0;
    if(y0 < x0) var j1 = 0., i1 = 1.; else var j1 = 1., i1 = 0.;
    var
     y1 = y0 - j1 + 0.211324865,
     x1 = x0 - i1 + 0.211324865,
     y2 = y0 - 1. + 0.42264973,
     x2 = x0 - 1. + 0.42264973;
    return caml_cps_exact_call2
            (hash,
             j,
             function(_q_){
              return caml_cps_exact_call2
                      (hash,
                       _q_ + i,
                       function(gi0){
                        return caml_cps_exact_call2
                                (hash,
                                 j + j1,
                                 function(_r_){
                                  return caml_cps_exact_call2
  (hash,
   _r_ + i + i1,
   function(gi1){
    return caml_cps_exact_call2
            (hash,
             j + 1.,
             function(_s_){
              return caml_cps_exact_call2
                      (hash,
                       _s_ + i + 1.,
                       function(gi2){
                        function contrib(x, y, gi, cont){
                         var t = 0.5 - x * x - y * y;
                         if(t < 0.) return cont(0.);
                         var t$0 = t * t;
                         return caml_cps_exact_call4
                                 (grad2,
                                  gi,
                                  x,
                                  y,
                                  function(_t_){return cont(t$0 * t$0 * _t_);});
                        }
                        return caml_cps_exact_call4
                                (contrib,
                                 x0,
                                 y0,
                                 gi0,
                                 function(n0){
                                  return caml_cps_exact_call4
  (contrib,
   x1,
   y1,
   gi1,
   function(n1){
    return caml_cps_exact_call4
            (contrib,
             x2,
             y2,
             gi2,
             function(n2){return cont(45.23065 * (n0 + n1 + n2));});
   });
                                 });
                       });
             });
   });
                                 });
                       });
             });
   }
   var
    frequency = [0, 1.],
    amplitude = [0, 1.],
    lacunarity = [0, 2.],
    persistence = [0, 0.5];
   function fractal1(octaves, x, cont){
    function _o_(i, amp, noise){
     if(0 === i) return cont(noise / amp);
     var
      frequency$0 = frequency[1] * Math.pow(lacunarity[1], i - 1 | 0),
      amplitude$0 = amplitude[1] * Math.pow(persistence[1], i - 1 | 0),
      i$0 = i - 1 | 0,
      amp$0 = amp + amplitude$0;
     return caml_cps_exact_call2
             (snoise1,
              x * frequency$0,
              function(_p_){
               var noise$0 = noise + amplitude$0 * _p_;
               return caml_cps_exact_call3(_o_, i$0, amp$0, noise$0);
              });
    }
    return _o_(octaves, 0., 0.);
   }
   function fractal2(octaves, x, y, cont){
    function _m_(i, amp, noise){
     if(0 === i) return cont(noise / amp);
     var
      frequency$0 = frequency[1] * Math.pow(lacunarity[1], i - 1 | 0),
      amplitude$0 = amplitude[1] * Math.pow(persistence[1], i - 1 | 0),
      i$0 = i - 1 | 0,
      amp$0 = amp + amplitude$0;
     return caml_cps_exact_call3
             (snoise2,
              x * frequency$0,
              y * frequency$0,
              function(_n_){
               var noise$0 = noise + amplitude$0 * _n_;
               return caml_cps_exact_call3(_m_, i$0, amp$0, noise$0);
              });
    }
    return _m_(octaves, 0., 0.);
   }
   var
    Noise =
      [0,
       permutation,
       hash,
       grad1,
       grad2,
       snoise1,
       snoise2,
       frequency,
       amplitude,
       lacunarity,
       persistence,
       fractal1,
       fractal2],
    initialized = [0, 0],
    cst_Noise_noise_requires_1_2_e =
      "Noise noise requires 1-2 elements in arg list",
    cst_Fractal_noise_requires_1_2 =
      "Fractal noise requires 1-2 elements in arg list";
   function initialize(param, cont){
    return caml_cps_call2
            (Stdlib_Random[3],
             0,
             function(_l_){initialized[1] = 1; return cont(0);});
   }
   function random(opt, max, cont){
    if(opt) var sth = opt[1], min = sth; else var min = 0;
    function _i_(_j_){
     return caml_cps_call2
             (Stdlib_Random[5],
              max - min | 0,
              function(_k_){return cont(min + _k_ | 0);});
    }
    return 1 - initialized[1]
            ? caml_cps_exact_call2(initialize, undef, _i_)
            : _i_(0);
   }
   function frandom(opt, max, cont){
    if(opt) var sth = opt[1], min = sth; else var min = 0.;
    function _f_(_g_){
     return caml_cps_call2
             (Stdlib_Random[10],
              max - min,
              function(_h_){return cont(min + _h_);});
    }
    return 1 - initialized[1]
            ? caml_cps_exact_call2(initialize, undef, _f_)
            : _f_(0);
   }
   function noise(param, cont){
    if(! param)
     return caml_cps_call2
             (Stdlib[46],
              cst_Noise_noise_requires_1_2_e,
              function(_e_){return cont(0.);});
    var match = param[2], x = param[1];
    if(! match) return caml_cps_call2(Noise[5], x, cont);
    var y = match[1];
    return caml_cps_call3(Noise[6], x, y, cont);
   }
   function fractal_noise(opt, param, cont){
    if(opt) var sth = opt[1], octaves = sth; else var octaves = 5;
    if(! param)
     return caml_cps_call2
             (Stdlib[46],
              cst_Fractal_noise_requires_1_2,
              function(_d_){return cont(0.);});
    var match = param[2], x = param[1];
    if(! match) return caml_cps_call3(Noise[11], octaves, x, cont);
    var y = match[1];
    return caml_cps_call4(Noise[12], octaves, x, y, cont);
   }
   function set_fractal_params
   (frequency, amplitude, lacunarity, persistence, param, cont){
    return caml_cps_call3
            (Stdlib_Option[9],
             function(n, cont){Noise[7][1] = n; return cont(0);},
             frequency,
             function(_a_){
              return caml_cps_call3
                      (Stdlib_Option[9],
                       function(n, cont){Noise[8][1] = n; return cont(0);},
                       amplitude,
                       function(_b_){
                        return caml_cps_call3
                                (Stdlib_Option[9],
                                 function(n, cont){Noise[9][1] = n; return cont(0);},
                                 lacunarity,
                                 function(_c_){
                                  return caml_cps_call3
  (Stdlib_Option[9],
   function(n, cont){Noise[10][1] = n; return cont(0);},
   persistence,
   cont);
                                 });
                       });
             });
   }
   var
    Joy_Random =
      [0,
       Noise,
       initialized,
       initialize,
       random,
       frandom,
       noise,
       fractal_noise,
       set_fractal_params];
   runtime.caml_register_global(41, Joy_Random, "Joy__Random");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Backend_cairo
//# unitInfo: Requires: Stdlib__Printf
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, cst = ", ";
   function caml_cps_call6(f, a0, a1, a2, a3, a4, a5){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 6
              ? f(a0, a1, a2, a3, a4, a5)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_cps_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 7
              ? f(a0, a1, a2, a3, a4, a5, a6)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy__Backend_cairo.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x03\xf6\0\0\0\xe5\0\0\x03S\0\0\x038\xa02Joy__Backend_cairo\xa0\xc1\xa0'context\x01\x01/\b\0\0;\0@@\xa0\xa0\xe0\xa0%dummy\x01\x01\x17@\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xdc\xb0\xc05lib/backend_cairo.mliA@Q\xc0\x04\x02A@_@@\xa1\x04\x16A\xa0\xe0\xa0$size\x01\x01\x18@\xc0\x92\xa0\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xda\xa0\xc0\xb3\x90\x04\x07@\x90@\x02\x05\xf5\xe1\0@\0\xd9@\x02\x05\xf5\xe1\0@\0\xdb\xb0\xc0\x04\x17A@`\xc0\x04\x18A@o@@\xa1\x04,B@@A@@@@@\xb0\xc0\x04\x1bA@@\xc0\x04\x1cA@q@@@@\xa1\x040@A@\xa0\xb0\xa0&create\x01\x010\xd0\xc0\xc1\x900background_color\xc0\x92\xa0\xc0\xb3\x90\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xe0\xa0\xc0\xb3\x90\x04$@\x90@\x02\x05\xf5\xe1\0@\0\xdf\xa0\xc0\xb3\x90\x04)@\x90@\x02\x05\xf5\xe1\0@\0\xde\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\0\xdd@\x02\x05\xf5\xe1\0@\0\xe1\xc0\xc1\x90$size\xc0\x92\xa0\xc0\xb3\x90\x04;@\x90@\x02\x05\xf5\xe1\0@\0\xe3\xa0\xc0\xb3\x90\x04@@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x02\x05\xf5\xe1\0@\0\xe4\xc0\xc1\x90*line_width\xc0\xb3\x90\x04H@\x90@\x02\x05\xf5\xe1\0@\0\xe5\xc0\xc1\x90$axes\xc0\xb3\x90\xa3$boolE@\x90@\x02\x05\xf5\xe1\0@\0\xe6\xc0\xb3\x90\x04s@\x90@\x02\x05\xf5\xe1\0@\0\xe7@\x02\x05\xf5\xe1\0@\0\xe8@\x02\x05\xf5\xe1\0@\0\xe9@\x02\x05\xf5\xe1\0@\0\xea@\x02\x05\xf5\xe1\0@\0\xeb@\xb0\xc0\x04fCss\xc0\x04gD\0l\x01\0\xae@@\xa1\x04{C@\xa0\xb0\xa0$show\x01\x011\xd0\xc0\xc1@\xc0\xb3\x04\x0f@\x90@\x02\x05\xf5\xe1\0@\0\xec\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\xa1\xa1\x90\x92%Joy__%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xed@\x90@\x02\x05\xf5\xe1\0@\0\xee\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xef@\x02\x05\xf5\xe1\0@\0\xf0@\x02\x05\xf5\xe1\0@\0\xf1@\xb0\xc0\x04\x8dE\x01\0\xaf\x01\0\xaf\xc0\x04\x8eE\x01\0\xaf\x01\0\xdd@@\xa1\x04\xa2D@\xa0\xb0\xa0.set_line_width\x01\x012\xd0\xc0\xc1@\xc0\xb3\x046@\x90@\x02\x05\xf5\xe1\0@\0\xf2\xc0\xc1@\xc0\xb3\x90\x04\x91@\x90@\x02\x05\xf5\xe1\0@\0\xf3\xc0\xb3\x90\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xf4@\x02\x05\xf5\xe1\0@\0\xf5@\x02\x05\xf5\xe1\0@\0\xf6@\xb0\xc0\x04\xa5F\x01\0\xde\x01\0\xde\xc0\x04\xa6F\x01\0\xde\x01\x01\t@@\xa1\x04\xbaE@\xa0\xb0\xa0%write\x01\x013\xd0\xc0\xc1@\xc0\xb3\x04N@\x90@\x02\x05\xf5\xe1\0@\0\xf7\xc0\xc1@\xc0\xb3\x90\x04\xbb@\x90@\x02\x05\xf5\xe1\0@\0\xf8\xc0\xb3\x90\x042@\x90@\x02\x05\xf5\xe1\0@\0\xf9@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x04\xbdG\x01\x01\n\x01\x01\n\xc0\x04\xbeG\x01\x01\n\x01\x01/@@\xa1\x04\xd2F@\xa0\xb0\xa0%clear\x01\x014\xd0\xc0\xc1@\xc0\xb3\x04f@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x04D@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04\xcfH\x01\x010\x01\x010\xc0\x04\xd0H\x01\x010\x01\x01K@@\xa1\x04\xe4G@@\x84\x95\xa6\xbe\0\0\0\xc8\0\0\0\x1e\0\0\0p\0\0\0[\xa0\xa02Joy__Backend_cairo\x900\xfe\xa8&b\x98\xfd\x0e\x91\xfc\xb3\x07/\xee\x7f\xfe\x97\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    partial = [12, 10, 0],
    Stdlib_Printf = global_data.Stdlib__Printf,
    _a_ =
      [0,
       [12,
        40,
        [4,
         0,
         0,
         0,
         [11,
          cst,
          [4,
           0,
           0,
           0,
           [11,
            cst,
            [4, 0, 0, 0, [11, cst, [8, [0, 0, 0], 0, 0, [12, 41, 0]]]]]]]]],
       "(%d, %d, %d, %f)"],
    _b_ =
      [0,
       [11,
        "create: background_color=",
        [2,
         0,
         [11,
          " size=(",
          [4,
           0,
           0,
           0,
           [11,
            cst,
            [4,
             0,
             0,
             0,
             [11,
              ") line_width=",
              [4, 0, 0, 0, [11, " axes=", [9, 0, partial]]]]]]]]]],
       "create: background_color=%s size=(%d, %d) line_width=%d axes=%b\n"];
   function create(background_color, size, line_width, axes, cont){
    var
     a = background_color[4],
     b = background_color[3],
     g = background_color[2],
     r = background_color[1],
     _c_ = size[2],
     _d_ = size[1];
    return caml_cps_call6
            (Stdlib_Printf[4],
             _a_,
             r,
             g,
             b,
             a,
             function(_e_){
              return caml_cps_call7
                      (Stdlib_Printf[4],
                       _b_,
                       _e_,
                       _d_,
                       _c_,
                       line_width,
                       axes,
                       function(s){return cont([0, s, size]);});
             });
   }
   function show(ctx, shapes, cont){return cont(0);}
   function set_line_width(ctx, line_width, cont){return cont(0);}
   function write(ctx, filename, cont){return cont(0);}
   function clear(ctx, cont){return cont(0);}
   var Joy_Backend_cairo = [0, create, show, set_line_width, write, clear];
   runtime.caml_register_global(3, Joy_Backend_cairo, "Joy__Backend_cairo");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Backend_lazy
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   runtime.jsoo_create_file
    ("/static/cmis/joy__Backend_lazy.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x01\x8f\0\0\0V\0\0\x01O\0\0\x01B\xa01Joy__Backend_lazy\xa0\xc1\xa0'context\x01\x01+\b\0\0;\0@@@A\x90\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xf3@@@@\xb0\xc04lib/backend_lazy.mliA@@\xc0\x04\x02A@S@@A@\xa1\x04\x12@A@\xa0\xb0\xa0$show\x01\x01,\xd0\xc0\xc1@\xc0\xb3\x90\x04\x19@\x90@\x02\x05\xf5\xe1\0@\0\xf4\xc0\xc1@\xc0\xb3\xa1\xa1\x90\x92%Joy__%Shape&shapes@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xb3\x90\x04\"@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x04 CUU\xc0\x04!CU\x7f@@\xa1\x041A@\xa0\xb0\xa0&create\x01\x01-\xd0\xc0\xc1@\xc0\xb3\x90\x041@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xb3\x04#@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x042D\0@\0@\xc0\x043D\0@\0\\@@\xa1\x04CB@\xa0\xb0\xa0%clear\x01\x01.\xd0\xc0\xc1@\xc0\xb3\x041@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x04F@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04DE\0]\0]\xc0\x04EE\0]\0x@@\xa1\x04UC@@\x84\x95\xa6\xbe\0\0\0\xc7\0\0\0\x1e\0\0\0p\0\0\0[\xa0\xa01Joy__Backend_lazy\x900\xb7\xee\xc1\xf0`\xca\xb5\x1b\x8aC\xfb@\xc5\x9f\x93\xe5\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   function show(ctx, shapes, cont){return cont(0);}
   function create(param, cont){return cont(0);}
   function clear(ctx, cont){return cont(0);}
   var Joy_Backend_lazy = [0, show, create, clear];
   runtime.caml_register_global(0, Joy_Backend_lazy, "Joy__Backend_lazy");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Backend_svg
//# unitInfo: Requires: Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Stdlib, Stdlib__List, Stdlib__Printf, Stdlib__String
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$2 = "",
    cst$4 = " />",
    cst$3 = '" ',
    cst_cy = '" cy="',
    cst$5 = ", ",
    cst_fill$2 = "fill",
    cst_stroke$3 = "stroke",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_exact_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1)
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_exact_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1, a2)
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_call4(f, a0, a1, a2, a3){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 4
              ? f(a0, a1, a2, a3)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3]);
   }
   function caml_cps_call5(f, a0, a1, a2, a3, a4){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 5
              ? f(a0, a1, a2, a3, a4)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4]);
   }
   function caml_cps_call6(f, a0, a1, a2, a3, a4, a5){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 6
              ? f(a0, a1, a2, a3, a4, a5)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_cps_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 7
              ? f(a0, a1, a2, a3, a4, a5, a6)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   function caml_cps_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 9
              ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8])
            : runtime.caml_trampoline_return
              (f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy__Backend_svg.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x04\xc9\0\0\x01\x1b\0\0\x04\x05\0\0\x03\xe1\xa00Joy__Backend_svg\xa0\xc1\xa0'context\x01\x04+\b\0\0;\0@@\xa0\xa0\xe0\xa0&shapes\x01\x01(@\xc0\xb3\xa1\x90\x92&Stdlib#ref\xa0\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\xa1\xa1\x90\x92%Joy__%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xe1@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x90@\x02\x05\xf5\xe1\0@\0\xe3\xb0\xc03lib/backend_svg.mliBQS\xc0\x04\x02BQp@@\xa1\x04*A\xa0\xe0\xa0+init_shapes\x01\x01)@\xc0\xb3\x90\x04\x1b\xa0\xc0\xb3\xa1\xa1\x04\x19%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xdf@\x90@\x02\x05\xf5\xe1\0@\0\xe0\xb0\xc0\x04\x15Cqs\xc0\x04\x16Cq\0Q@@\xa1\x04>B\xa0\xe0\xa0$size\x01\x01*@\xc0\x92\xa0\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xdd\xa0\xc0\xb3\x90\x04\x07@\x90@\x02\x05\xf5\xe1\0@\0\xdc@\x02\x05\xf5\xe1\0@\0\xde\xb0\xc0\x04+D\0R\0T\xc0\x04,D\0R\0d@@\xa1\x04TC\xa0\xe0\xa0$axes\x01\x01+@\xc0\xb3\x90\xa3$boolE@\x90@\x02\x05\xf5\xe1\0@\0\xdb\xb0\xc0\x049E\0e\0g\xc0\x04:E\0e\0r@@\xa1\x04bD\xa0\xe0\xa0#elt\x01\x03\xa2@\xc0\xb3\xa1\xa1\x90\x92+Js_of_ocaml\"Js!t\xa0\xc0\xb3\xa1\xa1\x90\x92+Js_of_ocaml(Dom_html'element@\x90@\x02\x05\xf5\xe1\0@\0\xd9@\x90@\x02\x05\xf5\xe1\0@\0\xda\xb0\xc0\x04VF\0s\0u\xc0\x04WF\0s\x01\0\xa8@@\xa1\x04\x7fE@@A@@@@@\xb0\xc0\x04ZA@@\xc0\x04[G\x01\0\xa9\x01\0\xaa@@@@\xa1\x04\x83@A@\xa0\xb0\xa0$show\x01\x04,\xd0\xc0\xc1@\xc0\xb3\x90\x04\x8a@\x90@\x02\x05\xf5\xe1\0@\0\xe4\xc0\xc1@\xc0\xb3\x90\x04}\xa0\xc0\xb3\xa1\xa1\x04{%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xe5@\x90@\x02\x05\xf5\xe1\0@\0\xe6\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xe7@\x02\x05\xf5\xe1\0@\0\xe8@\x02\x05\xf5\xe1\0@\0\xe9@\xb0\xc0\x04}I\x01\0\xac\x01\0\xac\xc0\x04~I\x01\0\xac\x01\0\xda@@\xa1\x04\xa6F@\xa0\xb0\xa0&create\x01\x04-\xd0\xc0\xc1\x90$size\xc0\x92\xa0\xc0\xb3\x90\x04m@\x90@\x02\x05\xf5\xe1\0@\0\xeb\xa0\xc0\xb3\x90\x04r@\x90@\x02\x05\xf5\xe1\0@\0\xea@\x02\x05\xf5\xe1\0@\0\xec\xc0\xc1\x90$axes\xc0\xb3\x90\x04g@\x90@\x02\x05\xf5\xe1\0@\0\xed\xc0\xc1\x90+init_shapes\xc0\xb3\x90\x04\xb4\xa0\xc0\xb3\xa1\xa1\x04\xb2%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xee@\x90@\x02\x05\xf5\xe1\0@\0\xef\xc0\xc1\x90%eltId\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xb3\x04S@\x90@\x02\x05\xf5\xe1\0@\0\xf1@\x02\x05\xf5\xe1\0@\0\xf2@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\x02\x05\xf5\xe1\0@\0\xf5@\xb0\xc0\x04\xbbJ\x01\0\xdb\x01\0\xdb\xc0\x04\xbcJ\x01\0\xdb\x01\x01>@@\xa1\x04\xe4G@\xa0\xb0\xa0(make_svg\x01\x04.\xd0\xc0\xc1@\xc0\xb3\x04a@\x90@\x02\x05\xf5\xe1\0@\0\xf6\xc0\xb3\x90\x04\x17@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x04\xcdK\x01\x01?\x01\x01?\xc0\x04\xceK\x01\x01?\x01\x01_@@\xa1\x04\xf6H@\xa0\xb0\xa0%write\x01\x04/\xd0\xc0\xc1@\xc0\xb3\x04s@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xb3\x90\x04d@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfb@\xb0\xc0\x04\xdfL\x01\x01`\x01\x01`\xc0\x04\xe0L\x01\x01`\x01\x01{@@\xa1\x05\x01\bI@\xa0\xb0\xa0%clear\x01\x040\xd0\xc0\xc1@\xc0\xb3\x04\x85@\x90@\x02\x05\xf5\xe1\0@\0\xfc\xc0\xb3\x90\x04v@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04\xf1M\x01\x01|\x01\x01|\xc0\x04\xf2M\x01\x01|\x01\x01\x97@@\xa1\x05\x01\x1aJ@@\x84\x95\xa6\xbe\0\0\x029\0\0\0P\0\0\x015\0\0\0\xf7\xa0\xa00Joy__Backend_svg\x900\x8e\xf0$R\xfe\x1aE\xe3S\0\x8dX\xa5\xf3\x9da\xa0\xa0-Stdlib__Uchar\x900\x9e\xa8d\bP\x95\x97\fs\xb7\xb1|&\xc3s\x17\xa0\xa0/Stdlib__Complex\x900\xd5\xf0A\xcc\xbe\x97\x83\xaf\x90\xca83p\x02\xfbN\xa0\xa00Stdlib__Bigarray\x900U\xa8\x12\xd9\xa3\xc8\x9ez\x8e\xbb\x91~c\xe4\xbe\xea\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08Js_of_ocaml__Typed_array\x900[W\xdd\xe9!\xd8\x0b\xa9\x81\x16\xf4j\x8e-\xd2\x9b\xa0\xa0/Js_of_ocaml__Js\x900;\xf2\xa5\xb5?\xc5\xf8\x85:r\x99\x03\xd9\xc9\xdb\xc2\xa0\xa01Js_of_ocaml__File\x900\x90\xf9I\xd23Q\xa6W+J\xb2\xd4\x9a\xeaM\xf6\xa0\xa05Js_of_ocaml__Dom_html\x900\xedMV\xa6za\xb0]\x8cy\xb5\x04xq\xb7W\xa0\xa00Js_of_ocaml__Dom\x900\xb7\x88ei\xb1Q\x0e\x9d\xe7\b[\x9by\xa4\xad\x8b\xa0\xa0-Js_of_ocaml__\x900\xcaj\xb7\x86\x16\t\xf3\xe0A\xc5\xee>Dn\x9f\x1f\xa0\xa0+Js_of_ocaml\x9006@}(\xe5\x12|@\x7f\xe4Gs\xe0\xd2\x1f\x07\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = cst$2,
    cst$1 = cst$2,
    partial = [11, cst$4, 0],
    cst = " ",
    partial$0 = [11, ')" ', [2, 0, [12, 32, [2, 0, [11, cst$4, 0]]]]],
    partial$1 = [11, cst$4, 0],
    Stdlib_List = global_data.Stdlib__List,
    Stdlib_String = global_data.Stdlib__String,
    Stdlib = global_data.Stdlib,
    Stdlib_Printf = global_data.Stdlib__Printf,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    cst_Could_not_find_element_wit = "Could not find element with id",
    _a_ =
      [0,
       [11,
        "rgba(",
        [4,
         0,
         0,
         0,
         [11,
          cst$5,
          [4,
           0,
           0,
           0,
           [11,
            cst$5,
            [4, 0, 0, 0, [11, cst$5, [8, [0, 0, 0], 0, 0, [12, 41, 0]]]]]]]]],
       "rgba(%d, %d, %d, %f)"],
    _b_ = [0, [2, 0, [11, '="', [2, 0, [12, 34, 0]]]], '%s="%s"'],
    _c_ =
      [0, [8, [0, 0, 0], 0, 0, [12, 44, [8, [0, 0, 0], 0, 0, 0]]], "%f,%f"],
    cst_fill = cst_fill$2,
    cst_stroke = cst_stroke$3,
    _d_ =
      [0,
       [11,
        '<circle cx="',
        [8,
         [0, 0, 0],
         0,
         0,
         [11,
          cst_cy,
          [8,
           [0, 0, 0],
           0,
           0,
           [11,
            '" r="',
            [8,
             [0, 0, 0],
             0,
             0,
             [11, cst$3, [2, 0, [12, 32, [2, 0, partial$1]]]]]]]]]],
       '<circle cx="%f" cy="%f" r="%f" %s %s />'],
    cst_fill$0 = cst_fill$2,
    cst_stroke$0 = cst_stroke$3,
    _e_ =
      [0,
       [11,
        '<ellipse cx="',
        [8,
         [0, 0, 0],
         0,
         0,
         [11,
          cst_cy,
          [8,
           [0, 0, 0],
           0,
           0,
           [11,
            '" rx="',
            [8,
             [0, 0, 0],
             0,
             0,
             [11,
              '" ry="',
              [8,
               [0, 0, 0],
               0,
               0,
               [11, '" transform="rotate(', [4, 0, 0, 0, partial$0]]]]]]]]]],
       '<ellipse cx="%f" cy="%f" rx="%f" ry="%f" transform="rotate(%d)" %s %s />'],
    cst_fill$1 = cst_fill$2,
    cst_stroke$1 = cst_stroke$3,
    _f_ =
      [0,
       [11,
        '<polygon points="',
        [2, 0, [11, cst$3, [2, 0, [12, 32, [2, 0, [11, cst$4, 0]]]]]]],
       '<polygon points="%s" %s %s />'],
    cst_stroke$2 = cst_stroke$3,
    _g_ =
      [0,
       [11,
        '<line x1="',
        [8,
         [0, 0, 0],
         0,
         0,
         [11,
          '" y1="',
          [8,
           [0, 0, 0],
           0,
           0,
           [11,
            '" x2="',
            [8,
             [0, 0, 0],
             0,
             0,
             [11,
              '" y2="',
              [8, [0, 0, 0], 0, 0, [11, cst$3, [2, 0, partial]]]]]]]]]],
       '<line x1="%f" y1="%f" x2="%f" y2="%f" %s />'],
    _h_ =
      [0,
       [11,
        '<svg width="',
        [4,
         0,
         0,
         0,
         [11,
          '" height="',
          [4,
           0,
           0,
           0,
           [11,
            '" xmlns="http://www.w3.org/2000/svg">',
            [2, 0, [11, "<\/svg>", 0]]]]]]],
       '<svg width="%d" height="%d" xmlns="http://www.w3.org/2000/svg">%s<\/svg>'];
   function create(size, axes, init_shapes, eltId, cont){
    var
     _y_ = Js_of_ocaml_Dom_html[118][15],
     _z_ =
       Js_of_ocaml_Dom_html[2].getElementById(caml_jsstring_of_string(eltId));
    function _x_(param, cont){
     return caml_cps_call2(Stdlib[2], cst_Could_not_find_element_wit, cont);
    }
    return caml_cps_call3
            (Js_of_ocaml_Js[5][4],
             _z_,
             _y_,
             function(_A_){
              return caml_cps_call3
                      (Js_of_ocaml_Js[5][8],
                       _A_,
                       _x_,
                       function(elt){
                        return cont
                                ([0, [0, init_shapes], init_shapes, size, axes, elt]);
                       });
             });
   }
   function svg_coords_of_point(param, _w_){
    var y = _w_[2], x = _w_[1], h = param[2], w = param[1];
    return [0, x + w / 2., h / 2. - y];
   }
   function svg_color_attribute(name, color, cont){
    var a = color[4], b = color[3], g = color[2], r = color[1];
    return caml_cps_call6
            (Stdlib_Printf[4],
             _a_,
             r,
             g,
             b,
             a,
             function(_v_){
              return caml_cps_call4(Stdlib_Printf[4], _b_, name, _v_, cont);
             });
   }
   function render_shape(ctx, s, cont){
    switch(s[0]){
      case 0:
       var
        c$1 = s[1],
        fill = c$1[4],
        stroke = c$1[3],
        radius = c$1[2],
        c = c$1[1],
        match = svg_coords_of_point(ctx[3], c),
        cy = match[2],
        cx = match[1];
       return caml_cps_exact_call3
               (svg_color_attribute,
                cst_fill,
                fill,
                function(_t_){
                 return caml_cps_exact_call3
                         (svg_color_attribute,
                          cst_stroke,
                          stroke,
                          function(_u_){
                           return caml_cps_call7
                                   (Stdlib_Printf[4], _d_, cx, cy, radius, _u_, _t_, cont);
                          });
                });
      case 1:
       var
        e = s[1],
        fill$0 = e[6],
        stroke$0 = e[5],
        rotation = e[4],
        ry = e[3],
        rx = e[2],
        c$0 = e[1],
        match$0 = svg_coords_of_point(ctx[3], c$0),
        cy$0 = match$0[2],
        cx$0 = match$0[1];
       return caml_cps_exact_call3
               (svg_color_attribute,
                cst_fill$0,
                fill$0,
                function(_r_){
                 return caml_cps_exact_call3
                         (svg_color_attribute,
                          cst_stroke$0,
                          stroke$0,
                          function(_s_){
                           return caml_cps_call9
                                   (Stdlib_Printf[4],
                                    _e_,
                                    cx$0,
                                    cy$0,
                                    rx,
                                    ry,
                                    rotation,
                                    _s_,
                                    _r_,
                                    cont);
                          });
                });
      case 2:
       var
        l = s[1],
        stroke$2 = l[3],
        b = l[2],
        a = l[1],
        match$1 = svg_coords_of_point(ctx[3], a),
        ay = match$1[2],
        ax = match$1[1],
        match$2 = svg_coords_of_point(ctx[3], b),
        by = match$2[2],
        bx = match$2[1];
       return caml_cps_exact_call3
               (svg_color_attribute,
                cst_stroke$2,
                stroke$2,
                function(_q_){
                 return caml_cps_call7
                         (Stdlib_Printf[4], _g_, ax, ay, bx, by, _q_, cont);
                });
      case 3:
       var
        p = s[1],
        fill$1 = p[3],
        stroke$1 = p[2],
        vertices = p[1],
        string_of_point =
          function(param, cont){
           var
            y$0 = param[2],
            x$0 = param[1],
            param$0 = svg_coords_of_point(ctx[3], [0, x$0, y$0]),
            y = param$0[2],
            x = param$0[1];
           return caml_cps_call4(Stdlib_Printf[4], _c_, x, y, cont);
          };
       return caml_cps_call3
               (Stdlib_List[19],
                string_of_point,
                vertices,
                function(_n_){
                 return caml_cps_call3
                         (Stdlib_String[6],
                          cst,
                          _n_,
                          function(points){
                           return caml_cps_exact_call3
                                   (svg_color_attribute,
                                    cst_fill$1,
                                    fill$1,
                                    function(_o_){
                                     return caml_cps_exact_call3
     (svg_color_attribute,
      cst_stroke$1,
      stroke$1,
      function(_p_){
       return caml_cps_call5
               (Stdlib_Printf[4], _f_, points, _p_, _o_, cont);
      });
                                    });
                          });
                });
      default:
       var shapes = s[1];
       return caml_cps_call3
               (Stdlib_List[19],
                function(_m_, cont){
                 return caml_cps_exact_call3(render_shape, ctx, _m_, cont);
                },
                shapes,
                function(_l_){
                 return caml_cps_call3(Stdlib_String[6], cst$0, _l_, cont);
                });
    }
   }
   function make_svg(ctx, cont){
    var shapes = ctx[1][1];
    return caml_cps_call3
            (Stdlib_List[19],
             function(_k_, cont){
              return caml_cps_exact_call3(render_shape, ctx, _k_, cont);
             },
             shapes,
             function(_j_){
              return caml_cps_call3
                      (Stdlib_String[6],
                       cst$1,
                       _j_,
                       function(svg){
                        var match = ctx[3], height = match[2], width = match[1];
                        return caml_cps_call5
                                (Stdlib_Printf[4], _h_, width, height, svg, cont);
                       });
             });
   }
   function write(ctx, cont){
    return caml_cps_exact_call2
            (make_svg,
             ctx,
             function(svg){
              var elt = ctx[5], t2 = caml_jsstring_of_string(svg);
              return cont(elt.innerHTML = t2);
             });
   }
   function show(ctx, shapes, cont){
    return caml_cps_call3
            (Stdlib[37],
             ctx[1][1],
             shapes,
             function(_i_){
              ctx[1][1] = _i_;
              return caml_cps_exact_call2(write, ctx, cont);
             });
   }
   function clear(ctx, cont){
    ctx[1][1] = ctx[2];
    return caml_cps_exact_call2(write, ctx, cont);
   }
   var Joy_Backend_svg = [0, show, create, make_svg, write, clear];
   runtime.caml_register_global(29, Joy_Backend_svg, "Joy__Backend_svg");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy__Context
//# unitInfo: Requires: Joy__Backend_cairo, Joy__Backend_lazy, Joy__Backend_svg, Stdlib
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_fresh_oo_id = runtime.caml_fresh_oo_id,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_pop_trap = runtime.caml_pop_trap;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_exact_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? f(a0, a1)
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   var undef = undefined;
   runtime.jsoo_create_file
    ("/static/cmis/joy__Context.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x05b\0\0\x01)\0\0\x04X\0\0\x043\xa0,Joy__Context\xa0\xc1\xa0'context\x01\x01D\b\0\0;\0@@\xa1\xa0\xe0\xa0,CairoContext\x01\x01\x17\x90\xa0\xc0\xb3\xa1\xa1\x90\x92%Joy__-Backend_cairo'context@\x90@\x02\x05\xf5\xe1\0@\0\xd8@@\xb0\xc0/lib/context.mliBOQ\xc0\x04\x02BOx@@\xa1\x04\x1cA\xa0\xe0\xa0*SVGContext\x01\x01\x1e\x90\xa0\xc0\xb3\xa1\xa1\x04\x15+Backend_svg'context@\x90@\x02\x05\xf5\xe1\0@\0\xd7@@\xb0\xc0\x04\x12Cy{\xc0\x04\x13Cy\0^@@\xa1\x04-B\xa0\xe0\xa0+LazyContext\x01\x01%\x90\xa0\xc0\xb3\xa1\xa1\x04&,Backend_lazy'context@\x90@\x02\x05\xf5\xe1\0@\0\xd6@@\xb0\xc0\x04#D\0_\0a\xc0\x04$D\0_\x01\0\x86@@\xa1\x04>C@@A@@@@@\xb0\xc0\x04'A@@\x04\x04@@@@\xa1\x04A@A@\xa0\xc2\xa0*No_context\x01\x01E\b\0\0#\0\x90\xa3#exnG@\x90@@A\xb0\xc0&_none_@@\0\xff\x04\x02A@\xa1\x04NDB@\xa0\xc2\xa09Unsupported_output_format\x01\x01F\b\0\0#\0\x04\r@\x90\xa0\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xd9@@A\x04\x11@\xa1\x04\\EB@\xa0\xb0\xa0+get_default\x01\x01G\xd0\xc0\xc1@\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xda\xc0\xb3\x90\x04i@\x90@\x02\x05\xf5\xe1\0@\0\xdb@\x02\x05\xf5\xe1\0@\0\xdc@\xb0\xc0\x04VI\x01\0\xcc\x01\0\xcc\xc0\x04WI\x01\0\xcc\x01\0\xed@@\xa1\x04qF@\xa0\xb0\xa0+set_default\x01\x01H\xd0\xc0\xc1@\xc0\xb3\x04\x0f@\x90@\x02\x05\xf5\xe1\0@\0\xdd\xc0\xb3\x90\x04\x18@\x90@\x02\x05\xf5\xe1\0@\0\xde@\x02\x05\xf5\xe1\0@\0\xdf@\xb0\xc0\x04hJ\x01\0\xee\x01\0\xee\xc0\x04iJ\x01\0\xee\x01\x01\x0f@@\xa1\x04\x83G@\xa0\xb0\xa0$show\x01\x01I\xd0\xc0\xc1\x91#ctx\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x04)@\x90@\x02\x05\xf5\xe1\0@\0\xe0@\x90@\x02\x05\xf5\xe1\0@\0\xe1\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\xa1\xa1\x04\x91%Shape%shape@\x90@\x02\x05\xf5\xe1\0@\0\xe2@\x90@\x02\x05\xf5\xe1\0@\0\xe3\xc0\xb3\x90\x04C@\x90@\x02\x05\xf5\xe1\0@\0\xe4@\x02\x05\xf5\xe1\0@\0\xe5@\x02\x05\xf5\xe1\0@\0\xe6@\xb0\xc0\x04\x93K\x01\x01\x10\x01\x01\x10\xc0\x04\x94K\x01\x01\x10\x01\x01C@@\xa1\x04\xaeH@\xa0\xb0\xa0%clear\x01\x01J\xd0\xc0\xc1\x91#ctx\xc0\xb3\x04+\xa0\xc0\xb3\x04Q@\x90@\x02\x05\xf5\xe1\0@\0\xe7@\x90@\x02\x05\xf5\xe1\0@\0\xe8\xc0\xc1@\xc0\xb3\x90\x04]@\x90@\x02\x05\xf5\xe1\0@\0\xe9\xc0\xb3\x90\x04a@\x90@\x02\x05\xf5\xe1\0@\0\xea@\x02\x05\xf5\xe1\0@\0\xeb@\x02\x05\xf5\xe1\0@\0\xec@\xb0\xc0\x04\xb1L\x01\x01D\x01\x01D\xc0\x04\xb2L\x01\x01D\x01\x01l@@\xa1\x04\xccI@\xa0\xb0\xa0.set_line_width\x01\x01K\xd0\xc0\xc1\x91#ctx\xc0\xb3\x04I\xa0\xc0\xb3\x04o@\x90@\x02\x05\xf5\xe1\0@\0\xed@\x90@\x02\x05\xf5\xe1\0@\0\xee\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\0\xef\xc0\xb3\x90\x04\x81@\x90@\x02\x05\xf5\xe1\0@\0\xf0@\x02\x05\xf5\xe1\0@\0\xf1@\x02\x05\xf5\xe1\0@\0\xf2@\xb0\xc0\x04\xd1M\x01\x01m\x01\x01m\xc0\x04\xd2M\x01\x01m\x01\x01\x9d@@\xa1\x04\xecJ@\xa0\xb0\xa0'makeSVG\x01\x01L\xd0\xc0\xc1\x91#ctx\xc0\xb3\x04i\xa0\xc0\xb3\x04\x8f@\x90@\x02\x05\xf5\xe1\0@\0\xf3@\x90@\x02\x05\xf5\xe1\0@\0\xf4\xc0\xc1@\xc0\xb3\x90\x04\x9b@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xb3\x90\x04\xad@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x04\xefO\x01\x01\x9f\x01\x01\x9f\xc0\x04\xf0O\x01\x01\x9f\x01\x01\xcb@@\xa1\x05\x01\nK@\xa0\xb0\xa0(writePNG\x01\x01M\xd0\xc0\xc1\x91#ctx\xc0\xb3\x04\x87\xa0\xc0\xb3\x04\xad@\x90@\x02\x05\xf5\xe1\0@\0\xf9@\x90@\x02\x05\xf5\xe1\0@\0\xfa\xc0\xc1@\xc0\xb3\x90\x04\xc7@\x90@\x02\x05\xf5\xe1\0@\0\xfb\xc0\xb3\x90\x04\xbd@\x90@\x02\x05\xf5\xe1\0@\0\xfc@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x05\x01\rP\x01\x01\xcc\x01\x01\xcc\xc0\x05\x01\x0eP\x01\x01\xcc\x01\x01\xf9@@\xa1\x05\x01(L@@\x84\x95\xa6\xbe\0\0\x02\xa7\0\0\0_\0\0\x01p\0\0\x01&\xa0\xa0,Joy__Context\x900C\x04\xa1\xe9\xa5\x80\x97j\xcbw\x1f\xde\x89r\xb7\x85\xa0\xa0-Stdlib__Uchar\x900\x9e\xa8d\bP\x95\x97\fs\xb7\xb1|&\xc3s\x17\xa0\xa0/Stdlib__Complex\x900\xd5\xf0A\xcc\xbe\x97\x83\xaf\x90\xca83p\x02\xfbN\xa0\xa00Stdlib__Bigarray\x900U\xa8\x12\xd9\xa3\xc8\x9ez\x8e\xbb\x91~c\xe4\xbe\xea\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08Js_of_ocaml__Typed_array\x900[W\xdd\xe9!\xd8\x0b\xa9\x81\x16\xf4j\x8e-\xd2\x9b\xa0\xa0/Js_of_ocaml__Js\x900;\xf2\xa5\xb5?\xc5\xf8\x85:r\x99\x03\xd9\xc9\xdb\xc2\xa0\xa01Js_of_ocaml__File\x900\x90\xf9I\xd23Q\xa6W+J\xb2\xd4\x9a\xeaM\xf6\xa0\xa05Js_of_ocaml__Dom_html\x900\xedMV\xa6za\xb0]\x8cy\xb5\x04xq\xb7W\xa0\xa00Js_of_ocaml__Dom\x900\xb7\x88ei\xb1Q\x0e\x9d\xe7\b[\x9by\xa4\xad\x8b\xa0\xa0-Js_of_ocaml__\x900\xcaj\xb7\x86\x16\t\xf3\xe0A\xc5\xee>Dn\x9f\x1f\xa0\xa0+Js_of_ocaml\x9006@}(\xe5\x12|@\x7f\xe4Gs\xe0\xd2\x1f\x07\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa00Joy__Backend_svg\x900\x8e\xf0$R\xfe\x1aE\xe3S\0\x8dX\xa5\xf3\x9da\xa0\xa01Joy__Backend_lazy\x900\xb7\xee\xc1\xf0`\xca\xb5\x1b\x8aC\xfb@\xc5\x9f\x93\xe5\xa0\xa02Joy__Backend_cairo\x900\xfe\xa8&b\x98\xfd\x0e\x91\xfc\xb3\x07/\xee\x7f\xfe\x97\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Joy_Backend_svg = global_data.Joy__Backend_svg,
    Stdlib = global_data.Stdlib,
    Joy_Backend_cairo = global_data.Joy__Backend_cairo,
    Joy_Backend_lazy = global_data.Joy__Backend_lazy,
    No_context = [248, "Joy__Context.No_context", caml_fresh_oo_id(0)],
    Unsupported_output_format =
      [248, "Joy__Context.Unsupported_output_format", caml_fresh_oo_id(0)],
    default$0 = [0, [2, runtime.caml_callback(Joy_Backend_lazy[2], [0])]],
    cst_SVG_set_line_width_ctx_int = "SVG.set_line_width ctx int",
    cst_Backend_lazy_set_line_widt = "Backend_lazy.set_line_width ctx int",
    cst_SVG_context_cannot_render_ = "SVG context cannot render to PNG",
    cst_Lazy_writePNG_ctx_filename = "Lazy.writePNG ctx filename",
    cst_Cairo_context_cannot_rende = "Cairo context cannot render to SVG",
    cst_Lazy_makeSVG_ctx = "Lazy.makeSVG ctx";
   function get_default(param, cont){return cont(default$0[1]);}
   function set_default(ctx, cont){default$0[1] = ctx; return cont(0);}
   function show(ctx, shapes, cont){
    function _e_(ctx){
     switch(ctx[0]){
       case 0:
        var ctx$0 = ctx[1];
        return caml_cps_call3(Joy_Backend_cairo[2], ctx$0, shapes, cont);
       case 1:
        var ctx$1 = ctx[1];
        return caml_cps_call3(Joy_Backend_svg[1], ctx$1, shapes, cont);
       default:
        var ctx$2 = ctx[1];
        return caml_cps_call3(Joy_Backend_lazy[1], ctx$2, shapes, cont);
     }
    }
    if(! ctx) return caml_cps_exact_call2(get_default, undef, _e_);
    var ctx$0 = ctx[1];
    return _e_(ctx$0);
   }
   function clear(ctx, param, cont){
    function _d_(ctx){
     switch(ctx[0]){
       case 0:
        var ctx$0 = ctx[1];
        return caml_cps_call2(Joy_Backend_cairo[5], ctx$0, cont);
       case 1:
        var ctx$1 = ctx[1];
        return caml_cps_call2(Joy_Backend_svg[5], ctx$1, cont);
       default:
        var ctx$2 = ctx[1];
        return caml_cps_call2(Joy_Backend_lazy[3], ctx$2, cont);
     }
    }
    if(! ctx) return caml_cps_exact_call2(get_default, undef, _d_);
    var ctx$0 = ctx[1];
    return _d_(ctx$0);
   }
   function set_line_width(ctx, int$0, cont){
    function _c_(ctx){
     switch(ctx[0]){
       case 0:
        var ctx$0 = ctx[1];
        return caml_cps_call3(Joy_Backend_cairo[3], ctx$0, int$0, cont);
       case 1:
        return caml_cps_call2(Stdlib[2], cst_SVG_set_line_width_ctx_int, cont);
       default:
        return caml_cps_call2(Stdlib[2], cst_Backend_lazy_set_line_widt, cont);
     }
    }
    if(! ctx) return caml_cps_exact_call2(get_default, undef, _c_);
    var ctx$0 = ctx[1];
    return _c_(ctx$0);
   }
   function writePNG(ctx, filename, cont){
    function _b_(ctx){
     switch(ctx[0]){
       case 0:
        var ctx$0 = ctx[1];
        return caml_cps_call3(Joy_Backend_cairo[4], ctx$0, filename, cont);
       case 1:
        var raise = caml_pop_trap();
        return raise
                (caml_maybe_attach_backtrace
                  ([0,
                    Unsupported_output_format,
                    cst_SVG_context_cannot_render_],
                   1));
       default:
        return caml_cps_call2(Stdlib[2], cst_Lazy_writePNG_ctx_filename, cont);
     }
    }
    if(! ctx) return caml_cps_exact_call2(get_default, undef, _b_);
    var ctx$0 = ctx[1];
    return _b_(ctx$0);
   }
   function makeSVG(ctx, param, cont){
    function _a_(ctx){
     switch(ctx[0]){
       case 0:
        var raise = caml_pop_trap();
        return raise
                (caml_maybe_attach_backtrace
                  ([0,
                    Unsupported_output_format,
                    cst_Cairo_context_cannot_rende],
                   1));
       case 1:
        var ctx$0 = ctx[1];
        return caml_cps_call2(Joy_Backend_svg[3], ctx$0, cont);
       default: return caml_cps_call2(Stdlib[2], cst_Lazy_makeSVG_ctx, cont);
     }
    }
    if(! ctx) return caml_cps_exact_call2(get_default, undef, _a_);
    var ctx$0 = ctx[1];
    return _a_(ctx$0);
   }
   var
    Joy_Context =
      [0,
       No_context,
       Unsupported_output_format,
       get_default,
       set_default,
       show,
       clear,
       set_line_width,
       makeSVG,
       writePNG];
   runtime.caml_register_global(12, Joy_Context, "Joy__Context");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Joy
//# unitInfo: Requires: Joy__Backend_cairo, Joy__Backend_svg, Joy__Color, Joy__Context, Joy__Random, Joy__Shape, Joy__Transform, Joy__Util
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_cps_call2(f, a0, a1){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 2
              ? f(a0, a1)
              : runtime.caml_call_gen(f, [a0, a1])
            : runtime.caml_trampoline_return(f, [a0, a1]);
   }
   function caml_cps_call3(f, a0, a1, a2){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 3
              ? f(a0, a1, a2)
              : runtime.caml_call_gen(f, [a0, a1, a2])
            : runtime.caml_trampoline_return(f, [a0, a1, a2]);
   }
   function caml_cps_call5(f, a0, a1, a2, a3, a4){
    return runtime.caml_stack_check_depth()
            ? (f.l
                >= 0
                ? f.l
                : f.l = f.length)
              == 5
              ? f(a0, a1, a2, a3, a4)
              : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4])
            : runtime.caml_trampoline_return(f, [a0, a1, a2, a3, a4]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/joy.cmi",
     "Caml1999I032\x84\x95\xa6\xbe\0\0\x14T\0\0\x04?\0\0\x10\x1d\0\0\x0f\xce\xa0#Joy\xa0\xd3\xa0'Context\x01\x01\x8bA\xc0\x93\xa1\x90\x92%Joy__'Context@\xb0\xc0+lib/joy.mliA@@\xc0\x04\x02A@X@\xa1\x04\x11@@@\xa0\xd3\xa0-Backend_cairo\x01\x01\x8cA\xc0\x93\xa1\x04\x10-Backend_cairo@\xb0\xc0\x04\rBYY\xc0\x04\x0eBY}@\xa1\x04\x1dA@@\xa0\xd3\xa0+Backend_svg\x01\x01\x8dA\xc0\x93\xa1\x04\x1c+Backend_svg@\xb0\xc0\x04\x19C~~\xc0\x04\x1aC~\0^@\xa1\x04)B@@\xa0\xd3\xa0,Backend_lazy\x01\x01\x8eA\xc0\x93\xa1\x04(,Backend_lazy@\xb0\xc0\x04%D\0_\0_\xc0\x04&D\0_\x01\0\x81@\xa1\x045C@@\xa0\xd3\xa0%Shape\x01\x01\x8fA\xc0\x93\xa1\x044%Shape@\xb0\xc0\x041E\x01\0\x82\x01\0\x82\xc0\x042E\x01\0\x82\x01\0\x96@\xa1\x04AD@@\xa0\xc1\xa0'context\x01\x01\x90\b\0\0;\0@@@A\x90\xc0\xb3\xa1\x90\x04H'context@\x90@\x02\x05\xf5\xe1\0@\x01\xffH@@@@\xb0\xc0\x04AG\x01\0\x98\x01\0\x98\xc0\x04BG\x01\0\x98\x01\0\xb6@@@@\xa1\x04QEA@\xa0\xc1\xa0%point\x01\x01\x91\b\0\0;\0\xa0\xc0\x90\x90!a\x02\x05\xf5\xe1\0@\x01\xffI@A@A\x90\xc0\xb3\xa1\x90\x04)%point\xa0\x04\x0b@\x90@\x02\x05\xf5\xe1\0@\x01\xffJ\xa0Y@\xa0@@@@\xb0\xc0\x04YH\x01\0\xb7\x01\0\xb7\xc0\x04ZH\x01\0\xb7\x01\0\xd5@@@@\xa1\x04iFA@\xa0\xc1\xa0%shape\x01\x01\x92\b\0\0;\0@@@A\x90\xc0\xb3\xa1\x04\x13%shape@\x90@\x02\x05\xf5\xe1\0@\x01\xffK@@@@\xb0\xc0\x04hI\x01\0\xd6\x01\0\xd6\xc0\x04iI\x01\0\xd6\x01\0\xee@@@@\xa1\x04xGA@\xa0\xc1\xa0&shapes\x01\x01\x93\b\0\0;\0@@@A\x90\xc0\xb3\xa1\x04\"&shapes@\x90@\x02\x05\xf5\xe1\0@\x01\xffL@@@@\xb0\xc0\x04wJ\x01\0\xef\x01\0\xef\xc0\x04xJ\x01\0\xef\x01\x01\t@@@@\xa1\x04\x87HA@\xa0\xc1\xa0.transformation\x01\x01\x94\b\0\0;\0@@@A\x90\xc0\xb3\xa1\xa1\x04\x89)Transform.transformation@\x90@\x02\x05\xf5\xe1\0@\x01\xffM@@@@\xb0\xc0\x04\x88K\x01\x01\n\x01\x01\n\xc0\x04\x89K\x01\x01\n\x01\x018@@@@\xa1\x04\x98IA@\xa0\xc1\xa0%color\x01\x01\x95\b\0\0;\0@@@A\x90\xc0\xb3\xa1\xa1\x04\x9a%Color%color@\x90@\x02\x05\xf5\xe1\0@\x01\xffN@@@@\xb0\xc0\x04\x99L\x01\x019\x01\x019\xc0\x04\x9aL\x01\x019\x01\x01Q@@@@\xa1\x04\xa9JA@\xa0\xb0\xa0%point\x01\x01\x96\xd0\xc0\xc1@\xc0\xb3\x90\xa3#intA@\x90@\x02\x05\xf5\xe1\0@\x01\xffO\xc0\xc1@\xc0\xb3\x90\x04\b@\x90@\x02\x05\xf5\xe1\0@\x01\xffP\xc0\xb3\x90\x04l\xa0\xc0\xb3\x90\xa3%floatD@\x90@\x02\x05\xf5\xe1\0@\x01\xffQ@\x90@\x02\x05\xf5\xe1\0@\x01\xffR@\x02\x05\xf5\xe1\0@\x01\xffS@\x02\x05\xf5\xe1\0@\x01\xffT@\xb0\xc0\x04\xbbN\x01\x01S\x01\x01S\xc0\x04\xbcN\x01\x01S\x01\x01x@@\xa1\x04\xcbK@\xa0\xb0\xa0&circle\x01\x01\x97\xd0\xc0\xc1\x91!c\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x04\x1e\xa0\xc0\xb3\x90\x04\x1d@\x90@\x02\x05\xf5\xe1\0@\x01\xffU@\x90@\x02\x05\xf5\xe1\0@\x01\xffV@\x90@\x02\x05\xf5\xe1\0@\x01\xffW\xc0\xc1@\xc0\xb3\x90\x045@\x90@\x02\x05\xf5\xe1\0@\x01\xffX\xc0\xb3\x90\x04\x81@\x90@\x02\x05\xf5\xe1\0@\x01\xffY@\x02\x05\xf5\xe1\0@\x01\xffZ@\x02\x05\xf5\xe1\0@\x01\xff[@\xb0\xc0\x04\xe1O\x01\x01y\x01\x01y\xc0\x04\xe2O\x01\x01y\x01\x01\xa4@@\xa1\x04\xf1L@\xa0\xb0\xa0)rectangle\x01\x01\x98\xd0\xc0\xc1\x91!c\xc0\xb3\x04&\xa0\xc0\xb3\x04A\xa0\xc0\xb3\x90\x04@@\x90@\x02\x05\xf5\xe1\0@\x01\xff\\@\x90@\x02\x05\xf5\xe1\0@\x01\xff]@\x90@\x02\x05\xf5\xe1\0@\x01\xff^\xc0\xc1@\xc0\xb3\x90\x04X@\x90@\x02\x05\xf5\xe1\0@\x01\xff_\xc0\xc1@\xc0\xb3\x90\x04^@\x90@\x02\x05\xf5\xe1\0@\x01\xff`\xc0\xb3\x04)@\x90@\x02\x05\xf5\xe1\0@\x01\xffa@\x02\x05\xf5\xe1\0@\x01\xffb@\x02\x05\xf5\xe1\0@\x01\xffc@\x02\x05\xf5\xe1\0@\x01\xffd@\xb0\xc0\x05\x01\tP\x01\x01\xa5\x01\x01\xa5\xc0\x05\x01\nP\x01\x01\xa5\x01\x01\xda@@\xa1\x05\x01\x19M@\xa0\xb0\xa0'ellipse\x01\x01\x99\xd0\xc0\xc1\x91!c\xc0\xb3\x04N\xa0\xc0\xb3\x04i\xa0\xc0\xb3\x90\x04h@\x90@\x02\x05\xf5\xe1\0@\x01\xffe@\x90@\x02\x05\xf5\xe1\0@\x01\xfff@\x90@\x02\x05\xf5\xe1\0@\x01\xffg\xc0\xc1@\xc0\xb3\x90\x04\x80@\x90@\x02\x05\xf5\xe1\0@\x01\xffh\xc0\xc1@\xc0\xb3\x90\x04\x86@\x90@\x02\x05\xf5\xe1\0@\x01\xffi\xc0\xb3\x04Q@\x90@\x02\x05\xf5\xe1\0@\x01\xffj@\x02\x05\xf5\xe1\0@\x01\xffk@\x02\x05\xf5\xe1\0@\x01\xffl@\x02\x05\xf5\xe1\0@\x01\xffm@\xb0\xc0\x05\x011Q\x01\x01\xdb\x01\x01\xdb\xc0\x05\x012Q\x01\x01\xdb\x01\x02\x0e@@\xa1\x05\x01AN@\xa0\xb0\xa0$line\x01\x01\x9a\xd0\xc0\xc1\x91!a\xc0\xb3\x04v\xa0\xc0\xb3\x04\x91\xa0\xc0\xb3\x90\x04\x90@\x90@\x02\x05\xf5\xe1\0@\x01\xffn@\x90@\x02\x05\xf5\xe1\0@\x01\xffo@\x90@\x02\x05\xf5\xe1\0@\x01\xffp\xc0\xc1@\xc0\xb3\x04\x9c\xa0\xc0\xb3\x90\x04\x9b@\x90@\x02\x05\xf5\xe1\0@\x01\xffq@\x90@\x02\x05\xf5\xe1\0@\x01\xffr\xc0\xb3\x04w@\x90@\x02\x05\xf5\xe1\0@\x01\xffs@\x02\x05\xf5\xe1\0@\x01\xfft@\x02\x05\xf5\xe1\0@\x01\xffu@\xb0\xc0\x05\x01WR\x01\x02\x0f\x01\x02\x0f\xc0\x05\x01XR\x01\x02\x0f\x01\x02@@@\xa1\x05\x01gO@\xa0\xb0\xa0'polygon\x01\x01\x9b\xd0\xc0\xc1@\xc0\xb3\x90\xa3$listI\xa0\xc0\xb3\x04\xb8\xa0\xc0\xb3\x90\x04\xb7@\x90@\x02\x05\xf5\xe1\0@\x01\xffv@\x90@\x02\x05\xf5\xe1\0@\x01\xffw@\x90@\x02\x05\xf5\xe1\0@\x01\xffx\xc0\xb3\x04\x94@\x90@\x02\x05\xf5\xe1\0@\x01\xffy@\x02\x05\xf5\xe1\0@\x01\xffz@\xb0\xc0\x05\x01tS\x01\x02A\x01\x02A\xc0\x05\x01uS\x01\x02A\x01\x02h@@\xa1\x05\x01\x84P@\xa0\xb0\xa0'complex\x01\x01\x9c\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\x14@\x90@\x02\x05\xf5\xe1\0@\x01\xff{\xc0\xb3\x04\xa6@\x90@\x02\x05\xf5\xe1\0@\x01\xff|@\x02\x05\xf5\xe1\0@\x01\xff}@\xb0\xc0\x05\x01\x86T\x01\x02i\x01\x02i\xc0\x05\x01\x87T\x01\x02i\x01\x02\x86@@\xa1\x05\x01\x96Q@\xa0\xb0\xa0&rotate\x01\x01\x9d\xd0\xc0\xc1@\xc0\xb3\x90\x04\xed@\x90@\x02\x05\xf5\xe1\0@\x01\xff~\xc0\xb3\x90\x05\x01\x1b@\x90@\x02\x05\xf5\xe1\0@\x01\xff\x7f@\x02\x05\xf5\xe1\0@\0\x80@\xb0\xc0\x05\x01\x99U\x01\x02\x87\x01\x02\x87\xc0\x05\x01\x9aU\x01\x02\x87\x01\x02\xa9@@\xa1\x05\x01\xa9R@\xa0\xb0\xa0)translate\x01\x01\x9e\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\0@\x90@\x02\x05\xf5\xe1\0@\0\x81\xc0\xc1@\xc0\xb3\x90\x05\x01\x06@\x90@\x02\x05\xf5\xe1\0@\0\x82\xc0\xb3\x04\x19@\x90@\x02\x05\xf5\xe1\0@\0\x83@\x02\x05\xf5\xe1\0@\0\x84@\x02\x05\xf5\xe1\0@\0\x85@\xb0\xc0\x05\x01\xb1V\x01\x02\xaa\x01\x02\xaa\xc0\x05\x01\xb2V\x01\x02\xaa\x01\x02\xd6@@\xa1\x05\x01\xc1S@\xa0\xb0\xa0%scale\x01\x01\x9f\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\b@\x90@\x02\x05\xf5\xe1\0@\0\x86\xc0\xb3\x04+@\x90@\x02\x05\xf5\xe1\0@\0\x87@\x02\x05\xf5\xe1\0@\0\x88@\xb0\xc0\x05\x01\xc3W\x01\x02\xd7\x01\x02\xd7\xc0\x05\x01\xc4W\x01\x02\xd7\x01\x02\xfa@@\xa1\x05\x01\xd3T@\xa0\xb0\xa0'compose\x01\x01\xa0\xd0\xc0\xc1@\xc0\xb3\x049@\x90@\x02\x05\xf5\xe1\0@\0\x89\xc0\xc1@\xc0\xb3\x04>@\x90@\x02\x05\xf5\xe1\0@\0\x8a\xc0\xb3\x04A@\x90@\x02\x05\xf5\xe1\0@\0\x8b@\x02\x05\xf5\xe1\0@\0\x8c@\x02\x05\xf5\xe1\0@\0\x8d@\xb0\xc0\x05\x01\xd9X\x01\x02\xfb\x01\x02\xfb\xc0\x05\x01\xdaX\x01\x02\xfb\x01\x03;@@\xa1\x05\x01\xe9U@\xa0\xb0\xa0&repeat\x01\x01\xa1\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01@@\x90@\x02\x05\xf5\xe1\0@\0\x8e\xc0\xc1@\xc0\xb3\x04U@\x90@\x02\x05\xf5\xe1\0@\0\x8f\xc0\xb3\x04X@\x90@\x02\x05\xf5\xe1\0@\0\x90@\x02\x05\xf5\xe1\0@\0\x91@\x02\x05\xf5\xe1\0@\0\x92@\xb0\xc0\x05\x01\xf0Y\x01\x03<\x01\x03<\xc0\x05\x01\xf1Y\x01\x03<\x01\x03p@@\xa1\x05\x02\0V@\xa0\xb0\xa0+with_stroke\x01\x01\xa2\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01p@\x90@\x02\x05\xf5\xe1\0@\0\x93\xc0\xb3\x04j@\x90@\x02\x05\xf5\xe1\0@\0\x94@\x02\x05\xf5\xe1\0@\0\x95@\xb0\xc0\x05\x02\x02Z\x01\x03q\x01\x03q\xc0\x05\x02\x03Z\x01\x03q\x01\x03\x9a@@\xa1\x05\x02\x12W@\xa0\xb0\xa0)with_fill\x01\x01\xa3\xd0\xc0\xc1@\xc0\xb3\x04\x12@\x90@\x02\x05\xf5\xe1\0@\0\x96\xc0\xb3\x04{@\x90@\x02\x05\xf5\xe1\0@\0\x97@\x02\x05\xf5\xe1\0@\0\x98@\xb0\xc0\x05\x02\x13[\x01\x03\x9b\x01\x03\x9b\xc0\x05\x02\x14[\x01\x03\x9b\x01\x03\xc2@@\xa1\x05\x02#X@\xa0\xb0\xa0*map_stroke\x01\x01\xa4\xd0\xc0\xc1@\xc0\xc1@\xc0\xb3\x04%@\x90@\x02\x05\xf5\xe1\0@\0\x99\xc0\xb3\x04(@\x90@\x02\x05\xf5\xe1\0@\0\x9a@\x02\x05\xf5\xe1\0@\0\x9b\xc0\xb3\x04\x91@\x90@\x02\x05\xf5\xe1\0@\0\x9c@\x02\x05\xf5\xe1\0@\0\x9d@\xb0\xc0\x05\x02)\\\x01\x03\xc3\x01\x03\xc3\xc0\x05\x02*\\\x01\x03\xc3\x01\x03\xf6@@\xa1\x05\x029Y@\xa0\xb0\xa0(map_fill\x01\x01\xa5\xd0\xc0\xc1@\xc0\xc1@\xc0\xb3\x04;@\x90@\x02\x05\xf5\xe1\0@\0\x9e\xc0\xb3\x04>@\x90@\x02\x05\xf5\xe1\0@\0\x9f@\x02\x05\xf5\xe1\0@\0\xa0\xc0\xb3\x04\xa7@\x90@\x02\x05\xf5\xe1\0@\0\xa1@\x02\x05\xf5\xe1\0@\0\xa2@\xb0\xc0\x05\x02?]\x01\x03\xf7\x01\x03\xf7\xc0\x05\x02@]\x01\x03\xf7\x01\x04(@@\xa1\x05\x02OZ@\xa0\xb0\xa0%black\x01\x01\xa6\xd0\xc0\xb3\x04M@\x90@\x02\x05\xf5\xe1\0@\0\xa3@\xb0\xc0\x05\x02K^\x01\x04)\x01\x04)\xc0\x05\x02L^\x01\x04)\x01\x04:@@\xa1\x05\x02[[@\xa0\xb0\xa0%white\x01\x01\xa7\xd0\xc0\xb3\x04Y@\x90@\x02\x05\xf5\xe1\0@\0\xa4@\xb0\xc0\x05\x02W_\x01\x04;\x01\x04;\xc0\x05\x02X_\x01\x04;\x01\x04L@@\xa1\x05\x02g\\@\xa0\xb0\xa0#red\x01\x01\xa8\xd0\xc0\xb3\x04e@\x90@\x02\x05\xf5\xe1\0@\0\xa5@\xb0\xc0\x05\x02c`\x01\x04M\x01\x04M\xc0\x05\x02d`\x01\x04M\x01\x04\\@@\xa1\x05\x02s]@\xa0\xb0\xa0%green\x01\x01\xa9\xd0\xc0\xb3\x04q@\x90@\x02\x05\xf5\xe1\0@\0\xa6@\xb0\xc0\x05\x02oa\x01\x04]\x01\x04]\xc0\x05\x02pa\x01\x04]\x01\x04n@@\xa1\x05\x02\x7f^@\xa0\xb0\xa0$blue\x01\x01\xaa\xd0\xc0\xb3\x04}@\x90@\x02\x05\xf5\xe1\0@\0\xa7@\xb0\xc0\x05\x02{b\x01\x04o\x01\x04o\xc0\x05\x02|b\x01\x04o\x01\x04\x7f@@\xa1\x05\x02\x8b_@\xa0\xb0\xa0&yellow\x01\x01\xab\xd0\xc0\xb3\x04\x89@\x90@\x02\x05\xf5\xe1\0@\0\xa8@\xb0\xc0\x05\x02\x87c\x01\x04\x80\x01\x04\x80\xc0\x05\x02\x88c\x01\x04\x80\x01\x04\x92@@\xa1\x05\x02\x97`@\xa0\xb0\xa0+transparent\x01\x01\xac\xd0\xc0\xb3\x04\x95@\x90@\x02\x05\xf5\xe1\0@\0\xa9@\xb0\xc0\x05\x02\x93d\x01\x04\x93\x01\x04\x93\xc0\x05\x02\x94d\x01\x04\x93\x01\x04\xaa@@\xa1\x05\x02\xa3a@\xa0\xb0\xa0#rgb\x01\x01\xad\xd0\xc0\xc1@\xc0\xb3\x90\x05\x01\xfa@\x90@\x02\x05\xf5\xe1\0@\0\xaa\xc0\xc1@\xc0\xb3\x90\x05\x02\0@\x90@\x02\x05\xf5\xe1\0@\0\xab\xc0\xc1@\xc0\xb3\x90\x05\x02\x06@\x90@\x02\x05\xf5\xe1\0@\0\xac\xc0\xb3\x04\xb3@\x90@\x02\x05\xf5\xe1\0@\0\xad@\x02\x05\xf5\xe1\0@\0\xae@\x02\x05\xf5\xe1\0@\0\xaf@\x02\x05\xf5\xe1\0@\0\xb0@\xb0\xc0\x05\x02\xb1e\x01\x04\xab\x01\x04\xab\xc0\x05\x02\xb2e\x01\x04\xab\x01\x04\xcf@@\xa1\x05\x02\xc1b@\xa0\xb0\xa0%color\x01\x01\xae\xd0\xc0\xc1\x91!a\xc0\xb3\x05\x01\xf6\xa0\xc0\xb3\x90\x05\x02\r@\x90@\x02\x05\xf5\xe1\0@\0\xb1@\x90@\x02\x05\xf5\xe1\0@\0\xb2\xc0\xc1@\xc0\xb3\x90\x05\x02$@\x90@\x02\x05\xf5\xe1\0@\0\xb3\xc0\xc1@\xc0\xb3\x90\x05\x02*@\x90@\x02\x05\xf5\xe1\0@\0\xb4\xc0\xc1@\xc0\xb3\x90\x05\x020@\x90@\x02\x05\xf5\xe1\0@\0\xb5\xc0\xb3\x04\xdd@\x90@\x02\x05\xf5\xe1\0@\0\xb6@\x02\x05\xf5\xe1\0@\0\xb7@\x02\x05\xf5\xe1\0@\0\xb8@\x02\x05\xf5\xe1\0@\0\xb9@\x02\x05\xf5\xe1\0@\0\xba@\xb0\xc0\x05\x02\xdbf\x01\x04\xd0\x01\x04\xd0\xc0\x05\x02\xdcf\x01\x04\xd0\x01\x05\x02@@\xa1\x05\x02\xebc@\xa0\xb0\xa0$init\x01\x01\xaf\xd0\xc0\xc1\x91$size\xc0\xb3\x05\x02 \xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x02J@\x90@\x02\x05\xf5\xe1\0@\0\xbc\xa0\xc0\xb3\x90\x05\x02O@\x90@\x02\x05\xf5\xe1\0@\0\xbb@\x02\x05\xf5\xe1\0@\0\xbd@\x90@\x02\x05\xf5\xe1\0@\0\xbe\xc0\xc1\x91*line_width\xc0\xb3\x05\x024\xa0\xc0\xb3\x90\x05\x02[@\x90@\x02\x05\xf5\xe1\0@\0\xbf@\x90@\x02\x05\xf5\xe1\0@\0\xc0\xc0\xc1\x91$axes\xc0\xb3\x05\x02@\xa0\xc0\xb3\x90\xa3$boolE@\x90@\x02\x05\xf5\xe1\0@\0\xc1@\x90@\x02\x05\xf5\xe1\0@\0\xc2\xc0\xc1@\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xc3\xc0\xb3\x90\x04\x06@\x90@\x02\x05\xf5\xe1\0@\0\xc4@\x02\x05\xf5\xe1\0@\0\xc5@\x02\x05\xf5\xe1\0@\0\xc6@\x02\x05\xf5\xe1\0@\0\xc7@\x02\x05\xf5\xe1\0@\0\xc8@\xb0\xc0\x05\x03\x1eg\x01\x05\x03\x01\x05\x03\xc0\x05\x03\x1fg\x01\x05\x03\x01\x05N@@\xa1\x05\x03.d@\xa0\xb0\xa0(init_svg\x01\x01\xb0\xd0\xc0\xc1\x91$size\xc0\xb3\x05\x02c\xa0\xc0\x92\xa0\xc0\xb3\x90\x05\x02\x8d@\x90@\x02\x05\xf5\xe1\0@\0\xca\xa0\xc0\xb3\x90\x05\x02\x92@\x90@\x02\x05\xf5\xe1\0@\0\xc9@\x02\x05\xf5\xe1\0@\0\xcb@\x90@\x02\x05\xf5\xe1\0@\0\xcc\xc0\xc1\x91$axes\xc0\xb3\x05\x02w\xa0\xc0\xb3\x90\x047@\x90@\x02\x05\xf5\xe1\0@\0\xcd@\x90@\x02\x05\xf5\xe1\0@\0\xce\xc0\xc1@\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xcf\xc0\xb3\x90\x04;@\x90@\x02\x05\xf5\xe1\0@\0\xd0@\x02\x05\xf5\xe1\0@\0\xd1@\x02\x05\xf5\xe1\0@\0\xd2@\x02\x05\xf5\xe1\0@\0\xd3@\xb0\xc0\x05\x03Sh\x01\x05O\x01\x05O\xc0\x05\x03Th\x01\x05O\x01\x05\x8d@@\xa1\x05\x03ce@\xa0\xb0\xa0%write\x01\x01\xb1\xd0\xc0\xc1\x91(filename\xc0\xb3\x05\x02\x98\xa0\xc0\xb3\x90\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xd4@\x90@\x02\x05\xf5\xe1\0@\0\xd5\xc0\xc1@\xc0\xb3\x90\x04V@\x90@\x02\x05\xf5\xe1\0@\0\xd6\xc0\xb3\x90\x04Z@\x90@\x02\x05\xf5\xe1\0@\0\xd7@\x02\x05\xf5\xe1\0@\0\xd8@\x02\x05\xf5\xe1\0@\0\xd9@\xb0\xc0\x05\x03ri\x01\x05\x8e\x01\x05\x8e\xc0\x05\x03si\x01\x05\x8e\x01\x05\xba@@\xa1\x05\x03\x82f@\xa0\xb0\xa0$show\x01\x01\xb2\xd0\xc0\xc1\x91#ctx\xc0\xb3\x05\x02\xb7\xa0\xc0\xb3\x90\x05\x03N@\x90@\x02\x05\xf5\xe1\0@\0\xda@\x90@\x02\x05\xf5\xe1\0@\0\xdb\xc0\xc1@\xc0\xb3\x05\x02\n@\x90@\x02\x05\xf5\xe1\0@\0\xdc\xc0\xb3\x90\x04x@\x90@\x02\x05\xf5\xe1\0@\0\xdd@\x02\x05\xf5\xe1\0@\0\xde@\x02\x05\xf5\xe1\0@\0\xdf@\xb0\xc0\x05\x03\x90j\x01\x05\xbb\x01\x05\xbb\xc0\x05\x03\x91j\x01\x05\xbb\x01\x05\xe4@@\xa1\x05\x03\xa0g@\xa0\xb0\xa0%clear\x01\x01\xb3\xd0\xc0\xc1\x91#ctx\xc0\xb3\x05\x02\xd5\xa0\xc0\xb3\x04\x1e@\x90@\x02\x05\xf5\xe1\0@\0\xe0@\x90@\x02\x05\xf5\xe1\0@\0\xe1\xc0\xc1@\xc0\xb3\x90\x04\x92@\x90@\x02\x05\xf5\xe1\0@\0\xe2\xc0\xb3\x90\x04\x96@\x90@\x02\x05\xf5\xe1\0@\0\xe3@\x02\x05\xf5\xe1\0@\0\xe4@\x02\x05\xf5\xe1\0@\0\xe5@\xb0\xc0\x05\x03\xaek\x01\x05\xe5\x01\x05\xe5\xc0\x05\x03\xafk\x01\x05\xe5\x01\x06\r@@\xa1\x05\x03\xbeh@\xa0\xb0\xa0.set_line_width\x01\x01\xb4\xd0\xc0\xc1\x91#ctx\xc0\xb3\x05\x02\xf3\xa0\xc0\xb3\x04<@\x90@\x02\x05\xf5\xe1\0@\0\xe6@\x90@\x02\x05\xf5\xe1\0@\0\xe7\xc0\xc1@\xc0\xb3\x90\x05\x03 @\x90@\x02\x05\xf5\xe1\0@\0\xe8\xc0\xb3\x90\x04\xb4@\x90@\x02\x05\xf5\xe1\0@\0\xe9@\x02\x05\xf5\xe1\0@\0\xea@\x02\x05\xf5\xe1\0@\0\xeb@\xb0\xc0\x05\x03\xccl\x01\x06\x0e\x01\x06\x0e\xc0\x05\x03\xcdl\x01\x06\x0e\x01\x06>@@\xa1\x05\x03\xdci@\xa0\xb0\xa0&random\x01\x01\xb5\xd0\xc0\xc1\x91#min\xc0\xb3\x05\x03\x11\xa0\xc0\xb3\x90\x05\x038@\x90@\x02\x05\xf5\xe1\0@\0\xec@\x90@\x02\x05\xf5\xe1\0@\0\xed\xc0\xc1@\xc0\xb3\x90\x05\x03?@\x90@\x02\x05\xf5\xe1\0@\0\xee\xc0\xb3\x90\x05\x03C@\x90@\x02\x05\xf5\xe1\0@\0\xef@\x02\x05\xf5\xe1\0@\0\xf0@\x02\x05\xf5\xe1\0@\0\xf1@\xb0\xc0\x05\x03\xebn\x01\x06@\x01\x06@\xc0\x05\x03\xecn\x01\x06@\x01\x06c@@\xa1\x05\x03\xfbj@\xa0\xb0\xa0'frandom\x01\x01\xb6\xd0\xc0\xc1\x91#min\xc0\xb3\x05\x030\xa0\xc0\xb3\x90\x05\x03G@\x90@\x02\x05\xf5\xe1\0@\0\xf2@\x90@\x02\x05\xf5\xe1\0@\0\xf3\xc0\xc1@\xc0\xb3\x90\x05\x03N@\x90@\x02\x05\xf5\xe1\0@\0\xf4\xc0\xb3\x90\x05\x03R@\x90@\x02\x05\xf5\xe1\0@\0\xf5@\x02\x05\xf5\xe1\0@\0\xf6@\x02\x05\xf5\xe1\0@\0\xf7@\xb0\xc0\x05\x04\no\x01\x06d\x01\x06d\xc0\x05\x04\x0bo\x01\x06d\x01\x06\x8e@@\xa1\x05\x04\x1ak@\xa0\xb0\xa0-fractal_noise\x01\x01\xb7\xd0\xc0\xc1\x91'octaves\xc0\xb3\x05\x03O\xa0\xc0\xb3\x90\x05\x03v@\x90@\x02\x05\xf5\xe1\0@\0\xf8@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xc1@\xc0\xb3\x90\x05\x02\xbf\xa0\xc0\xb3\x90\x05\x03q@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x90@\x02\x05\xf5\xe1\0@\0\xfb\xc0\xb3\x90\x05\x03v@\x90@\x02\x05\xf5\xe1\0@\0\xfc@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x05\x04.p\x01\x06\x8f\x01\x06\x8f\xc0\x05\x04/p\x01\x06\x8f\x01\x06\xc6@@\xa1\x05\x04>l@@\x84\x95\xa6\xbe\0\0\x02\xe2\0\0\0i\0\0\x01\x93\0\0\x01C\xa0\xa0#Joy\x900\xd5h\xec\x97\xf2:\x15\x19FF\xb1\xc5\xd5\xf3\xe8n\xa0\xa0-Stdlib__Uchar\x900\x9e\xa8d\bP\x95\x97\fs\xb7\xb1|&\xc3s\x17\xa0\xa0/Stdlib__Complex\x900\xd5\xf0A\xcc\xbe\x97\x83\xaf\x90\xca83p\x02\xfbN\xa0\xa00Stdlib__Bigarray\x900U\xa8\x12\xd9\xa3\xc8\x9ez\x8e\xbb\x91~c\xe4\xbe\xea\xa0\xa0&Stdlib\x900\x85\xf8]\xdbG\xed\xc0\xc7W\x96W\xee\xe7@0-\xa0\xa08Js_of_ocaml__Typed_array\x900[W\xdd\xe9!\xd8\x0b\xa9\x81\x16\xf4j\x8e-\xd2\x9b\xa0\xa0/Js_of_ocaml__Js\x900;\xf2\xa5\xb5?\xc5\xf8\x85:r\x99\x03\xd9\xc9\xdb\xc2\xa0\xa01Js_of_ocaml__File\x900\x90\xf9I\xd23Q\xa6W+J\xb2\xd4\x9a\xeaM\xf6\xa0\xa05Js_of_ocaml__Dom_html\x900\xedMV\xa6za\xb0]\x8cy\xb5\x04xq\xb7W\xa0\xa00Js_of_ocaml__Dom\x900\xb7\x88ei\xb1Q\x0e\x9d\xe7\b[\x9by\xa4\xad\x8b\xa0\xa0-Js_of_ocaml__\x900\xcaj\xb7\x86\x16\t\xf3\xe0A\xc5\xee>Dn\x9f\x1f\xa0\xa0+Js_of_ocaml\x9006@}(\xe5\x12|@\x7f\xe4Gs\xe0\xd2\x1f\x07\xa0\xa0.Joy__Transform\x900\xf0I1\x97}\xc6'~-\xf4\x9c*B\xd1\xd4\xec\xa0\xa0*Joy__Shape\x900j\xd2\xc9\xe0\xfc\x9a9\xcca#\xfa,c\xe2\xbc2\xa0\xa0,Joy__Context\x900C\x04\xa1\xe9\xa5\x80\x97j\xcbw\x1f\xde\x89r\xb7\x85\xa0\xa0*Joy__Color\x900\x9b$\xa9'd\x82\xf4B\xf2\xc0qSc\x9c;\x83\xa0\xa00Joy__Backend_svg\x900\x8e\xf0$R\xfe\x1aE\xe3S\0\x8dX\xa5\xf3\x9da\xa0\xa01Joy__Backend_lazy\x900\xb7\xee\xc1\xf0`\xca\xb5\x1b\x8aC\xfb@\xc5\x9f\x93\xe5\xa0\xa02Joy__Backend_cairo\x900\xfe\xa8&b\x98\xfd\x0e\x91\xfc\xb3\x07/\xee\x7f\xfe\x97\xa0\xa0%Joy__\x900w\xb9\xca\xe2\x8d\xac\xa3\xf0r\xff6\x86\x03\xe5\xea\xf3\xa0\xa08CamlinternalFormatBasics\x900\xce\xcf\xaf\xd5\xc0!G?^5\x8c\x96\xacu\x02\xa0@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Joy_Context = global_data.Joy__Context,
    Joy_Backend_svg = global_data.Joy__Backend_svg,
    Joy_Color = global_data.Joy__Color,
    Joy_Backend_cairo = global_data.Joy__Backend_cairo,
    Joy_Util = global_data.Joy__Util,
    Joy_Shape = global_data.Joy__Shape,
    Joy_Transform = global_data.Joy__Transform,
    Joy_Random = global_data.Joy__Random,
    point = Joy_Shape[1],
    circle = Joy_Shape[2],
    rectangle = Joy_Shape[3],
    ellipse = Joy_Shape[4],
    complex = Joy_Shape[5],
    line = Joy_Shape[6],
    polygon = Joy_Shape[7],
    with_stroke = Joy_Shape[8],
    with_fill = Joy_Shape[9],
    translate = Joy_Transform[1],
    scale = Joy_Transform[2],
    rotate = Joy_Transform[3],
    compose = Joy_Transform[4],
    repeat = Joy_Transform[5],
    map_fill = Joy_Transform[6],
    map_stroke = Joy_Transform[7],
    rgb = Joy_Color[1],
    color = Joy_Color[2],
    black = Joy_Color[3],
    white = Joy_Color[4],
    red = Joy_Color[5],
    green = Joy_Color[6],
    blue = Joy_Color[7],
    yellow = Joy_Color[8],
    transparent = Joy_Color[9],
    random = Joy_Random[4],
    frandom = Joy_Random[5],
    fractal_noise = Joy_Random[7],
    show = Joy_Context[5],
    clear = Joy_Context[6],
    set_line_width = Joy_Context[7],
    _a_ = [0, 0.5],
    _b_ = [0, 500, 500],
    _c_ = [0, 500, 500],
    cst_joy_png = "joy.png";
   function init(opt, _p_, _o_, param, cont){
    if(opt) var sth = opt[1], size = sth; else var size = _b_;
    if(_p_) var sth$0 = _p_[1], line_width = sth$0; else var line_width = 1;
    if(_o_) var sth$1 = _o_[1], axes = sth$1; else var axes = 0;
    return caml_cps_call5
            (Joy_Backend_cairo[1],
             Joy_Color[4],
             size,
             line_width,
             axes,
             function(ctx){
              var ctx_container = [0, ctx];
              return caml_cps_call2
                      (Joy_Context[4],
                       ctx_container,
                       function(_q_){
                        return caml_cps_call3(show, [0, ctx_container], 0, cont);
                       });
             });
   }
   function init_svg(opt, _d_, eltId, cont){
    if(opt) var sth = opt[1], size = sth; else var size = _c_;
    if(_d_) var sth$0 = _d_[1], axes = sth$0; else var axes = 0;
    function _e_(init_shapes){
     return caml_cps_call5
             (Joy_Backend_svg[2],
              size,
              axes,
              init_shapes,
              eltId,
              function(ctx){
               var ctx_container = [1, ctx];
               return caml_cps_call2
                       (Joy_Context[4],
                        ctx_container,
                        function(_n_){
                         return caml_cps_call3(show, [0, ctx_container], 0, cont);
                        });
              });
    }
    return axes
            ? caml_cps_call2
              (Joy_Util[6],
               function(_m_, cont){return cont(_m_);},
               function(_f_){
                return caml_cps_call2
                        (_f_,
                         size,
                         function(_g_){
                          return caml_cps_call2
                                  (Joy_Util[6],
                                   function(x, cont){return cont(x / 2.);},
                                   function(_h_){
                                    return caml_cps_call2
    (_h_,
     _g_,
     function(match){
      var half_h = match[2], half_w = match[1];
      return caml_cps_call5
              (Joy_Color[2],
               _a_,
               128,
               128,
               128,
               function(gray){
                return caml_cps_call3
                        (line,
                         [0, [0, - half_w, 0.]],
                         [0, half_w, 0.],
                         function(_i_){
                          return caml_cps_call2
                                  (with_stroke,
                                   gray,
                                   function(_j_){
                                    return caml_cps_call2
    (_j_,
     _i_,
     function(x_axis){
      return caml_cps_call3
              (line,
               [0, [0, 0., - half_h]],
               [0, 0., half_h],
               function(_k_){
                return caml_cps_call2
                        (with_stroke,
                         gray,
                         function(_l_){
                          return caml_cps_call2
                                  (_l_,
                                   _k_,
                                   function(y_axis){return _e_([0, x_axis, [0, y_axis, 0]]);});
                         });
               });
     });
                                   });
                         });
               });
     });
                                   });
                         });
               })
            : _e_(0);
   }
   function write(opt, param, cont){
    if(opt) var sth = opt[1], filename = sth; else var filename = cst_joy_png;
    return caml_cps_call3(Joy_Context[9], 0, filename, cont);
   }
   var
    Joy =
      [0,
       point,
       circle,
       rectangle,
       ellipse,
       line,
       polygon,
       complex,
       rotate,
       translate,
       scale,
       compose,
       repeat,
       with_stroke,
       with_fill,
       map_stroke,
       map_fill,
       black,
       white,
       red,
       green,
       blue,
       yellow,
       transparent,
       rgb,
       color,
       init,
       init_svg,
       write,
       show,
       clear,
       set_line_width,
       random,
       frandom,
       fractal_noise];
   runtime.caml_register_global(17, Joy, "Joy");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
